<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.xen.admin">
 <title>Administration Tasks</title>
 <para></para>
 <sect1 id="sec.xen.config.bootloader">
  <title>The Boot Loader Program</title>

  <para>
   The boot loader controls how the virtualization software boots and runs.
   You can modify the boot loader properties by using &yast;, or by directly
   editing the boot loader configuration file.
  </para>

  <para>
   The &yast; boot loader program is located at <menuchoice>
   <guimenu>&yast;</guimenu> <guimenu>System</guimenu> <guimenu>Boot
   Loader</guimenu> </menuchoice>. The Boot Loader Settings screen lists the
   sections that appear as options on the boot menu. From this screen, you
   can change the boot loader so it auto-selects the virtual machine host
   option when booting.
  </para>

  <figure>
   <title>Boot Loader Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="xen_bootloader.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="xen_bootloader.png" width="80%" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   Select the <guimenu>&xen;</guimenu> section, then click
   <guimenu>Edit</guimenu> to manage the way the boot loader and &xen;
   function.
  </para>

  <figure>
   <title>Boot Loader Settings: Section Management</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="xen_boot_section.png" width="70%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="xen_boot_section.png" width="70%" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   You can use the Boot Loader program to specify functionality, such as:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Pass kernel command line parameters.
    </para>
   </listitem>
   <listitem>
    <para>
     Specify the kernel image and initial RAM disk.
    </para>
   </listitem>
   <listitem>
    <para>
     Select a specific hypervisor.
    </para>
   </listitem>
   <listitem>
    <para>
     Pass additional parameters to the hypervisor (see
     <filename>/usr/share/doc/packages/xen/pdf/user.pdf</filename> section
     <quote>&xen; Boot Options</quote> after installing the package
     <systemitem>xen-doc-pdf</systemitem>).
    </para>
   </listitem>
  </itemizedlist>

  <para>
   You can customize your virtualization environment by editing the
   <filename>/boot/grub/menu.lst</filename> file.
  </para>

  <para>
   If the &xen; option does not appear on the &grub; boot menu, you can
   compare your updated &grub; boot loader file with the examples below to
   confirm that it was updated correctly.
  </para>

  <para>
   The first example shows a typical &grub; boot loader file updated to load
   the kernel that supports virtualization software. The second example
   shows a &grub; boot loader file that loads the PAE-enabled virtualization
   kernel.
  </para>

  <example>
   <title>&xen; Section in the <filename>menu.lst</filename> File (Typical)</title>
<screen>
title XEN
 root (hd0,5)
 kernel /boot/xen.gz <replaceable>hyper_parameters</replaceable>
 module /boot/vmlinuz-xen <replaceable>kernel_parameters</replaceable>
 module /boot/initrd-xen
</screen>
  </example>

  <para>
   The <systemitem>title</systemitem> line defines sections in the boot
   loader file. Do not change this line, because &yast; looks for the word
   <guimenu>XEN</guimenu> to verify that packages are installed.
  </para>

  <para>
   The <systemitem>root</systemitem> line specifies which partition holds
   the boot partition and <filename>/boot</filename> directory. Replace
   <systemitem>hd0,5</systemitem> with the correct partition. For example,
   if the drive designated as <filename>hda1</filename> holds the
   <filename>/boot</filename> directory, the entry would be
   <replaceable>hd0,0</replaceable>.
  </para>

  <para>
   The <systemitem>kernel</systemitem> line specifies the directory and
   filename of the hypervisor. Replace
   <replaceable>hyper_parameters</replaceable> with the parameters to pass
   to the hypervisor. A common parameter is
   <systemitem>dom0_mem=&lt;amount_of_memory&gt;</systemitem>, which
   specifies how much memory to allocate to &dom0;. The amount of memory is
   specified in KB, or you can specify the units with a K, M, or G suffix,
   for example 128M. If the amount is not specified, the &dom0; takes the
   maximum possible memory for its operations.
  </para>

  <para>
   For more information about hypervisor parameters, see
   <filename>/usr/share/doc/packages/xen/pdf/user.pdf</filename> section
   <quote>&xen; Boot Options</quote> after installing the package
   <systemitem>xen-doc-pdf</systemitem>.
  </para>

  <para>
   The first <command>module</command> line specifies the directory and
   filename of the Linux kernel to load. Replace <literal>
   <replaceable>kernel_parameters</replaceable></literal> with the
   parameters to pass to the kernel. These parameters are the same
   parameters as those that can be passed to a standard Linux kernel on
   physical computer hardware.
  </para>

  <para>
   The second <command>module</command> line specifies the directory and
   filename of the RAM disk used to boot the virtual machine host.
  </para>

  <para>
   To set the &grub; boot loader to automatically boot the &xen;
   virtualization software, change the <command> default</command> entry
   from <command>0</command>, which means the first <command>title</command>
   entry, to the number that corresponds to the <command>title XEN</command>
   entry. In the example file, &xen; is the second <command>title</command>
   line. To specify it, change the value of <command>default from
   0</command> to <command>1</command>.
  </para>
 </sect1>
 <sect1 id="sec.xen.config.sparse">
  <title>Sparse Image Files and Disk Space</title>

  <para>
   If the host’s physical disk reaches a state where it has no available
   space, a virtual machine using a virtual disk based on a sparse image
   file is unable to write to its disk. Consequently, it reports I/O errors.
  </para>

  <para>
   The Reiser file system, perceiving a corrupt disk environment,
   automatically sets the file system to read-only. If this situation
   happens, you should free up available space on the physical disk, remount
   the virtual machine’s file system, and set the file system back to
   read-write.
  </para>

  <para>
   To check the actual disk requirements of a sparse image file, use the
   command <command>du -h &lt;image file&gt;</command>.
  </para>

  <para>
   To increase the available space of a sparse image file, first increase
   the file size and then the file system.
  </para>

  <warning>
   <title>Backup Before Resize</title>
   <para>
    Touching the sizes of partitions or sparse files always bears the risk
    of data failure. Do not work without a backup.
   </para>
  </warning>

  <para>
   The resizing of the image file can be done online, while the &vmguest; is
   running. Increase the size of a sparse image file with:
  </para>

<screen>dd if=/dev/zero of=&lt;image file&gt; count=0 bs=1M seek=&lt;new size in MB&gt;</screen>

  <para>
   For example, to increase the file
   <filename>/var/lib/xen/images/sles11/disk0</filename> to a size of 16GB,
   use the command:
  </para>

<screen>dd if=/dev/zero of=/var/lib/xen/images/sles11/disk0 count=0 bs=1M seek=16000</screen>

  <note>
   <title>Increasing Non Sparse Images</title>
   <para>
    It is also possible to increase the image files of devices that are not
    sparse files. However, you must know exactly where the previous image
    ends. Use the seek parameter to point to the end of the image file and
    use a command similar to the following:
   </para>
<screen>dd if=/dev/zero of=/var/lib/xen/images/sles11/disk0 seek=8000 bs=1M count=2000</screen>
  </note>

  <para>
   Be sure to use the right seek, else data loss may happen.
  </para>

  <para>
   If the &vmguest; is running during the resize operation, also resize the
   loop device that provides the image file to the &vmguest;. First detect
   the correct loop device with the command:
  </para>

<screen>losetup -j /var/lib/xen/images/sles11/disk0</screen>

  <para>
   Then resize the loop device, for example, <filename>/dev/loop0</filename>
   with the following command:
  </para>

<screen>losetup -c /dev/loop0</screen>

  <para>
   Finally check the size of the block device inside the guest system with
   the command <command>fdisk -l /dev/xvdb</command>. The device name
   depends on the actually increased device.
  </para>

  <para>
   The resizing of the file system inside the sparse file involves tools
   that are depending on the actual file system. This is described in detail
   in the Storage Administration Guide, found at
   <ulink
    url="http://www.suse.com/doc/sles11/stor_admin/data/bookinfo.html"/>.
  </para>
 </sect1>
 <sect1 id="sec.xen.config.vmigrate">
  <title>Migrating Virtual Machines</title>

  <para>
   A running virtual machine can be migrated from its source virtual machine
   host to another virtual machine host. This functionality is referred to
   as <emphasis>live migration</emphasis>. For live migration the virtual
   machine being migrated must have access to its storage in exactly the
   same location on both, source and destination host platforms.
  </para>

  <para>
   Live migration only works when every entity involved has the same
   architecture. For example, a 64-bit paravirtualized guest running on a
   64-bit hypervisor can be migrated to a host running a 64-bit hypervisor.
   If any of the pieces do not match exactly, migration will fail.
  </para>

  <para>
   Another requirement is, that the involved file systems are available on
   both machines. The options to accomplish this task include
   <literal>Network Block Devices</literal> (NBD), iSCSI, NFS, DRBD and
   fiber channel devices. Furthermore, the routing of the network connection
   to the virtual network device must be correct.
  </para>

  <para>
   The following Xend options, which are located in the
   <filename>/etc/xen/xend-config.sxp</filename> file, need to be set on
   both hosts to make live migration work.
  </para>

<screen>
(xend-relocation-server yes)
(xend-relocation-port 8002)
(xend-relocation-address ")
(xend-relocation-hosts-allow ")
</screen>

  <para>
   For information on modifying Xend settings, see
   <xref linkend="sec.xen.manage.xend" xrefstyle="SectTitleOnPage"/>. For
   more details about using xm to migrate &vmguest; systems, see
   <xref
    linkend="sec.xen.manage.migrate"/>.
  </para>
 </sect1>
 <sect1 id="sec.xen.config.keys">
  <title>Passing Key Combinations to Virtual Machines</title>

  <para>
   In a virtual machine window, some key combinations, such as <keycombo>
   <keycap function="control"></keycap> <keycap function="alt"></keycap>
   <keycap>F1</keycap> </keycombo>, are recognized by the virtual machine
   host but are not passed to the virtual machine. To bypass the virtual
   machine host, Virtual Machine Manager provides sticky key functionality.
   Pressing <keycap function="control"></keycap>,
   <keycap function="alt"></keycap>, or <keycap function="shift"></keycap >
   three times makes the key sticky, then you can press the remaining keys
   to pass the combination to the virtual machine.
  </para>

  <para>
   For example, to pass <keycombo> <keycap function="control"></keycap>
   <keycap function="alt"></keycap> <keycap>F2</keycap> </keycombo> to a
   Linux virtual machine, press <keycap function="control"></keycap> three
   times, then press <keycombo> <keycap function="alt"></keycap>
   <keycap>F2</keycap> </keycombo>. You can also press
   <keycap function="alt"></keycap> three times, then press <keycombo>
   <keycap function="control"></keycap> <keycap>F2</keycap> </keycombo>.
  </para>

  <para>
   The sticky key functionality is available in the Virtual Machine Manager
   during and after installing a virtual machine.
  </para>
 </sect1>
 <sect1 id="sec.xen.monitor">
  <title>Monitoring &xen;</title>

  <para>
   For a regular operation of many virtual guests, having a possibility to
   check the sanity of all the different &vmguest; systems indispensable.
   &xen; offers several tools besides the system tools to gather information
   about the system.
  </para>

  <sect2 id="sec.xen.monitor.vmanager">
   <title>Monitor &xen; with <command>virt-manager</command></title>
   <para>
    After starting <command>virt-manager</command> and connecting to the
    &vmhost;, an overview of the CPU usage of all the running guests is
    displayed.
   </para>
   <para>
    It is also possible to get information about disk and network usage with
    this tool, however, you must first activate this in the preferences:
   </para>
   <procedure>
    <step>
     <para>
      Run <command>virt-manager</command> and connect to the &vmhost;
      system.
     </para>
    </step>
    <step>
     <para>
      Select <menuchoice><guimenu>Edit</guimenu>
      <guimenu>Preferences</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Change the tab from <guimenu>General</guimenu> to
      <guimenu>Stats</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Activate the check boxes for <guimenu>Disk I/O</guimenu> and
      <guimenu>Network I/O</guimenu>.
     </para>
    </step>
    <step>
     <para>
      If desired, also change the update interval or the number of samples
      that are kept in the history.
     </para>
    </step>
   </procedure>
   <para>
    Afterwards, the disk and network statistics are also displayed in the
    main window of the <guimenu>Virtual Machine Manager</guimenu>.
   </para>
   <para>
    To get more precise data of the respective machine, select the machine,
    click <guimenu>Open</guimenu> and then <guimenu>Details</guimenu>. The
    statistics are displayed from the <guimenu>Performance</guimenu> entry
    of the left-hand tree menu.
   </para>
  </sect2>

  <sect2 id="sec.xen.monitor.xentop">
   <title>Monitor &xen; with <command>xentop</command></title>
   <para>
    Information is also available when only a standard terminal is available
    on no X environment. The preferred tool to gather information in this
    case is <command>xentop</command>. Unfortunately, this tool needs a
    rather broad terminal, else it inserts line breaks into the display.
   </para>
   <para>
    <command>xentop</command> has several command keys that can give you
    more information about the system that is monitored. Some of the more
    important are:
   </para>
   <variablelist>
    <varlistentry>
     <term>D</term>
     <listitem>
      <para>
       Change the delay between the refreshs of the screen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>N</term>
     <listitem>
      <para>
       Also display network statistics. Note, that only standard
       configurations will be displayed. If you use a special configuration
       like a routed network, no network will be displayed at all.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>B</term>
     <listitem>
      <para>
       Display the respective block devices and their cumulated usage count.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    For more information about <command>xentop</command> see the manual page
    <command>man 1 xentop</command>.
   </para>
  </sect2>

  <sect2 id="sec.xen.monitor.tools">
   <title>More Helpful Tools</title>
   <para>
    There are many different system tools that also help monitoring or
    debugging a running &sle; system. Many of these are covered in the
    official &sle; documentation. Especially useful for monitoring a
    virtualization environment are the following tools:
   </para>
   <variablelist>
    <varlistentry>
     <term>ip</term>
     <listitem>
      <para>
       The command line utility <command>ip</command> may be used to monitor
       arbitrary network interfaces. This is especially useful, if you did
       set up a network that is routed or applied a masqueraded network. To
       monitor a network interface with the name
       <literal>&xenguest;.0</literal>, run the following command:
      </para>
<screen>watch ip -s link show &xenguest;.0</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <varlistentry>
     <term>brctl</term>
     <listitem>
      <para>
       In a standard setup, all the &xen; &vmguest; systems are attached to
       a virtual network bridge. <command>brctl</command> allows you to
       determine the connection between the bridge and the virtual network
       adapter in the &vmguest; system. For example, the output of
       <command>brctl show</command> may look like the following:
      </para>
<screen>bridge name     bridge id               STP enabled     interfaces
br0             8000.000476f060cc       no              eth0
                                                        vif1.0
br1             8000.00001cb5a9e7       no              vlan22 </screen>
      <para>
       This shows, that there are two virtual bridges defined on the system.
       One is connected to the physical ethernet device
       <literal>eth0</literal>, the other one is connected to a vlan
       interface <literal>vlan22</literal>.
      </para>
      <para>
       There is only one guest interface active in this setup,
       <literal>vif1.0</literal>. This means, that the guest with id 1 has
       an ethernet interface <literal>eth0</literal> assigned, that is
       connected to <literal>br0</literal> in the &vmhost;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>iptables-save</term>
     <listitem>
      <para>
       Especially when using masquerade networks, or if several ethernet
       interfaces are set up together with a firewall setup, it may be
       helpful to check the current firewall rules.
      </para>
      <para>
       The command <command>iptables</command> may be used to check all the
       different firewall settings. To list all the rules of a chain, or
       even of the complete setup, you may use the commands
       <command>iptables-save</command> or <command>iptables -S</command>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 id="sec.xen.admin.descriptions">
  <title>Extra Guest Descriptions in &xen; Configuration</title>

  <para>
   With &xen;, it is possible to add an extra descriptions to the
   configuration of each guest. This may be helpful for example to document
   the purpose of the guest, or the responsible person to handle the guest.
  </para>

  <para>
   The description can be set during the installation of the guest. When
   running <command>vm-install</command>, in the <guimenu>Summary</guimenu>
   screen you can set the <guimenu>Name of Virtual Machine</guimenu>. The
   graphical interface for changing the name also contains an extra
   description line, that may be used to add a single line of text.
  </para>

  <para>
   When using the &xen; configuration files in
   <filename>/etc/xen/vm</filename>, the syntax for setting the description
   looks like this:
  </para>

<screen>description="Responsible: tux@example.com"</screen>

  <para>
   It is also possible to change the SXP configuration to add or change the
   description as described in <xref linkend="sec.xen.manage.vmachine"/>.
   The description is added directly below the <literal>domain</literal>
   element and looks like this:
  </para>

<screen>(domain
...  
    (description 'Responsible: tux@example.com')
...</screen>

  <para>
   To retrieve the description of a specific &vmguest;, for example, a guest
   with the name &xenguest;, run the command:
  </para>

<screen>xm list -l &xenguest; | grep description</screen>
 </sect1>
 <sect1 id="sec.xen.admin.vhostmd">
  <title>Providing Host Information for &vmguest; Systems</title>

<!--
  host: install vhostmd
        configure in /etc/vhostmd/vhostmd.conf
        start with init script
        attach to guest
  guest: install vm-dump-metrics
        run vm-dump-metrics -> XML file
  -->

  <para>
   In a standard &xen; environment, the &vmguest; systems have only very
   limited information about the &vmhost; system they are running on. If a
   guest should know more about the &vmhost; it runs on,
   <systemitem>vhostmd</systemitem> can provide more information to selected
   guests. To set up your system to run <systemitem>vhostmd</systemitem>,
   proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Install the package vhostmd on the &vmhost;.
    </para>
   </step>
   <step>
    <para>
     Edit the file <filename>/etc/vhostmd/vhostmd.conf</filename> if you
     want to add or remove <literal>metric</literal> sections from the
     configuration. However, the default works well.
    </para>
   </step>
   <step>
    <para>
     Check the validity of the <filename>vhostmd.conf</filename>
     configuration file with the command:
    </para>
<screen>cd /etc/vhostmd
xmllint --postvalid --noout vhostmd.conf    
    </screen>
   </step>
   <step>
    <para>
     Start the vhostmd daemon with the command <command>rcvhostmd
     start</command>.
    </para>
    <para>
     If vhostmd should be started automatically during start-up of the
     system, run the command:
    </para>
<screen>chkconfig vhostmd on</screen>
   </step>
   <step>
    <para>
     Attach the image file <filename>/dev/shm/vhostmd0</filename> to the
     &vmguest; system named &xenguest; with the command:
    </para>
<screen>xm block-attach &xenguest; tap:aio:/dev/shm/vhostmd0 xvdb r</screen>
   </step>
   <step>
    <para>
     Log on on the &vmguest; system.
    </para>
   </step>
   <step>
    <para>
     Install the client package <systemitem>vm-dump-metrics</systemitem>.
    </para>
   </step>
   <step>
    <para>
     Run the command <command>vm-dump-metrics</command>. If you would like
     to have the result in a file, use the option <systemitem>-d
     &lt;filename&gt;</systemitem>.
    </para>
   </step>
  </procedure>

  <para>
   The result of the <systemitem>vm-dump-metrics</systemitem> is an XML
   output. The respective metric entries follow the DTD
   <filename>/etc/vhostmd/metric.dtd</filename>.
  </para>

  <para>
   For more information, see the manual pages <command>man 8
   vhostmd</command> and <filename>/usr/share/doc/vhostmd/README</filename>
   on the &vmhost; system. On the guest, see the manual page <command>man 1
   vm-dump-metrics</command>.
  </para>
 </sect1>
</chapter>
