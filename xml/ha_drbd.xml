<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--

For the next release:
* bnc#577381: drbd disks are set to StandAlone after network restart
-->
<chapter id="cha.ha.drbd">
 <title>DRBD</title>
 <abstract>
  <para>
   The <emphasis>distributed replicated block device</emphasis> (DRBD*)
   allows you to create a mirror of two block devices that are located at
   two different sites across an IP network. When used with &ais;, DRBD
   supports distributed high-availability Linux clusters. This chapter shows
   you how to install and set up DRBD.
  </para>
 </abstract>
 <sect1 id="sec.ha.drbd.overview">
  <title>Conceptual Overview</title>

  <para>
   DRBD replicates data on the primary device to the secondary device in a
   way that ensures that both copies of the data remain identical. Think of
   it as a networked RAID&nbsp;1. It mirrors data in real-time, so its
   replication occurs continuously. Applications do not need to know that in
   fact their data is stored on different disks.
<!--When using a
   cluster aware file system such as ocfs2, it is also possible to run both
   nodes as primary devices.-->
  </para>

  <important>
   <title>Unencrypted Data</title>
   <para>
    The data traffic between mirrors is not encrypted. For secure data
    exchange, you should deploy a Virtual Private Network (VPN) solution for
    the connection.
   </para>
  </important>

  <para>
   DRBD is a Linux Kernel module and sits between the I/O scheduler at the
   lower end and the file system at the upper end, see
   <xref
    linkend="fig.ha.drbd.concept"/>. To communicate with DRBD,
   users use the high-level command <command>drbdadm</command>. For maximum
   flexibility DRBD comes with the low-level tool
   <command>drbdsetup</command>.
  </para>

  <figure id="fig.ha.drbd.concept">
   <title>Position of DRBD within Linux</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ha_drbd.svg" width="90%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ha_drbd.png" width="90%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   DRBD allows you to use any block device supported by Linux, usually:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     partition or complete hard disk
    </para>
   </listitem>
   <listitem>
    <para>
     software RAID
    </para>
   </listitem>
   <listitem>
    <para>
     Logical Volume Manager (LVM)
    </para>
   </listitem>
   <listitem>
    <para>
     Enterprise Volume Management System (EVMS)
    </para>
   </listitem>
  </itemizedlist>

  <para>
   By default, DRBD uses the TCP ports <literal>7788</literal> and higher
   for communication between DRBD nodes. Make sure that your firewall does
   not prevent communication on the used ports.
  </para>

  <para>
   You must set up the DRBD devices before creating file systems on them.   
   Everything pertaining to user data should be done solely via the
   <filename>/dev/drbd_<replaceable>N</replaceable></filename> device and
   not on the raw device, as DRBD uses the last part of the raw device for
   metadata. Using the raw device will cause inconsistent data.
  </para>

  <para>
    With udev integration, you will also get symbolic links in the form 
    <filename>/dev/drbd/by-res/<replaceable>RESOURCES</replaceable></filename>
    which are easier to use and provide safety against misremembering the
    devices' minor number.
  </para>

  <para>
   For example, if the raw device is 1024&nbsp;MB in size, the DRBD device has
   only 1023&nbsp;MB available for data, with about 70&nbsp;KB hidden and reserved for the
   metadata. Any attempt to access the remaining kilobytes via 
   <filename>/dev/drbd<replaceable>N</replaceable></filename>
   fails because it is not available for user data.
  </para>
 </sect1>
 <sect1 id="sec.ha.drbd.install">
  <title>Installing DRBD Services</title>

  <para>
   To install the needed packages for DRBD, install the &hasi; Add-On
   product on both &sls; machines in your networked cluster as described in
   <xref
    linkend="part.install"/>. Installing &hasi; also installs the
   DRBD program files.
  </para>

  <para>
   If you do not need the complete cluster stack but just want to use DRBD,
   refer to <xref linkend="tab.ha.drbd.rpmfiles"/>. It contains a list of
   all RPM packages for DRBD. Recently, the <systemitem>drbd</systemitem>
   package has been split into separate packages.
  </para>

  <table id="tab.ha.drbd.rpmfiles">
   <title>DRBD RPM Packages</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       <para>
        Filename
       </para>
      </entry>
      <entry>
       <para>
        Explanation
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Convenience package, split into other
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-bash-completion</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Programmable bash completion support for drbdadm
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-heartbeat</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Heartbeat resource agent for DRBD (only needed for Heartbeat)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-kmp-default</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Kernel module for DRBD (needed)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-kmp-xen</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Xen Kernel module for DRBD
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-udev</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        udev integration scripts for DRBD, managing symlinks to DRBD devices
        in <filename>/dev/drbd/by-res</filename> and
        <filename>/dev/drbd/by-disk</filename>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-utils</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Management utilities for DRBD (needed)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-pacemaker</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Pacemaker resource agent for DRBD
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">drbd-xen</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        Xen block device management script for DRBD
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <systemitem class="resource">yast2-drbd</systemitem>
       </para>
      </entry>
      <entry>
       <para>
        &yast; DRBD Configuration (recommended)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   To simplify the work with <command>drbdadm</command>, use the Bash
   completion support in the RPM package
   <systemitem>drbd-bash-completion</systemitem>. If you want to enable it
   in your current shell session, insert the following command:
  </para>

<screen>&prompt.root;<command>source</command> /etc/bash_completion.d/drbdadm.sh</screen>

  <para>
   To use it permanently for &rootuser;, create, or extend a file
   <filename>/root/.bashrc</filename> and insert the previous line.
  </para>
 </sect1>
 <sect1 id="sec.ha.drbd.configure">
  <title>Configuring the DRBD Service</title>

  <note><title>Adjustments Needed</title>
   <para>
    The following procedure uses the server names &node1; and &node2;, and the
    cluster resource name <literal>r0</literal>. It sets up &node1; as the primary node and 
     <filename>/dev/sda1</filename> for storage. Make sure to modify the 
     instructions to use your own nodes and file names.
   </para>
  </note>

  <remark>toms 2014-02-13: phil: perhaps the example should be changed to
    use an LV instead;band eg. "nfs" instead of "r0".</remark>

  <para>
   Before you start configuring DRBD, make sure the block devices in your
   Linux nodes are ready and partitioned (if needed). The following
   procedure assumes you have two nodes, &node1; and &node2;, and that they should use the
   TCP port <literal>7788</literal>. Make sure this port is open in your
   firewall.
  </para>

  <para>
   To set up DRBD manually, proceed as follows:
  </para>

  <procedure id="step.drbd.configure">
   <title>Manually Configuring DRBD</title>
   <step>
     <para>Put your cluster in maintenance mode, if the cluster is already
     using DRBD:</para>
    <screen>&prompt.root;<command>crm</command> configure property maintenance-mode=true</screen> 
     <para>If you skip this step when your cluster uses already DRBD,
     a syntax error in the live configuration will lead to a service 
     shutdown.</para>
     <remark>toms 2014-02-13: phil: Either write the DRBD configuration in 
       /tmp/ and test via "drbdadm -c FILE", or put the clust in maintenance
       mode before editing.</remark>
   </step>
   <step>
    <para>
     Log in as user &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Change DRBD's configuration files:
    </para>
    <substeps>
     <step>
      <para>
       Open the file <filename>/etc/drbd.conf</filename> and insert the
       following lines, if they do not exist yet:
      </para>
<screen>include "drbd.d/global_common.conf";
include "drbd.d/*.res";</screen>
      <para>
       Beginning with DRBD 8.3 the configuration file is split into separate
       files, located under the directory <filename>/etc/drbd.d/</filename>.
      </para>
     </step>
     <step>
      <para>
       Open the file <filename>/etc/drbd.d/global_common.conf</filename>. It
       contains already some pre-defined values. Go to the
       <literal>startup</literal> section and insert these lines:
      </para>
<screen>startup {
    # wfc-timeout degr-wfc-timeout outdated-wfc-timeout
    # wait-after-sb;
    wfc-timeout 100;
    degr-wfc-timeout 120;
}</screen>
      <para>
       These options are used to reduce the timeouts when booting, see
       <ulink url="http://www.drbd.org/users-guide-emb/re-drbdconf.html"/>
       for more details.
      </para>
     </step>
     <step>
      <para>
       Create the file <filename>/etc/drbd.d/r0.res</filename>, change the
       lines according to your situation, and save it:
      </para>
<screen>resource r0 { <co id="co.drbd.config.r0"/>
  device /dev/drbd0; <co id="co.drbd.config.device"/>
  disk /dev/sda1; <co id="co.drbd.config.disk"/>
  meta-disk internal; <co id="co.drbd.config.meta-disk"/>
  on &node1; { <co id="co.drbd.config.resname"/>
    address  &subnetI;.10:7788; <co id="co.drbd.config.address"/>
  }
  on &node2; { <xref linkend="co.drbd.config.resname"
   xrefstyle="selec:nopage"/>
    address &subnetI;.11:7788; <xref linkend="co.drbd.config.address"
   xrefstyle="selec:nopage"/>
  }
  syncer {
    rate  7M; <co id="co.drbd.config.syncer-rate"/>
  }
}</screen>
      <calloutlist>
       <callout arearefs="co.drbd.config.r0">
        <para>
         Name that allows some association to the service that needs them.
         For example, <systemitem>nfs</systemitem>, 
          <systemitem>http</systemitem>, 
          <systemitem>mysql_0</systemitem>, 
          <systemitem>postgres_wal</systemitem>, etc.
        </para>
       </callout>
       <callout arearefs="co.drbd.config.device">
<!--taroth 2010-08-16: fix for bnc#623524-->
        <para>
         The device name for DRBD and its minor number.
        </para>
        <para>
          In the example above, the minor number 0 is used for DRBD.
          The udev integration scripts will give you a symbolic link
          <filename>/dev/drbd/by-res/nfs/0</filename>.
         Alternatively, omit the device node name in the
         configuration and use the following line instead:
        </para>
        <para>
         <literal>drbd0 minor 0</literal> (<literal>/dev/</literal> is optional)
         or <literal>/dev/drbd0</literal>
        </para>
       </callout>
       <callout arearefs="co.drbd.config.disk">
        <para>
         The raw device that is replicated between nodes. Note, in this example
         the devices are the same on both nodes. If you need different
         devices, move the <literal>disk</literal> parameter into the
         <literal>on</literal> host.
        </para>
       </callout>
       <callout arearefs="co.drbd.config.meta-disk">
        <para>
         The meta-disk parameter usually contains the value
         <literal>internal</literal>, but it is possible to specify an
         explicit device to hold the meta data. See
         <ulink url="http://www.drbd.org/users-guide-emb/ch-internals.html#s-metadata"/>
         for more information.
        </para>
       </callout>
       <callout arearefs="co.drbd.config.resname">
        <para>
         The <literal>on</literal> section states which host this configuration
          statement applies to.
        </para>
       </callout>
       <callout arearefs="co.drbd.config.address">
        <para>
         The IP address and port number of the respective node. Each
         resource needs an individual port, usually starting with
         <literal>7788</literal>.
        </para>
       </callout>
       <callout arearefs="co.drbd.config.syncer-rate">
        <para>
         The synchronization rate. Set it to one third of the lower of 
         the disk- and network bandwidth. It only limits the resynchronization, 
         not the replication.
        </para>
       </callout>
      </calloutlist>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Check the syntax of your configuration file(s). If the following
     command returns an error, verify your files:
    </para>
<screen>&prompt.root;<command>drbdadm</command> dump all</screen>
   </step>
   <step>
    <para>
     If you have configured &csync; (which should be the default), the DRBD
     configuration files are already included in the list of files which
     need to be synchronized. To synchronize them, use:
    </para>
<screen>&prompt.root;<command>csync2</command> -xv /etc/drbd.d/</screen>
    <para>
     If you do not have &csync; (or do not want to use it), copy the DRBD
     configuration files manually to the other node:
    </para>
<screen>&prompt.root;<command>scp</command> /etc/drbd.conf &node2;:/etc/
scp /etc/drbd.d/*  &node2;:/etc/drbd.d/</screen>
   </step>
   <step>
    <para>
     Initialize the meta data on <emphasis>both</emphasis> systems by
     entering the following on each node:
    </para>
<screen>&prompt.root;<command>drbdadm</command> create-md r0
&prompt.root;<command>rcdrbd</command> start</screen>
    <para>
     If your disk already contains a file system that you do not need
     anymore, destroy the file system structure with the following command
     and repeat this step:
    </para>
<screen>&prompt.root; <command>dd</command> if=/dev/zero of=/dev/sda1 count=16 bs=1M</screen>
   </step>
   <step>
    <para>
     Watch the DRBD status by entering the following on each node:
    </para>
    <screen>&prompt.root;rcdrbd status</screen>
    <para>
     You should get something like this:
    </para>
<screen>[... version string omitted ...]
m:res  cs         ro                   ds                         p  mounted  fstype
0:r0   Connected  Secondary/Secondary  Inconsistent/Inconsistent  C</screen>
<!-- Add short explanation? -->
   </step>
   <step>
    <para>
     Start the resync process on your intended primary node (&node1; in this
     case):
    </para>
<screen>&prompt.root;<command>drbdadm</command> -- --overwrite-data-of-peer primary r0</screen>
   </step>
   <step>
    <para>
     Check the status again with <command>rcdrbd status</command> and you
     get:
    </para>
<screen><?dbsuse-fo font-size="6pt"?>...
m:res  cs         ro                 ds                 p  mounted  fstype
0:r0   Connected  Primary/Secondary  UpToDate/UpToDate  C</screen>
    <para>
     The status in the <literal>ds</literal> row (disk status) must be
     UpToDate on both nodes.
    </para>
   </step>
   <step>
    <para>
     Create your file system on top of your DRBD device, for example:
    </para>
<screen>&prompt.root;<command>mkfs.ext3</command> /dev/drbd/by-res/r0/0</screen>
   </step>
   <step>
    <para>
     Mount the file system and use it:
    </para>
<screen>&prompt.root;<command>mount</command> /dev/drbd /mnt/</screen>
   </step>
   <step>
     <para>Reset the cluster's maintenance mode flag:</para>
    <screen>&prompt.root;<command>crm</command> configure property maintenance-mode=false</screen> 
   </step>
  </procedure>

<!-- toms 2010-02-05: The YaST DRBD module does not save the
       configuration. It seems the include statement (introduced
       in drbd v8.3) is not known or it is broken.
       See bnc#473143
  -->

  <para>
   Alternatively, to use &yast; to configure DRBD, proceed as follows:
  </para>

  <procedure id="pro.drbd.configure.yast">
   <title>Using &yast; to Configure DRBD</title>
   <step>
    <para>
     Start &yast; and select the configuration module <menuchoice>
     <guimenu>High Availability</guimenu> <guimenu>DRBD</guimenu>
     </menuchoice>. If you already have a DRBD configuration, &yast; warns
     you. &yast; will change your configuration and will save your old DRBD
     configuration files as <filename>*.YaSTsave</filename>.
    </para>
     <para>Leave the booting flag in <menuchoice><guimenu>Start-up
     Configuration</guimenu><guimenu>Booting</guimenu></menuchoice> as it is 
       (by default it is <literal>off</literal>);
     do not change that as &pace; manages this service.</para>
   </step>
   <step>
    <para>
     The actual configuration of the resource is done in <guimenu>Resource
     Configuration</guimenu> (see
     <xref linkend="fig.ha.drbd.yast.resconfig"/>).
    </para>
    <remark>taroth 2015-03-17: just noticed that the screenshot does neither reflect 
     the new node names (alice, bob), nor the corrections by Phil - todo for next release:
     fix! </remark>
    <figure id="fig.ha.drbd.yast.resconfig">
     <title>Resource Configuration</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_drbd-resconfig.png" width="90%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_drbd-resconfig.png" width="90%"/>
      </imageobject>
     </mediaobject>
    </figure>
    <para>
     Press <guimenu>Add</guimenu> to create a new resource. The following
     parameters need to be set twice:
    </para>
    <informaltable>
     <tgroup cols="2">
       <colspec colwidth="1*"/>
       <colspec colwidth="3*"/>
      <tbody>
       <row>
        <entry>
         <para>
          <guimenu>Resource Name</guimenu>
         </para>
        </entry>
        <entry>
         <para>
          The name of the resource (mandatory)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <guimenu>Name</guimenu>
         </para>
        </entry>
        <entry>
         <para>
          The host name of the relevant node
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <guimenu>Address:Port</guimenu>
         </para>
        </entry>
        <entry>
         <para>
          The IP address and port number (default 7788) for the respective
          node
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <guimenu>Device</guimenu>
         </para>
        </entry>
        <entry>
         <para> The block device path that is used to access the 
           replicated data. If the device contains a minor number, the associated block device is
           usually named <filename>/dev/drbdX</filename>, where
           <replaceable>X</replaceable> is the device minor number. If the
           device does not contain a minor number, make sure to add
           <literal>minor 0</literal> after the device name. </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <guimenu>Disk</guimenu>
         </para>
        </entry>
        <entry>
         <para>
          The device that is replicated between both nodes.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <guimenu>Meta-disk</guimenu>
         </para>
        </entry>
        <entry>
         <para>
          The <guimenu>Meta-disk</guimenu> is either set to the value
          <literal>internal</literal> or specifies an explicit device
          extended by an index to hold the meta data needed by DRBD.
         </para>
         <para>
          A real device may also be used for multiple drbd resources. For
          example, if your <guimenu>Meta-Disk</guimenu> is
          <filename>/dev/sda6[0]</filename> for the first resource, you may
          use <filename>/dev/sda6[1]</filename> for the second resource.
          However, there must be at least 128 MB space for each resource
          available on this disk.
          The fixed metadata size limits the maximum data size that
          you can replicate.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
    <para>
     All of these options are explained in the examples in the
     <filename>/usr/share/doc/packages/drbd-utils/drbd.conf</filename> file
     and in the man page of <command>drbd.conf(5)</command>.
    </para>
   </step>
   <step>
    <para>
     If you have configured &csync; (which should be the default), the DRBD
     configuration files are already included in the list of files which
     need to be synchronized. To synchronize them, use:
    </para>
<screen>&prompt.root;<command>csync2</command> -xv /etc/drbd.d/</screen>
    <para>
     If you do not have &csync; (or do not want to use it), copy the DRBD
     configuration files manually to the other node (here, another node 
     with the name &node2;):
    </para>
<screen>&prompt.root;<command>scp</command> /etc/drbd.conf &node2;:/etc/
scp /etc/drbd.d/*  &node2;:/etc/drbd.d/</screen>
   </step>
   <step>
    <para>
     Initialize and start the DRBD service on both systems by entering the
     following on each node:
    </para>
<!-- TODO: do we need drbdadm create-md r0 ? -->
<!-- it does not work without the create-md for me -->
<screen>&prompt.root;<command>drbdadm</command> create-md r0
&prompt.root;<command>rcdrbrd</command> start</screen>
   </step>
   <step>
    <para>
     Configure <filename>&node1;</filename> as the primary node by entering
     the following on <filename>&node1;</filename>:
    </para>
<screen>&prompt.root;<command>drbdsetup</command> /dev/drbd0 primary &#x2d;&#x2d;overwrite-data-of-peer</screen>
   </step>
   <step>
    <para>
     Check the DRBD service status by entering the following on each node:
    </para>
<screen>rcdrbd status</screen>
    <para>
     Before proceeding, wait until the block devices on both nodes are fully
     synchronized. Repeat the <command>rcdrbd status</command> command to
     follow the synchronization progress.
    </para>
   </step>
   <step>
    <para>
     After the block devices on both nodes are fully synchronized, format
     the DRBD device on the primary with your preferred file system. Any
     Linux file system can be used.
     It is recommended to use the 
     <filename>/dev/drbd/by-res/<replaceable>RESOURCE</replaceable></filename>
     name.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.ha.drbd.test">
  <title>Testing the DRBD Service</title>

  <para>
   If the install and configuration procedures worked as expected, you are
   ready to run a basic test of the DRBD functionality. This test also helps
   with understanding how the software works.
  </para>

  <procedure id="pro.drbd.test">
   <step>
    <para>
     Test the DRBD service on &node1;.
    </para>
    <substeps>
     <step>
      <para>
       Open a terminal console, then log in as
       <systemitem>root</systemitem>.
      </para>
     </step>
     <step>
      <para>
       Create a mount point on &node1;, such as
       <filename>/srv/r0</filename>:
      </para>
<screen>&prompt.root;<command>mkdir</command> -p /srv/r0</screen>
     </step>
     <step>
      <para>
       Mount the <command>drbd</command> device:
      </para>
<screen>&prompt.root;<command>mount</command> -o rw /dev/drbd0 /srv/r0</screen>
     </step>
     <step>
      <para>
       Create a file from the primary node:
      </para>
<screen>&prompt.root;<command>touch</command> /srv/r0/from_&node1;</screen>
     </step>
      <step>
        <para>
          Unmount the disk on &node1;:
        </para>
        <screen>&prompt.root;<command>umount</command> /srv/r0</screen>
      </step>
      <step>
        <para>
          Downgrade the DRBD service on &node1; by typing the following command
          on &node1;:
        </para>
        <screen>&prompt.root;<command>drbdadm</command> secondary</screen>
      </step>
    </substeps>
   </step>
   <step>
    <para>
     Test the DRBD service on &node2;.
    </para>
    <substeps>
     <step>
      <para>
       Open a terminal console, then log in as
       <systemitem>root</systemitem> on &node2;.
      </para>
     </step>
     <step>
      <para>
       On &node2;, promote the DRBD service to primary:
      </para>
<screen>&prompt.root;<command>drbdadm</command> primary</screen>
     </step>
     <step>
      <para>
       On &node2;, check to see if &node2; is primary:
      </para>
<screen>&prompt.root;<command>rcdrbd</command> status</screen>
     </step>
     <step>
      <para>
       On &node2;, create a mount point such as
       <filename>/srv/r0mount</filename>:
      </para>
<screen>&prompt.root;<command>mkdir</command> /srv/r0mount</screen>
     </step>
     <step>
      <para>
       On &node2;, mount the DRBD device:
      </para>
<screen>&prompt.root;<command>mount</command> -o rw /dev/drbd_r0 /srv/r0mount</screen>
     </step>
     <step>
      <para>
       Verify that the file you created on &node1; exists:
      </para>
<screen>&prompt.root;<command>ls</command> /srv/r0</screen>
      <para>
       The <filename>/srv/r0mount/from_&node1;</filename> file should be
       listed.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     If the service is working on both nodes, the DRBD setup is complete.
    </para>
   </step>
   <step>
    <para>
     Set up &node1; as the primary again.
    </para>
    <substeps>
     <step>
      <para>
       Dismount the disk on &node2; by typing the following command on
       &node2;:
      </para>
<screen>&prompt.root;<command>umount</command> /srv/r0</screen>
     </step>
     <step>
      <para>
       Downgrade the DRBD service on &node2; by typing the following command
       on &node2;:
      </para>
<screen>&prompt.root;<command>drbdadm</command> secondary</screen>
     </step>
     <step>
      <para>
       On &node1;, promote the DRBD service to primary:
      </para>
<screen>&prompt.root;<command>drbdadm</command> primary</screen>
     </step>
     <step>
      <para>
       On &node1;, check to see if &node1; is primary:
      </para>
<screen>rcdrbd status</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     To get the service to automatically start and fail over if the server
     has a problem, you can set up DRBD as a high availability service with
     &ais;. For information about installing and configuring &ais; for &sle;
     11 see <xref linkend="part.config"/>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.ha.drbd.tuning">
  <title>Tuning DRBD</title>

  <para>
   There are several ways to tune DRBD:
  </para>

  <orderedlist>
   <listitem>
    <para>
     Use an external disk for your metadata. This might help,
     at the cost of maintenance ease.
    </para>
   </listitem>
   <listitem>
    <remark>toms 2014-05-21: Is this still relevant? We have a udev rule already.
    How does it compare to this one?</remark>
    <para>
     Create a udev rule to change the read-ahead of the DRBD device. Save
     the following line in the file
     <filename>/etc/udev/rules.d/82-dm-ra.rules</filename> and change the
     read_ahead_kb value to your workload:
    </para>
<screen>ACTION=="add", KERNEL=="dm-*", ATTR{bdi/read_ahead_kb}="4100"</screen>
    <para>
     This line only works if you use LVM.
    </para>
   </listitem>
   <listitem>
     <para>Tune your network connection, by changing the receive and send
     buffer settings via <command>sysctl</command>.</para>
   </listitem>
   <listitem>
     <para>Change the <systemitem>max-buffers</systemitem>, 
       <systemitem>max-epoch-size</systemitem> or both in the DRBD
       configuration.
     </para>
   </listitem>
   <listitem>
     <para>Increase the <systemitem>al-extents</systemitem> value, depending
     on your IO patterns.</para>
   </listitem>
   <listitem>
     <para>If you have a hardware RAID controller with a BBU (<emphasis>Battery Backup Unit</emphasis>),
     you might benefit from setting <systemitem>no-disk-flushes</systemitem>,
       <systemitem>no-disk-barrier</systemitem> and/or <systemitem>no-md-flushes</systemitem>.
     </para>
   </listitem>
    <listitem>
      <para>Enable read-balancing depending on your workload. See
      <ulink url="http://blogs.linbit.com/p/256/read-balancing/"/> for more details.</para>
    </listitem>
  </orderedlist>
 </sect1>
 <sect1 id="sec.ha.drbd.trouble">
  <title>Troubleshooting DRBD</title>

  <para>
   The DRBD setup involves many different components and problems may arise
   from different sources. The following sections cover several common
   scenarios and recommend various solutions.
  </para>

  <sect2 id="sec.ha.drbd.trouble.config">
   <title>Configuration</title>
   <para>
    If the initial DRBD setup does not work as
    expected, there is probably something wrong with your configuration.
   </para>
   <para>
    To get information about the configuration:
   </para>
   <procedure>
    <step>
     <para>
      Open a terminal console, then log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Test the configuration file by running <command>drbdadm</command> with
      the <command>-d</command> option. Enter the following command:
     </para>
<screen>&prompt.root;<command>drbdadm</command> -d adjust r0</screen>
     <para>
      In a dry run of the <command>adjust</command> option,
      <command>drbdadm</command> compares the actual configuration of the
      DRBD resource with your DRBD configuration file, but it does not
      execute the calls. Review the output to make sure you know the source
      and cause of any errors.
     </para>
    </step>
    <step>
     <para>
      If there are errors in the <filename>/etc/drbd.d/*</filename> and
      <filename>drbd.conf</filename> files, correct them before continuing.
     </para>
    </step>
    <step>
     <para>
      If the partitions and settings are correct, run
      <command>drbdadm</command> again without the <command>-d</command>
      option.
     </para>
<screen>&prompt.root;<command>drbdadm</command> adjust r0</screen>
     <para>
      This applies the configuration file to the DRBD resource.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.drbd.hostnames">
   <title>Host Names</title>
   <para>
    For DRBD, host names are case-sensitive (<systemitem>Node0</systemitem>
    would be a different host than <systemitem>node0</systemitem>),
     and compared to the host name as stored in the Kernel (see the 
     <command>uname -n</command> output).
   </para>
   <para>
    If you have several network devices and want to use a dedicated network
    device, the host name will likely not resolve to the used IP address. In
    this case, use the parameter <literal>disable-ip-verification</literal>.
   </para>
  </sect2>

  <sect2 id="sec.ha.drbd.port">
   <title>TCP Port 7788</title>
   <para>
    If your system cannot connect to the peer, this might be a problem
    with your local firewall. By default, DRBD uses the TCP port
    <literal>7788</literal> to access the other node. Make sure that this
    port is accessible on both nodes.
   </para>
  </sect2>

  <sect2 id="sec.ha.drbd.trouble.broken">
   <title>DRBD Devices Broken after Reboot</title>
   <para>
    In cases when DRBD does not know which of the real devices holds the
    latest data, it changes to a split brain condition. In this case, the
    respective DRBD subsystems come up as secondary and do not connect to
    each other. In this case, the following message can be found in the logging
    data:
   </para>
<screen>Split-Brain detected, dropping connection!</screen>
   <para>
    To resolve this situation, enter the following on the node which has
    data to be discarded:
   </para>
<screen>&prompt.root;drbdadm secondary r0 
&prompt.root;<command>drbdadm</command> -- --discard-my-data connect r0</screen>
   <para>
    On the node which has the latest data enter the following:
   </para>
<screen>&prompt.root;<command>drbdadm</command> connect r0</screen>
    <para>That resolves the issue by overwriting one node's data
    with the peer's data, therefore getting a consistent view on both 
    nodes.</para>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.drbd.more">
  <title>For More Information</title>

  <para>
   The following open source resources are available for DRBD:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The project home page <ulink url="http://www.drbd.org"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     See <xref linkend="art_ha_quick_nfs"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://clusterlabs.org/wiki/DRBD_HowTo_1.0"/> by the Linux
     Pacemaker Cluster Stack Project.
    </para>
   </listitem>
   <listitem>
    <para>
     The following man pages for DRBD are available in the distribution:
     <command>drbd(8)</command>, <command>drbddisk(8)</command>,
     <command>drbdsetup(8)</command>, <command>drbdsetup(8)</command>,
     <command>drbdadm(8)</command>, <command>drbd.conf(5)</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     Find a commented example configuration for DRBD at
     <filename>/usr/share/doc/packages/drbd/drbd.conf</filename>
    </para>
   </listitem>
    <listitem>
      <para>Furthermore, for easier storage administration across your
      cluster, see the recent announcement about the <citetitle>DRBD-Manager</citetitle>
      at <ulink url="http://blogs.linbit.com/p/666/drbd-manager"/>.</para>
    </listitem>
  </itemizedlist>
 </sect1>
</chapter>
