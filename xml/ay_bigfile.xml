<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE book PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!--
     ====================================================================
     ====================================================================
     For autoyast "trunk" documentation, see
     http://svn.opensuse.org/svn/opensuse-doc/trunk/documents/autoyast/en
     ====================================================================
     ====================================================================
-->
<book lang="en" id="book-autoyast">
 <bookinfo>
  <title><emphasis>AutoYaST</emphasis></title><productname>&productname;</productname>
  <productnumber>&productnumber;</productnumber><date>
<?dbtimestamp format="B d, Y"?></date>
  <legalnotice>
   <para>
<!--
    <corpauthor>SUSE Linux Products GmbH</corpauthor>
    <copyright>
      <year>2004</year>
      <holder> &company-suse;  Linux AG</holder>
    </copyright>
    -->
   </para>
  </legalnotice>
 </bookinfo>
 <chapter id="introduction">
  <title>Introduction</title>
  <para>
   AutoYaST2 is a system for installing one or more SUSE Linux systems
   automatically and without user intervention. AutoYaST2 installations are
   performed using an AutoYaST profile with installation and configuration
   data. That profile can be created using the configuration interface of
   AutoYaST2 and can be provided to YaST2 during installation in different
   ways.
  </para>
  <sect1 id="avail">
   <title>Availability</title>

   <para>
    AutoYaST2 is available with recent SUSE products starting from SUSE
    Linux 8.0 and business products starting from SLES 8.
   </para>

   <para>
    Products prior to SuSE Linux 8.0 and business products based on SLES 7
    have an auto-installation system based on YaST1. A configuration
    management system is provided by ALICE for these products.
   </para>

   <note>
    <title>Updated documentation</title>
    <para os="osuse">
     Updated documentation can be found at the following URL:
     <ulink url="http://doc.opensuse.org/projects/autoyast/"/>
    </para>
    <para os="sles">
     Updated documentation can be found at the following URL:
     <ulink url="https://www.suse.com/documentation/sles11/"/>
    </para>
   </note>
  </sect1>
  <sect1 id="motiv">
   <title>Motivation</title>

   <para>
    The <ulink url="http://www.linuxjournal.com/">Linux Journal</ulink>, in
    an article in
    <ulink url="http://www.linuxjournal.com/categories.php?op=newindex&amp;catid=178">issue
    78</ulink> writes:
   </para>

   <para>
    <quote>A standard Linux installation asks many questions about what to
    install, what hardware to configure, how to configure the network
    interface, etc. Answering these questions once is informative and maybe
    even fun. But imagine a system engineer who has to set up a new Linux
    network with a large number of machines. Now, the same issues need to be
    addressed and the same questions answered repeatedly. This makes the
    task very inefficient, not to mention a source of irritation and
    boredom. Hence, a need arises to automate this parameter and option
    selection.</quote>
   </para>

   <para>
    <quote>The thought of simply copying the hard disks naturally crosses
    one's mind. This can be done quickly, and all the necessary functions
    and software will be copied without option selection. However, the fact
    is that simple copying of hard disks causes the individual computers to
    become too similar. This, in turn, creates an altogether new mission of
    having to reconfigure the individual settings on each PC. For example,
    IP addresses for each machine will have to be reset. If this is not done
    properly, strange and inexplicable behavior results.</quote>
   </para>

   <para>
    Regular installation of SuSE Linux is semi-automated by default. The
    user is requested to select the necessary information at the beginning
    of the installation (In most cases language only), YaST2 then generates
    a proposal for the underlying system depending on different factors and
    system paramters. In most cases, and especially for new systems, such a
    proposal can be used to install the system and provides a usable
    installation.
   </para>

   <para>
    The steps following the proposal are fully automated and the user is
    only prompted at the end of the installation to configure hardware and
    network services.
   </para>

   <para>
    AutoYaST2 can be used where no user intervention is required or where
    customization is required. Using an AutoYaST profile, YaST2 prepares the
    system for a custom installation and avoids any interaction with the
    user, unless specified in the file controling the installation.
   </para>

   <para>
    AutoYaST2 is not an automated GUI system. This means that in most cases
    many screens will be skipped, i.e. you will never see the language
    selection interface. AutoYaST2 will simply pass the language parameter
    to the sub-system without displaying any language related interface.
   </para>
  </sect1>
  <sect1 id="overviewandconcept">
   <title>Overview and Concept</title>

   <para>
    Using AutoYaST2, multiple systems sharing the same environment and
    similar but not necesserily identical hardware and performing similar
    tasks, can easily be installed in parallel and quickly. A configuration
    file—referred to as "AutoYaST profile"—is created using existing
    configuration resources. The profile file can be easily tailored for any
    specific environment.
   </para>

   <para>
    Unlike autoinstallation systems available with older SUSE releases,
    AutoYaST2 is fully integrated and provides various options for
    installing and configuring a system. The main advantage over older
    systems and other auto-installation systems is the possibility to
    configure a computer by using existing modules and avoiding using custom
    scripts which are normally executed at the end of the installation.
   </para>

   <para>
    This document will guide you through the three steps of
    auto-installation:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      Preparation: All relevant information about the target system is
      collected and turned into the appropriate directives of the profile.
      The profile file is transferred onto the target system where its
      directives will be parsed and transformed to YaST2 conforming data.
     </para>
    </listitem>
    <listitem>
     <para>
      Installation: Follows the instructions given in the profile and
      installs the base system.
     </para>
    </listitem>
    <listitem>
     <para>
      Configuration: YaST2 in addition to user-defined post-install scripts,
      complete the system configuration.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    The complete and detailed process is illustrated in the following
    figure:
   </para>

<?anas-pagebreak?>

   <figure id="process">
    <title>Auto-installation process</title>
<!-- ke: Do NOT change this entity to &ay; something -->
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="autoyast-oview.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="autoyast-oview.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect1>
 </chapter>
<!--
  Local Variables:
  mode: xml
  sgml-parent-document: ("autoyast.xml" "book" "book")
  End:
  -->
 <chapter id="Profile">
  <title>The Control File</title>
  <para/>
  <sect1 id="Profile-Intro">
   <title>Introduction</title>

   <para>
    The control file is in most cases a configuration description for a
    single system. It consists of sets of resources with properties
    including support for complex structures such as lists, records, trees
    and large embedded or referenced objects.
   </para>
  </sect1>
  <sect1 id="Profile-Format">
   <title>Format</title>

   <para>
    The XML configuration format provides a consistent file structure, which
    is easier to learn and remember when attempting to configure a new
    system.
   </para>

   <para>
    The AutoYaST2 control file uses XML to describe the system installation
    and configuration. XML is a commonly used markup and many users are
    familiar with the concepts of the language and the tools used to process
    XML files. If you edit an existing control file or create a control file
    using an editor from scratch, it is strongly recommended to validate the
    control file using a validating XML parser.
   </para>

   <para>
    The following example shows a control file in XML format:
   </para>

   <example>
    <title>XML Control File (Profile)</title>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
 &lt;profile
 xmlns="http://www.suse.com/1.0/yast2ns"
 xmlns:config="http://www.suse.com/1.0/configns"&gt;
   &lt;partitioning  config:type="list"&gt;
      &lt;drive&gt;
         &lt;device&gt;/dev/hda&lt;/device&gt;
         &lt;partitions config:type="list"&gt;
           &lt;partition&gt;
              &lt;filesystem config:type="symbol"&gt;ext2&lt;/filesystem&gt;
              &lt;size&gt;520Mb&lt;/size&gt;
              &lt;mount&gt;/&lt;/mount&gt;
           &lt;/partition&gt;
           &lt;partition&gt;
              &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
              &lt;size&gt;1200Mb&lt;/size&gt;
              &lt;mount&gt;/data&lt;/mount&gt;
           &lt;/partition&gt;
         &lt;/partitions&gt;
      &lt;/drive&gt;
   &lt;/partitioning&gt;
   &lt;scripts&gt;
    &lt;pre-scripts&gt;
     &lt;script&gt; 
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
	&lt;filename&gt;start.sh&lt;/filename&gt;
         &lt;source&gt;

            &lt;![CDATA[
#!/bin/sh 
echo "Starting installation" 
exit 0

]]&gt;

         &lt;/source&gt;
     &lt;/script&gt;  
    &lt;/pre-scripts&gt;
   &lt;/scripts&gt;
&lt;/profile&gt;</screen>
   </example>
  </sect1>
  <sect1 id="Profile-Structure">
   <title>Structure</title>

   <para>
    Below is an example of a basic control file container, the actual
    content of which is explained later on in this chapter.
   </para>

   <example>
    <title>Control file container</title>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
 &lt;profile
 xmlns="http://www.suse.com/1.0/yast2ns"
 xmlns:config="http://www.suse.com/1.0/configns"&gt;
 
&lt;!-- RESOURCES --&gt;

&lt;/profile&gt;</screen>
   </example>

   <para>
    The profile element (root node) contains one or more distinct resource
    elements. The permissible resource elements are specified in the schema
    files
   </para>

   <sect2>
    <title>Resources and Properties</title>
    <para>
     A resource element either contains multiple and distinct property and
     resource elements, or multiple instances of the same resource element,
     or it is empty. The permissible content of a resource element is
     specified in the schema files.
    </para>
    <para>
     A property element is either empty or contains a literal value. The
     permissible property elements and values in each resource element are
     specified in the schema files
    </para>
    <para>
     An element can be either a container of other elements (a resource) or
     it has a literal value (a property); it can never be both. This
     restriction is specified in the schema files. A configuration component
     with more than one value must either be represented as some kind of
     embedded list in a property value or as a nested resource.
    </para>
   </sect2>

   <sect2>
    <title>Nested Resources</title>
    <para>
     Nested resource elements allow a tree-like structure of configuration
     components to be built to any level.
    </para>
    <example>
     <title>Nested Resources</title>
<screen>...
&lt;drive&gt; 
  &lt;device&gt;/dev/hda&lt;/device&gt; 
  &lt;partitions&gt; &lt;!-- this is wrong, explanation below --&gt;
     &lt;partition&gt;
        &lt;size&gt;1000mb&lt;/size&gt; 
        &lt;mount&gt;/&lt;/mount&gt; 
     &lt;/partition&gt; 
     &lt;partition&gt; 
        &lt;size&gt;250mb&lt;/size&gt; 
        &lt;mount&gt;/tmp&lt;/mount&gt; 
     &lt;/partition&gt; 
  &lt;/partitions&gt; 
&lt;/drive&gt;
....
</screen>
    </example>
    <para>
     In the example above the disk resource consists of a device property
     and a partitions resource. The partitions resource contains multiple
     instances of the partition resource. Each partition resource contains a
     size and mount property.
    </para>
    <para>
     The XML schema defines the partitions element as a resource supporting
     one or multiple partition element children. If only one partition
     resource is specified it is important to use the "config:type"
     attribute of the partitions element to indicate that the content is a
     resource, in this case a list. Using the partitions element without
     specifying the type in this case will result in undefined behavior as
     <phrase role="acronym">YaST2</phrase> will improperly interpret the
     partitions resource as a property. The example below illustrates this
     use case.
    </para>
    <example>
     <title>Nested Resources with Type Attributes</title>
<screen>...
&lt;drive&gt; 
  &lt;device&gt;/dev/hda&lt;/device&gt; 
  &lt;partitions config:type="list"&gt; 
     &lt;partition&gt; 
        &lt;size&gt;1000&lt;/size&gt; 
        &lt;mount&gt;/&lt;/mount&gt; 
     &lt;/partition&gt; 
     &lt;partition&gt; 
        &lt;size&gt;250&lt;/size&gt; 
        &lt;mount&gt;/tmp&lt;/mount&gt; 
     &lt;/partition&gt; 
  &lt;/partitions&gt; 
&lt;/drive&gt;
....</screen>
    </example>
   </sect2>

   <sect2>
    <title>Attributes</title>
    <para>
     Global profile attributes are used to define meta-data on resources and
     properties. Attributes are used to define context switching. They are
     also used for naming and typing properties as shown in the previous
     sections. Profile attributes are in a separate namespace so they do not
     have to be treated as reserved words in the default namespace. New ones
     can then be added without having to potentially alter existing
     profiles.
    </para>
    <para>
     Profile attributes are defined in the configuration namespace and must
     always be prefixed with <emphasis>config:</emphasis> . All profile
     attributes are optional. Most can be used with both resource and
     property elements but some can only be used with one type of element
     which is specified in the schema files.
    </para>
    <para>
     The type of an element is defined using the
     <emphasis>config:type</emphasis> attribute. The type of a resource
     element is always RESOURCE, although this can also be made explicit
     with this attribute (to ensure correct identification of an empty
     element, for example, when there is no schema file to refer to). A
     resource element cannot be any other type and this restriction is
     specified in the schema file. The type of a property element determines
     the interpretation of its literal value. The type of a property element
     defaults to <emphasis>STRING</emphasis>, as specified in the schema
     file. The full set of permissible types is specified in the schema
     file.
    </para>
   </sect2>
  </sect1>
  <sect1 id="Profile-DTD">
   <title>RELAX NG—A Schema Language for XML</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2>
    <title>Introduction</title>
    <para>
     A RELAX NG schema specifies a pattern for the structure and content of
     an XML document. A RELAX NG schema thus identifies a class of XML
     documents consisting of those documents that match the pattern. A RELAX
     NG schema is itself an XML document.
    </para>
   </sect2>
  </sect1>
 </chapter>
<!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast.xml" "part" "chapter")
       End:
      -->
 <chapter id="CreateProfile">
  <title>Creating A Control File</title>
  <para/>
  <sect1 id="Autoinstallation-collectInfo">
   <title>Collecting Information</title>

   <para>
    In order to create the control file, you need to collect information
    about the systems your are going to install. This includes hardware data
    and network information among other things. Make sure you have the
    following information about the machines you want to install:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      Hard disk types and sizes
     </para>
    </listitem>
    <listitem>
     <para>
      Graphical interface and attached monitor, if any
     </para>
    </listitem>
    <listitem>
     <para>
      Network interface and MAC address if known (for example, when using
      DHCP)
     </para>
    </listitem>
   </itemizedlist>

   <para>
    With these parameters you are ready to go and create a profile of your
    systems to control the auto-installation process.
   </para>
  </sect1>
  <sect1 id="CreateProfile-CMS">
   <title>Using the Configuration Management System (CMS)</title>

   <para>
    In order to create the control file for one or more computers, a
    configuration interface based on YaST2 is provided. This system depends
    on existing modules which are usually used to configure a computer in
    regular operation mode, for example, after SUSE Linux is installed.
   </para>

   <para>
    The configuration management system lets you create control files easily
    and lets you manage a repository of configurations for the use in a
    networked environment with multiple clients.
   </para>

   <figure>
    <title>Configuration System</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="autoyast2-maindialog.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="autoyast2-maindialog.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>

   <sect2>
    <title>Creating a New Profile</title>
    <para>
     With some exceptions, almost all resources of the control file can be
     configured using the configuration management system. The system offers
     flexibility and the configuration of some resources is identical to the
     one available in the YaST2 Control Center. In addition to the existing
     and familiar modules new interfaces were created for special and
     complex configurations, for example for partitioning, general options
     and software.
    </para>
    <para>
     Furthermore, using a CMS guarantees the validity of the resulting
     control file and its direct use for starting automated installation.
    </para>
    <para>
     Make sure the configuration system is installed (package
     <emphasis>autoyast2</emphasis>) and call it using the <emphasis>YaST2
     Control Center</emphasis> or as root with the following command (make
     sure the <emphasis>DISPLAY</emphasis> variable is set correctly to
     start the graphical user interface instead of the text based one):
    </para>
<screen>/sbin/yast2 autoyast</screen>
   </sect2>
  </sect1>
  <sect1 id="CreateProfile-Manual">
   <title>Creating/Editing a Control File Manually</title>

   <para>
    If editing the control file manually, make sure it has a valid syntax.
    To check the syntax, use the tools already available on the
    distribution. For example, to verify that the file is well-formed, use
    the utility <command>xmllint</command> available with the
    <emphasis>libxml2</emphasis> package:
   </para>

<screen>xmllint &lt;control file&gt;</screen>

   <para>
    If the control file is not well formed, for example, if a tag is not
    closed, <command>xmllint</command> will report about the errors.
   </para>

   <para>
    Before going on with the autoinstallation, fix any errors resulting from
    such checks. The autoinstallation process cannot be started with an
    invalid and not well-formed control file.
   </para>

   <para>
    You can use any XML editor available on your system or your favorite
    text editor with XML support (for example, Emacs, Vim). However, it is
    not optimal to create the control file manually for a large number of
    machines and it should only be seen as an interface between the
    autoinstallation engine and the Configuration Management System (CMS).
   </para>

<!-- fs 2013-03-18: kxmledit does not exist anymore

   <figure id="kxmleditor">
    <title>Editing the control file with <command>kxmledit</command></title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="kxmleditor.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="kxmleditor.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>
-->
  </sect1>
  <sect1 id="CreateProfile-XSLT">
   <title>Creating a Profile (Control File) via Script with XSLT</title>

   <para>
    If you have a template and want to change a few things via script or
    command line, use an XSLT processor like <emphasis>sablot</emphasis>.
    For example, if you have an AutoYaST profile and want to fillout the
    hostname via script for any reason (if doing this so often, you want to
    script it)
   </para>

   <para>
    First, create an XSL file
   </para>

   <example>
    <title>Example file for replacing hostname/domain by script</title>
<screen>&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:y2="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns"
  xmlns="http://www.suse.com/1.0/yast2ns"
  version="1.0"&gt;


  &lt;xsl:output method="xml" encoding="UTF-8" indent="yes" omit-xml-declaration="no" cdata-section-elements="source"/&gt;

  &lt;!-- the parameter names --&gt;
  &lt;xsl:param name="hostname"/&gt;
  &lt;xsl:param name="domain"/&gt;

  &lt;xsl:template match="/"&gt;
    &lt;xsl:apply-templates select="@*|node()"/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="y2:dns"&gt;
    &lt;xsl:copy&gt;
      &lt;!-- where to copy the parameters --&gt;
      &lt;domain&gt;&lt;xsl:value-of select="string($domain)"/&gt;&lt;/domain&gt;
      &lt;hostname&gt;&lt;xsl:value-of select="string($hostname)"/&gt;&lt;/hostname&gt;  
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;


  &lt;xsl:template match="@*|node()" &gt;
    &lt;xsl:copy&gt;
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</screen>
   </example>

   <para>
    This file expects the "hostname" and the "domain" as parameters from the
    user.
   </para>

<screen>&lt;xsl:param name="hostname"/&gt;
&lt;xsl:param name="domain"/&gt;</screen>

   <para>
    There will be a copy of those parameters in the dns section of the
    control file. That means, if there already is a domain element in the
    dns section, you will get a second one (no good).
   </para>

   <remark>mdejmek: why is this no good? please explain</remark>

   <para>
    If you want to create a new AutoYaST profile now from the template plus
    the XSL file, run the following command:
   </para>

<screen>sabcmd add_hostname.xsl \$hostname=myHost \$domain=my.domain  template.xml</screen>

   <para>
    You will get a filled out AutoYaST profile then on STDOUT.
   </para>

   <para>
    If you have multiple XSL files you want to apply to a template, do the
    following:
   </para>

<screen>sabcmd add_hd_vg.xsl \$device=/dev/sda \$partition=p2 \$vg=system \
        | sabcmd add_hard disk.xsl \$device=/dev/system \$lvm=true \
        | sabcmd ....
        | sabcmd add_hostname.xsl \$hostname=myHost \$domain=my.domain</screen>

   <para>
    Pipe the output of each sabcmd to the next sabcmd.
   </para>

   <para>
    For more information about XSLT, go to the official Web page
    <ulink url="http://www.w3.org/TR/xslt">www.w3.org/TR/xslt</ulink>
   </para>
  </sect1>
 </chapter>
<!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast.xml" "book" "chapter")
       End:
      -->
 <chapter id="configuration">
  <title>Configuration and Installation Options</title>
  <para>
   This chapter introduces important parts of a control file for standard
   purposes. To learn about other available options, use the configuration
   management system.
  </para>
  <para>
   Note that for some of the configuration options to work, additional
   packages have to be installed, depending on the software selection you
   have configured. If you choose to install <emphasis>Minimal</emphasis>
   then some packages might be missing and have to be added to the
   individual package selection.
  </para>
  <para>
   YaST will install packages required in the second phase of the
   installation and before the post-installation phase of AutoYaST has
   started. However, if necessary YaST modules are not available in the
   system, important configuration steps will be skipped. For example, no
   security settings will be configured if
   <emphasis>yast2-security</emphasis> is not installed.
  </para>
  <sect1 id="CreateProfile-General">
   <title>General Options</title>

   <para>
    General options include all the settings related to the installation
    process and the environment of the installed system.
   </para>

    <para>
     The mode section configures the behavior of AutoYaST with regard to
     confirmation and rebooting. The following has to be in the
     &lt;general&gt;&lt;mode&gt; section.
    </para>
    <para>
     <remark>emap 2011-11-05: variable name is not specified, I assume it's
  'confirm' as in the commented table below.</remark>
     By default, the user must confirm the auto-installation process. This
     option allows the user to view and change the settings for a target
     system before they are committed and can be used for debugging.
     <emphasis>confirm</emphasis> is set to "true" by default to avoid
     recursive installs when the system schedules a reboot after initial
     system setup. Only disable confirmation if you want to carry out a
     fully unattended installation.
    </para>
    <para>
     With <emphasis>halt</emphasis> you cause AutoYaST to shut down the
     machine after all packages have been installed. Instead of a reboot
     into stage two, the machine is turned off. The boot loader is alreay
     installed and all your chroot scripts have run.
    </para>
    <para>
     <emphasis>final_halt</emphasis> and <emphasis>final_reboot</emphasis>
     have been introduced with openSUSE 11.0 and SLES11. You can reboot or
     halt the machine after installation and configuration are finished at
     the end of stage 2.
    </para>
    <para>
     openSUSE 11.0 uses the kexec feature and does not reboot anymore
     between stage1 and stage2. With the <emphasis>forceboot</emphasis>
     option you can force the reboot in case you need it for some reason.
     The value "true" will reboot, "false" will not reboot and a missing
     <emphasis>forceboot</emphasis> option uses the product's default.
    </para>
    
    <important>
     <title>Drivers May Need a Reboot</title>
     <para>
     <remark>2013-03-18 - fs: bnc #802387</remark>
      Some drivers, for example the proprietary drivers for Nvidia and ATI
      graphics cards, need a reboot and will not work properly when using
      kexec. Therefore the default on &sle; products is to always do a proper
      reboot.  
     </para>
    </important>
    
<!-- FIXME: not allowed inside of example
      <informaltable >
          <tgroup cols="3">
            <thead>
              <row>
                <entry>Attribute</entry>
                <entry>Values</entry>
                <entry>Description</entry>
              </row>
            </thead>
        <tbody>
          <row>
            <entry>confirm</entry>
            <entry>If this boolean is set to "true", the installation stops at the confirmation screen (also called proposal screen) and has to be confirmed with the "install" button.
              <screen>&lt;confirm config:type="boolean"&gt;true&lt;/confirm&gt;</screen>
            </entry>
            <entry>Optional. The default is true.</entry>
          </row>
          <row>
            <entry>halt</entry>
            <entry>Shuts down the machine after the first stage. So if you turn it on again, the machine boots and the second stage of the autoinstallation starts
              <screen>&lt;halt config:type="boolean"&gt;true&lt;/halt&gt;</screen>
            </entry>
            <entry>Optional. The default is false.</entry>
          </row>
          <row>
            <entry>second_stage</entry>
            <entry>This boolean determines if AutoYaST will run in the second stage too (after the partitioning, software and boot loader installation of the first stage). If you set this to "false", a normal manual installation happens in the second stage.
              <screen>&lt;second_stage config:type="boolean"&gt;true&lt;/second_stage&gt;</screen>
            </entry>
            <entry>Optional. The default is true.</entry>
          </row>
          <row>
            <entry>final_reboot</entry>
            <entry>If you set this to "true", the machine will reboot at the very end of the installation (when everything is installed and configured at the end of the second stage)
              <screen>&lt;final_reboot config:type="boolean"&gt;true&lt;/final_reboot&gt;</screen>
            </entry>
            <entry>Optional. The default is false. It makes no sense to set this <emphasis>and</emphasis> final_halt to "true". This options is available since openSUSE 11.0 and SLES11.</entry>
          </row>
          <row>
            <entry>final_halt</entry>
            <entry>If you set this to "true", the machine will shutdown at the very end of the installation (when everything is installed and configured at the end of the second stage)
              <screen>&lt;final_halt config:type="boolean"&gt;true&lt;/final_halt&gt;</screen>
            </entry>
            <entry>Optional. The default is "false". It makes no sense to set this <emphasis>and</emphasis> final_reboot to "true". This options is available since openSUSE 11.0 and SLES11.</entry>
          </row>
          <row>
            <entry>forceboot</entry>
            <entry>Some openSUSE releases use kexec to avoid the reboot after the first stage. They immediately boot into the installed system. You can force a reboot with this
              <screen>&lt;forceboot config:type="boolean"&gt;true&lt;/forceboot&gt;</screen>
            </entry>
            <entry>Optional. The default is "false".</entry>
          </row>
        </tbody>
      </tgroup>
     </informaltable>
-->

   <example>
    <title>General Options</title>
<screen>&lt;general&gt;
      &lt;signature-handling&gt;
        &lt;accept_unsigned_file         config:type="boolean"&gt;true&lt;/accept_unsigned_file&gt;
        &lt;accept_file_without_checksum config:type="boolean"&gt;true&lt;/accept_file_without_checksum&gt;
        &lt;accept_verification_failed   config:type="boolean"&gt;true&lt;/accept_verification_failed&gt;
        &lt;accept_unknown_gpg_key       config:type="boolean"&gt;true&lt;/accept_unknown_gpg_key&gt;
        &lt;import_gpg_key               config:type="boolean"&gt;true&lt;/import_gpg_key&gt;
        &lt;accept_non_trusted_gpg_key   config:type="boolean"&gt;true&lt;/accept_non_trusted_gpg_key&gt;
      &lt;/signature-handling&gt;
      &lt;mode&gt;
        &lt;halt config:type="boolean"&gt;false&lt;/halt&gt;
        &lt;forceboot config:type="boolean"&gt;false&lt;/forceboot&gt;     &lt;! -- since 11.0 --&gt;
        &lt;final_reboot config:type="boolean"&gt;false&lt;/final_reboot&gt;   &lt;! -- since 11.0 --&gt;
        &lt;final_halt config:type="boolean"&gt;false&lt;/final_halt&gt;       &lt;! -- since 11.0 --&gt;
        &lt;confirm config:type="boolean"&gt;true&lt;/confirm&gt;
        &lt;second_stage config:type="boolean"&gt;true&lt;/second_stage&gt;
      &lt;/mode&gt;
      &lt;proposals config:type="list"&gt;        &lt;!-- since 11.1 --&gt;
        &lt;proposal&gt;partitions_proposal&lt;/proposal&gt;
      &lt;/proposals&gt;
      &lt;wait&gt;  &lt;!-- since 11.1 / SLES11 --&gt;
          &lt;pre-modules config:type="list"&gt;
              &lt;module&gt;
                  &lt;name&gt;networking&lt;/name&gt;
                  &lt;sleep&gt;
                      &lt;time config:type="integer"&gt;10&lt;/time&gt;
                      &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
                  &lt;/sleep&gt;
                  &lt;script&gt;
                      &lt;source&gt;
                          sleep 5
                      &lt;/source&gt;
                      &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
                  &lt;/script&gt;
              &lt;/module&gt;
          &lt;/pre-modules&gt;
          &lt;post-modules config:type="list"&gt;
              &lt;module&gt;
                  &lt;name&gt;networking&lt;/name&gt;
                  &lt;sleep&gt;
                      &lt;time config:type="integer"&gt;3&lt;/time&gt;
                      &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
                  &lt;/sleep&gt;
                  &lt;script&gt;
                      &lt;source&gt;
                          sleep 7
                      &lt;/source&gt;
                      &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
                  &lt;/script&gt;
              &lt;/module&gt;
          &lt;/post-modules&gt;
      &lt;/wait&gt;

      &lt;!-- the storage section was invented with openSUSE 11.3 and SLES11 SP2 --&gt;
      &lt;storage&gt;
        &lt;!--
            partition_alignment:

            `align_optimal  - That's the default. Partitions are aligned like the kernel suggests.
                              This can lead to problem with some machines/bioses that are unable to boot with that
                              alignment
            `align_cylinder - that's the alignment like it was in pre-openSUSE 11.3 time for years. Partitions
                              always start on a cylinder boundary
        --&gt;
        &lt;partition_alignment config:type="symbol"&gt;align_cylinder&lt;/partition_alignment&gt;
      &lt;/storage&gt;

&lt;/general&gt;</screen>
   </example>

   <para>
    AutoYaST in openSUSE 11.1 allows you to configure the proposal screen
    with the &lt;proposals config:type="list"&gt; option in the profile. All
    proposals that are listed in that section are shown in the proposal
    screen if you set the <emphasis>confirm</emphasis> option to "true".
   </para>

   <para>
    This is the proposal list openSUSE 11.1, which you can also find in the
    <filename>control.xml</filename> file on the installation source:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      partitions_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      bootloader_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      country_simple_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      timezone_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      users_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      hwinfo_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      mouse_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      software_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      runlevel_proposal
     </para>
    </listitem>
    <listitem>
     <para>
      deploying_proposal
     </para>
    </listitem>
   </itemizedlist>

   <para>
    The <emphasis>wait</emphasis> section has been introduced with openSUSE
    11.1 and SLES11. You can let AutoYaST <command>sleep</command> before
    and after each module run during the second stage. You can run scripts
    and/or pass a value (in seconds) for AutoYaST to sleep. In the example
    above AutoYaST will sleep for 15 seconds (10+5) before the network
    configuration starts and 10 seconds (3+7) after the network
    configuration is done. The scripts in the example don't really make a
    lot of sense because you could pass that value as "time" value too. They
    are only used to show how scripts in the wait section work now.
   </para>

   <note>
    <title>Changes since SUSE Linux 10.1/SLES10</title>
    <para>
     The <emphasis>language</emphasis>, <emphasis>keyboard</emphasis> and
     <emphasis>clock</emphasis> properties in the
     <emphasis>general</emphasis> resource were moved to the root
     (<emphasis>profile</emphasis>) element of the autoyast profile. Do not
     use them in the general section anymore.
    </para>
    <para>
     Now you can use the <emphasis>second_stage</emphasis> property to turn
     off AutoYaST after the first reboot (set to "false"). Then the complete
     second stage is a manual installation. Default is "true", which means
     AutoYaST is doing a complete installation. Since openSUSE 11.0 you can
     set the boolean <emphasis>final_reboot</emphasis> and
     <emphasis>final_halt</emphasis> to reboot or turn off the machine at
     the end of stage 2.
    </para>
    <para>
     For signature handling, read the
<!--<emphasis>Software</emphasis>
      chapter of this documentation.<remark>emap 2011-11-05: Add proper ref?</remark>-->
     <remark>ke 2011-11-09: I hope I got the link right.</remark>
     <xref linkend="CreateProfile-Software"/>.
    </para>
   </note>
  </sect1>
  <sect1 id="CreateProfile-Reporting">
   <title>Reporting</title>

   <para>
    The <emphasis>report</emphasis> resource manages three types of pop-ups
    that may appear during installation:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      message pop-ups (usually non-critical, informative messages),
     </para>
    </listitem>
    <listitem>
     <para>
      warning pop-ups (if something might go wrong),
     </para>
    </listitem>
    <listitem>
     <para>
      error pop-ups (in case an error occurs).
     </para>
    </listitem>
   </itemizedlist>

   <example>
    <title>Reporting Behavior</title>
<screen>

    &lt;report&gt;    
      &lt;messages&gt;
	&lt;show config:type="boolean"&gt;true&lt;/show&gt;
	&lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
	&lt;log config:type="boolean"&gt;true&lt;/log&gt;
      &lt;/messages&gt;
      &lt;errors&gt;
	&lt;show config:type="boolean"&gt;true&lt;/show&gt;
	&lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
	&lt;log config:type="boolean"&gt;true&lt;/log&gt;
      &lt;/errors&gt;
      &lt;warnings&gt;
	&lt;show config:type="boolean"&gt;true&lt;/show&gt;
	&lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
	&lt;log config:type="boolean"&gt;true&lt;/log&gt;
      &lt;/warnings&gt;
    &lt;/report&gt;

</screen>
   </example>

   <para>
    Depending on your experience, you can skip, log and show (with timeout)
    those messages. It is recommended to show all
    <emphasis>messages</emphasis> with timeout. Warnings can be skipped in
    some places but should not be ignored.
   </para>

   <para>
    The default setting in auto-installation mode is to show all messages
    without logging and with a timeout of 10 seconds.
   </para>

   <warning>
    <title>Critical System Messages</title>
    <para>
     Note that <emphasis>not</emphasis> all messages during installation are
     controlled by the <emphasis>report</emphasis> resource. Some critical
     messages concerning package installation and partitioning will show up
     ignoring your settings in the <emphasis>report</emphasis> section.
     Mostly those messages will have to be answered with
     <emphasis>Yes</emphasis> or <emphasis>No</emphasis>.
    </para>
   </warning>
  </sect1>
  <sect1 id="CreateProfile-Bootloader">
   <title>The Boot Loader</title>

   <remark>emap 2011-11-04: Please check my changes to 'original_name throughout. It made little sense. Search for: "windows" or other.</remark>

   <para>
    This documentation is for yast2-bootloader
    <remark>emap 2011-11-04: Proper formatting, entity? Throughout the text.</remark>
    and applies to SLE11 and openSUSE 11.0+. For older versions, use the
    documentation that comes with your distribution in
    /usr/share/doc/packages/autoyast2/
   </para>

   <para>
    General scope of AutoYaST profile only boot loader part.
    <remark>emap 2011-11-04: Unclear and incomplete sentence.</remark>
   </para>

<screen>&lt;bootloader&gt;
   &lt;device_map config:type="list"&gt;
    - info about order of devices in device.map
   &lt;/device_map&gt;
   &lt;global&gt;
   - info about configuration of installation (installation settings for GRUB and generic boot code)
   &lt;/global&gt;
   &lt;initrd_modules config:type="list"&gt;
   - list of initrd modules
   &lt;/initrd_modules&gt;
   &lt;loader_type&gt;grub&lt;/loader_type&gt; - type of bootloader
   &lt;sections config:type="list"&gt;
   - bootloader sections in menu.lst
   &lt;/sections&gt;
 &lt;/bootloader&gt;</screen>

   <sect2>
    <title>Device map</title>
    <para>
     You can define devices and their order in
     <filename>device.map</filename>, but it is not necessary.
     yast2-bootloader checks the devices during installation and proposes a
     device.map. It can happen that the order of the devices is wrong or you
     have defined a different order than the one set in the BIOS. Take care
     when you make changes there. The system might not boot afterwards.
    </para>
<screen>&lt;device_map config:type="list"&gt;
     &lt;device_map_entry&gt;
       &lt;firmware&gt;hd0&lt;/firmware&gt; &lt;!-- order of devices in target map  --&gt;
       &lt;linux&gt;/dev/disk/by-id/ata-ST3500418AS_6VM23FX0&lt;/linux&gt; &lt;!-- name of device (disk)  --&gt;
     &lt;/device_map_entry&gt;
&lt;/device_map&gt;</screen>
   </sect2>

   <sect2>
    <title>Globals</title>
    <para>
     This is an important if optional part. Define here where to install
     GRUB and how the boot process will work. Again, yast2-bootloader
     proposes a configuration if you don't define one. Usually the AutoYaST
     profile includes only this part and all other parts are added
     automatically during installation by yast2-bootloader. Unless you have
     some special requirements, don't specify the boot loader config in the
     XML file.
    </para>
<screen>&lt;global&gt;
     &lt;activate&gt;true&lt;/activate&gt;
     &lt;default&gt;openSUSE 11.2 - 2.6.31.5-0.1&lt;/default&gt;
     &lt;gfxmenu&gt;(hd0,1)/boot/message&lt;/gfxmenu&gt;
     &lt;lines_cache_id&gt;4&lt;/lines_cache_id&gt;
     &lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
 &lt;/global&gt;</screen>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          activate
         </para>
        </entry>
        <entry>
         <para>
          Set the boot flag on the boot partition. The boot partition can be
          "/" if there is no separate /boot partition. If the boot partition
          is on a logical partition, the boot flag is set to the extended
          partition.
         </para>
<screen>&lt;activate&gt;true&lt;/activate&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          default
         </para>
        </entry>
        <entry>
         <para>
          Name (title) of the default boot section from
          <filename>menu.lst</filename>.
         </para>
<screen>&lt;default&gt;openSUSE 11.2 - 2.6.31.5-0.1&lt;/default&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          gfxmenu
         </para>
        </entry>
        <entry>
         <para>
          Path to the graphical boot menu (/boot/message). Set to 'none' if
          you do not want to use a graphical boot menu.
         </para>
<screen>&lt;gfxmenu&gt;(hd0,1)/boot/message&lt;/gfxmenu&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          timeout
         </para>
        </entry>
        <entry>
         <para>
          The timeout in seconds for automatically booting the default boot
          section from <filename>menu.lst</filename>.
         </para>
<screen>&lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          generic_mbr
         </para>
        </entry>
        <entry>
         <para>
          Write generic boot code to MBR, will be ignored if boot_mbr is set
          to "true".
         </para>
<screen>&lt;generic_mbr&gt;false&lt;/generic_mbr&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          boot_mbr
         </para>
        </entry>
        <entry>
         <para>
          Write GRUB to MBR of the first disk in the order (device.map
          includes order of disks).
         </para>
<screen>&lt;boot_mbr&gt;false&lt;/boot_mbr&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          boot_boot
         </para>
        </entry>
        <entry>
         <para>
          Write GRUB to separate /boot partition. If no separate /boot
          partition exists, GRUB will be written to "/".
         </para>
<screen>&lt;boot_boot&gt;false&lt;/boot_boot&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          boot_root
         </para>
        </entry>
        <entry>
         <para>
          Write GRUB to "/" partition.
         </para>
<screen>&lt;boot_root&gt;false&lt;/boot_root&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          boot_extended
         </para>
        </entry>
        <entry>
         <para>
          Write GRUB to the extended partition (important if you want to use
          a generic boot code and the "boot" partition is logical). NOTE: if
          the boot partition is logical, it should use boot_mbr (write GRUB
          to MBR) instead of generic_mbr.
         </para>
<screen>&lt;boot_extended&gt;false&lt;/boot_extended&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          boot_custom
         </para>
        </entry>
        <entry>
         <para>
          Write GRUB to custom device.
         </para>
<screen>&lt;boot_custom&gt;/dev/sda3&lt;/boot_custom&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          trusted_grub
         </para>
        </entry>
        <entry>
         <para>
          Use trusted GRUB instead of the classical GRUB (gfxmenu is deleted
          automatically if this option is true). Do not use trusted GRUB if
          your hardware does not support it.
         </para>
<screen>&lt;trusted_grub&gt;false&lt;/trusted_grub&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          lines_cache_id
         </para>
        </entry>
        <entry>
         <para>
          Internal option specifying the cache id for perl-Bootloader. Do
          not use or change it in a cloned XML file.
         </para>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect2>

   <sect2>
    <title>Initrd modules</title>
    <para>
     A list of initrd modules. Do not create your own list if you do not
     fully understand the impact. AutoYaST will take care of it for you.
    </para>
   </sect2>

   <sect2>
    <title>Loader Type</title>
    <para>
     Define which boot loader to use: grub, lilo, ppc or elilo.
    </para>
<screen>&lt;loader_type&gt;grub&lt;/loader_type&gt;</screen>
   </sect2>

   <sect2>
    <title>Sections</title>
    <para>
     The configuration of the boot sections in the menu.lst is added
     automatically here by yast2-bootloader during installation.
     yast2-bootloader deletes boot sections with no valid kernel and initrd
     path.
    </para>
<screen>&lt;sections config:type="list"&gt;
     &lt;section&gt;
       &lt;append&gt;resume=/dev/disk/by-id/raid-sil_ajacccbhejai-part2 splash=silent quiet showotps&lt;/append&gt;
       &lt;image&gt;(hd0,0)/vmlinuz-2.6.31-10-default&lt;/image&gt;
       &lt;initial&gt;1&lt;/initial&gt;
       &lt;initrd&gt;(hd0,0)/initrd-2.6.31-10-default&lt;/initrd&gt;
       &lt;lines_cache_id&gt;0&lt;/lines_cache_id&gt;
       &lt;name&gt;openSUSE 11.2 Milestone 8 - 2.6.31-10 (default)&lt;/name&gt;
       &lt;original_name&gt;linux&lt;/original_name&gt;
       &lt;root&gt;/dev/mapper/sil_ajacccbhejai_part3&lt;/root&gt;
       &lt;type&gt;image&lt;/type&gt;
       &lt;vgamode&gt;0x31a&lt;/vgamode&gt;
     &lt;/section&gt;
     &lt;section&gt;
       &lt;append&gt;resume=/dev/disk/by-id/raid-sil_ajacccbhejai-part2 splash=silent quiet showopts&lt;/append&gt;
       &lt;image&gt;(hd0,0)/vmlinuz-2.6.31-10-xen&lt;/image&gt;
       &lt;initrd&gt;(hd0,0)/initrd-2.6.31-10-xen&lt;/initrd&gt;
       &lt;lines_cache_id&gt;2&lt;/lines_cache_id&gt;
       &lt;name&gt;Xen -- openSUSE 11.2 Milestone 8 - 2.6.31-10&lt;/name&gt;
       &lt;nounzip&gt;0&lt;/nounzip&gt;
       &lt;original_name&gt;xen&lt;/original_name&gt;
       &lt;root&gt;/dev/mapper/sil_ajacccbhejai_part3&lt;/root&gt;
       &lt;type&gt;xen&lt;/type&gt;
       &lt;vgamode&gt;0x31a&lt;/vgamode&gt;
       &lt;xen&gt;(hd0,0)/xen.gz&lt;/xen&gt;
       &lt;xen_append&gt;&lt;/xen_append&gt;
     &lt;/section&gt;
     &lt;section&gt;
       &lt;blockoffset&gt;1&lt;/blockoffset&gt;
       &lt;chainloader&gt;/dev/fd0&lt;/chainloader&gt;
       &lt;lines_cache_id&gt;3&lt;/lines_cache_id&gt;
       &lt;name&gt;Floppy&lt;/name&gt;
       &lt;noverifyroot&gt;true&lt;/noverifyroot&gt;
       &lt;original_name&gt;floppy&lt;/original_name&gt;
       &lt;type&gt;other&lt;/type&gt;
     &lt;/section&gt;
   &lt;/sections&gt;</screen>
   </sect2>

   <sect2>
    <title>Options</title>
    <para>
     Available options depend on the <emphasis>type</emphasis>.
    </para>
    <sect3>
     <title>Options for Section Type: image and xen</title>
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           append
          </para>
         </entry>
         <entry>
          <para>
           List of kernel args but without(!) vga= and root=.
          </para>
<screen>&lt;append&gt;splash=silent quiet showopts&lt;/append&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           image
          </para>
         </entry>
         <entry>
          <para>
           Path to the kernel.
          </para>
<screen>&lt;image&gt;(hd0,0)/vmlinuz-2.6.31-10&lt;/image&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           initrd
          </para>
         </entry>
         <entry>
          <para>
           Path to the initrd.
          </para>
<screen>&lt;initrd&gt;(hd0,0)/my-initrd&lt;/initrd&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           lines_cache_id
          </para>
         </entry>
         <entry>
          <para>
           Internal option specifying the cache id for perl-Bootloader. Do
           not use or change it in a cloned XML file.
          </para>
<screen/>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           name
          </para>
         </entry>
         <entry>
          <para>
           Name of section.
          </para>
<screen>&lt;name&gt;Productive System&lt;/name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           original_name
          </para>
         </entry>
         <entry>
          <para>
           Internal name of section parsed by YaST from a comment in the
           configuration file. There are some rules for names, and
           original_name helps to determine if the boot section is "linux"
           or "failsafe". For chainloader it helps to determine if it is
           "windows" or other (linux, floppy, etc). Use a simple
           original_name: linux, xen, windows, floppy, etc.
          </para>
<screen>&lt;original_name&gt;linux&lt;/original_name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           root
          </para>
         </entry>
         <entry>
          <para>
           Location of the root partition ("/").
          </para>
<screen>&lt;root&gt;/dev/mapper/sil_ajacccbhejai_part3&lt;/root&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           type
          </para>
         </entry>
         <entry>
          <para>
           Type of section (image/xen/other/menu).
          </para>
<screen>&lt;type&gt;xen&lt;/type&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           vgamode
          </para>
         </entry>
         <entry>
          <para>
           Kernel arg for vga (vga=).
          </para>
<screen>&lt;vgamode&gt;0x31a&lt;/vgamode&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           xen
          </para>
         </entry>
         <entry>
          <para>
           Path to xen.gz.
          </para>
<screen>&lt;xen&gt;(hd0,0)/xen.gz&lt;/xen&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           xen_append
          </para>
         </entry>
         <entry>
          <para>
           Kernel args for XEN.
          </para>
<screen>&lt;xen_append&gt;&lt;/xen_append&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect3>
    <sect3>
     <title>Options for Section Type: other (chainloader)</title>
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           lines_cache_id
          </para>
         </entry>
         <entry>
          <para>
           Internal option specifying the cache id for perl-Bootloader. Do
           not use or change it in a cloned XML file.
          </para>
<screen/>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           name
          </para>
         </entry>
         <entry>
          <para>
           Name or title of the section.
          </para>
<screen>&lt;name&gt;Floppy&lt;/name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           original_name
          </para>
         </entry>
         <entry>
          <para>
           Internal name of the section parsed by YaST from a comment in the
           configuration file. There are some rules for names and
           original_name helps to determine if the boot section is "linux"
           or "failsafe". For the chainloader it helps to determine if it is
           "windows" or other (linux, floppy, etc). Use a simple
           original_name: linux, xen, windows, floppy etc.
          </para>
<screen>&lt;original_name&gt;linux&lt;/original_name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           type
          </para>
         </entry>
         <entry>
          <para>
           Type of section (image/xen/other/menu).
          </para>
<screen>&lt;type&gt;other&lt;/type&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           blockoffset
          </para>
         </entry>
         <entry>
          <para>
           Offset in chainloader (used only in grub).
          </para>
<screen>&lt;blockoffset&gt;1&lt;/blockoffset&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           chainloader
          </para>
         </entry>
         <entry>
          <para>
           Partition part for chainloader (so chainloader+blockoffset get
           final chainloader item in grub).
           <remark>emap 2011-11-04: Not sure what the parenthesis is supposed to say.</remark>
          </para>
<screen>&lt;chainloader&gt;/dev/fd0&lt;/chainloader&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           noverifyroot
          </para>
         </entry>
         <entry>
          <para>
           With or without checking root.
           <remark>emap 2011-11-04: Awkward. Can someone make this clearer?</remark>
          </para>
<screen>&lt;noverifyroot&gt;true&lt;/noverifyroot&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           remap
          </para>
         </entry>
         <entry>
          <para>
           Windows-specific option for remapping hard disks, for example
           switch the first and second disk: map (hd0) (hd1) map (hd1) (hd0)
          </para>
<screen>&lt;remap&gt;false&lt;/remap&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           makeactive
          </para>
         </entry>
         <entry>
          <para>
           Add the makeactive argument for the chainloader section.
          </para>
<screen>&lt;makeactive&gt;false&lt;/makeactive&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect3>
    <sect3>
     <title>Options for section type: menu (configfile)</title>
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           lines_cache_id
          </para>
         </entry>
         <entry>
          <para>
           Internal option specifying the cache id for perl-Bootloader. Do
           not use or change it in a cloned XML file.
          </para>
<screen/>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           name
          </para>
         </entry>
         <entry>
          <para>
           Name or title of section.
          </para>
<screen>&lt;name&gt;Floppy&lt;/name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           original_name
          </para>
         </entry>
         <entry>
          <para>
           Internal name of section parsed by YaST from a comment in the
           configuration file. There are some rules for names and
           original_name helps to determine if the boot section is "linux"
           or "failsafe". For the chainloader it helps to determine if it is
           "windows" or other (linux, floppy etc). Use a simple
           original_name: linux, xen, windows, floppy etc.
          </para>
<screen>&lt;original_name&gt;linux&lt;/original_name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           type
          </para>
         </entry>
         <entry>
          <para>
           Type of section (image/xen/other/menu).
          </para>
<screen>&lt;type&gt;other&lt;/type&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           configfile
          </para>
         </entry>
         <entry>
          <para>
           Path to menu.lst config file.
          </para>
<screen>&lt;configfile&gt;1&lt;/configfile&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           root
          </para>
         </entry>
         <entry>
          <para>
           Device name for loading menu.lst from another installation of
           Linux.
          </para>
<screen>&lt;root&gt;/dev/sda1&lt;/root&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect3>
   </sect2>
  </sect1>
  <sect1 id="CreateProfile-Partitioning">
   <title>Partitioning</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2>
    <title>Drive Configuration</title>
    <warning>
     <title>EVMS Support Dropped in openSUSE 11.1 and SLES11</title>
     <para>
      Since openSUSE 11.1 and SLES11, EVMS is no longer supported in the
      installation system. That means all support for EVMS in AutoYaST was
      dropped as well. All EVMS documentation here is only valid for SLES10
      (all service packs).
     </para>
    </warning>
    <para>
     The following elements must be between the &lt;partitioning
     config:type="list"&gt;&lt;drive&gt; ...
     &lt;/drive&gt;&lt;/partitioning&gt; tags in the &lt;profile&gt;
     section.
    </para>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          device
         </para>
        </entry>
        <entry>
         <para>
          The device you want to configure in this &lt;drive&gt; section.
          You can use persistent device names via id, like
          <emphasis>/dev/disk/by-id/ata-WDC_WD3200AAKS-75L9A0_WD-WMAV27368122</emphasis>
          or <emphasis>by-path</emphasis>, like
          <emphasis>/dev/disk/by-path/pci-0001:00:03.0-scsi-0:0:0:0</emphasis>.
         </para>
<screen>&lt;device&gt;/dev/hda&lt;/device&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST tries to guess the device (on
          openSUSE 12.2 and SLES11 SP2 you can influence the guessing&mdash;see
          below this table for instructions on how to do that). A RAID must
          always have "/dev/md" as device.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          initialize
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", the partition table gets wiped out before
          AutoYaST starts the partition calculation.
         </para>
<screen>&lt;initialize config:type="boolean"
&gt;true&lt;/initialize&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. The default is "false".
         </para>
        </entry>
       </row>
<!--
              <row>
                <entry>is_lvm_vg</entry>
                <entry><para>Specifies if a device is not a physical device but a LVM volume group (see LVM configuration below).</para>
<screen>&lt;is_lvm_vg config:type="boolean"
&gt;true&lt;/is_lvm_vg&gt;</screen>
</entry>
                <entry><para><emphasis>Deprecated</emphasis> since SLES10SP1 and SL10.2. Use <emphasis>type</emphasis> instead. Must be "true" if this device is a LVM volume group. The default is "false".</para></entry>
              </row>
              <row>
                <entry>is_evms_vg</entry>
                <entry><para>Specifies if a device is not a physical device but an EVMS volume group (see EVMS configuration below).</para>
<screen>&lt;is_evms_vg config:type="boolean"
&gt;true&lt;/is_evms_vg&gt;</screen>
</entry>
                <entry><para><emphasis>Deprecated</emphasis> since SLES10SP1 and SL10.2. Use <emphasis>type</emphasis> instead. Must be "true" if this device is an EVMS volume group. The default is "false".</para></entry>
              </row>
-->
       <row>
        <entry>
         <para>
          partitions
         </para>
        </entry>
        <entry>
         <para>
          A list of &lt;partition&gt; entries (see table below).
         </para>
<screen>&lt;partitions config:type="list"&gt;
  &lt;partition&gt;...&lt;/partition&gt;
  ...
&lt;/partitions&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If no partitions are specified, AutoYaST will create a
          reasonable partitioning (see Automated Partitioning below).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          pesize
         </para>
        </entry>
        <entry>
         <para>
          This value only makes sense with LVM/EVMS.
         </para>
<screen>&lt;pesize&gt;8M&lt;/pesize&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. Default is 4M for EVMS/LVM volume groups.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          use
         </para>
        </entry>
        <entry>
         <para>
          Specifies the strategy AutoYaST will use to partition the hard
          disk.
         </para>
         <para>
          Choose between:
         </para>
         <itemizedlist>
          <listitem>
           <para>
            all (uses the whole device while calculating the new
            partitioning),
           </para>
          </listitem>
          <listitem>
           <para>
            linux (only existing Linux partitions are used),
           </para>
          </listitem>
          <listitem>
           <para>
            free (only unused space on the device is used, no other
            partitions are touched),
           </para>
          </listitem>
          <listitem>
           <para>
            1,2,3 (a list of comma separated partition numbers to use).
           </para>
          </listitem>
         </itemizedlist>
        </entry>
        <entry>
         <para>
          This parameter should be provided.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          type
         </para>
        </entry>
        <entry>
         <para>
          Specify the type of the <emphasis>drive</emphasis>
         </para>
         <para>
          Choose between:
         </para>
         <itemizedlist>
          <listitem>
           <para>
            CT_DISK for physical hard disks (default),
           </para>
          </listitem>
          <listitem>
           <para>
            CT_LVM for LVM volume groups,
           </para>
          </listitem>
          <listitem>
           <para>
            CT_EVMS for EVMS volume groups.
           </para>
          </listitem>
         </itemizedlist>
<screen>&lt;type config:type="symbol"&gt;CT_LVM&lt;/type&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. Default is CT_DISK for a normal physical hard disk.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          disklabel
         </para>
        </entry>
        <entry>
         <para>
          Describes the type of the partition table.
         </para>
         <para>
          Choose between:
         </para>
         <itemizedlist>
          <listitem>
           <para>
            msdos,
           </para>
          </listitem>
          <listitem>
           <para>
            gpt.
           </para>
          </listitem>
         </itemizedlist>
<screen>&lt;disklabel&gt;gpt&lt;/disklabel&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional and available since openSUSE 12.1 and SLES11 SP2. By
          default YaST decides what makes sense (msdos in most cases).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          keep_unknown_lv
         </para>
        </entry>
        <entry>
         <para>
          This value only makes sense for type=CT_LVM drives. If you are
          reusing an LVG and you set this to "true", all existing LVs in that
          VG will not be touched unless they are specified in the
          &lt;partitioning&gt; section. So you can keep existing LVs without
          specifying them.
         </para>
<screen>&lt;keep_unknown_lv config:type="boolean"
&gt;false&lt;/keep_unknown_lv&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional and available since openSUSE 12.1 and SLES11 SP2. The
          default is "false".
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
    <para>
     Since openSUSE 12.2 and SLES11 SP2, you can influence &ay;'s 
     device-guessing for cases where you don't specify a
     &lt;device&gt; entry on your own. Usually &ay; would use the first
     device it can find that looks reasonable but you can configure it to
     skip some devices like this:
    </para>
<screen>
&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;initialize config:type="boolean"&gt;true&lt;/initialize&gt;
    &lt;!-- the skip_list is optional and available since openSUSE 12.2 and SLES11 SP2 --&gt;
    &lt;skip_list config:type="list"&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that use the usb-storage driver --&gt;
        &lt;skip_key&gt;driver&lt;/skip_key&gt;
        &lt;skip_value&gt;usb-storage&lt;/skip_value&gt;
      &lt;/listentry&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that are smaller than 1GB --&gt;
        &lt;skip_key&gt;size_k&lt;/skip_key&gt;
        &lt;skip_value&gt;1048576&lt;/skip_value&gt;
        &lt;skip_if_less_than config:type="boolean"&gt;true&lt;/skip_if_less_than&gt;
      &lt;/listentry&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that are larger than 100GB --&gt;
        &lt;skip_key&gt;size_k&lt;/skip_key&gt;
        &lt;skip_value&gt;104857600&lt;/skip_value&gt;
        &lt;skip_if_more_than config:type="boolean"&gt;true&lt;/skip_if_more_than&gt;
      &lt;/listentry&gt;
    &lt;/skip_list&gt;
    ...
</screen>
    <para>
     For a list of all possible &lt;skip_key&gt;, run "yast2 ayast_probe" on
     openSUSE 12.2 or SLES11SP2.
    </para>
   </sect2>

   <sect2>
    <title>Partition Configuration</title>
    <para>
     The following elements must be between the &lt;partitions
     config:type="list"&gt;&lt;partition&gt; ...
     &lt;/partition&gt;&lt;/partitions&gt; tags in the &lt;drive&gt;
     section.
    </para>
    <informaltable>
     <tgroup cols="3">
       <colspec colwidth="1*"/>
       <colspec colwidth="3*"/>
       <colspec colwidth="2*"/>
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          create
         </para>
        </entry>
        <entry>
         <para>
          Specify if this partition must be created or if it already exists.
         </para>
<screen>&lt;create config:type="boolean"
&gt;false&lt;/create&gt;</screen>
        </entry>
        <entry>
         <para>
          If set to "false", provide information for &ay; about which
          partition this is (like with partition_nr).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          mount
         </para>
        </entry>
        <entry>
         <para>
          The mount point of this partition.
         </para>
<screen>&lt;mount&gt;/&lt;/mount&gt;</screen>
<screen>&lt;mount&gt;swap&lt;/mount&gt;</screen>
        </entry>
        <entry>
         <para>
          You should have at least a root partition (/) and a swap
          partition.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          fstopt
         </para>
        </entry>
        <entry>
         <para>
          Mount options for this partition.
         </para>
<screen>&lt;fstopt
&gt;ro,noatime,user,data=ordered,acl,user_xattr&lt;/fstopt&gt;</screen>
        </entry>
        <entry>
         <para>
          See <command>man mount</command> for available mount options.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          label
         </para>
        </entry>
        <entry>
         <para>
          The label of the partition (useful for the "mountby" parameter;
          see below).
         </para>
<screen>&lt;label&gt;mydata&lt;/label&gt;</screen>
        </entry>
        <entry>
         <para>
          See <command>man e2label</command> for an example.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          uuid
         </para>
        </entry>
        <entry>
         <para>
          The uuid of the partition (only useful for the "mountby"
          parameter; see below).
         </para>
<screen>&lt;uuid
&gt;1b4e28ba-2fa1-11d2-883f-b9a761bde3fb&lt;/uuid&gt;</screen>
        </entry>
        <entry>
         <para>
          See <command>man uuidgen</command>.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          size
         </para>
        </entry>
        <entry>
         <para>
          The size of the partition, e.g. 4G, 4500M, etc. The /boot
          partition and the swap partition can have "auto" as size. Then
          AutoYaST calculates a reasonable size. One partition can have the
          value "max" to use all remaining space.
         </para>
         <para>
          You can specify the the size in percentage. So 10% will use 10% of
          the size of the hard disk or VG. You can mix auto, max, size, and
          percentage as you like.
         </para>
<screen>&lt;size&gt;10G&lt;/size&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          format
         </para>
        </entry>
        <entry>
         <para>
          Specify if AutoYaST should format the partition.
         </para>
<screen>&lt;format config:type="boolean"&gt;false&lt;/format&gt;</screen>
        </entry>
        <entry>
         <para>
          If you set "create" to "true", then you likely want this option
          set to "true" as well.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filesystem
         </para>
        </entry>
        <entry>
         <para>
          Specify the file system to use on this partition:
         </para>
         <itemizedlist>
          <listitem>
           <para>
            ext2,
           </para>
          </listitem>
          <listitem>
           <para>
            ext3,
           </para>
          </listitem>
          <listitem>
           <para>
            ext4,
           </para>
          </listitem>
          <listitem>
           <para>
            xfs,
           </para>
          </listitem>
          <listitem>
           <para>
            reiser,
           </para>
          </listitem>
          <listitem>
           <para>
            swap.
           </para>
          </listitem>
         </itemizedlist>
<screen>&lt;filesystem config:type="symbol"
&gt;ext3&lt;/filesystem&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. The default is ext3 for SLES11 and ext4 for openSUSE
          12.x
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          mkfs_options
         </para>
        </entry>
        <entry>
         <para>
          Specifiy an option string that is added to the mkfs command.
         </para>
<screen>&lt;mkfs_options&gt;-I 128&lt;/mkfs_options&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. Only use this when you know what you are doing.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          partition_nr
         </para>
        </entry>
        <entry>
         <para>
          The partition number of this partition. If you have set
          create=false or if you use LVM, then you can specify the partition
          via partition_nr. You can force AutoYaST to only create primary
          partitions by assigning numbers below 5.
         </para>
<screen>&lt;partition_nr config:type="integer"
&gt;2&lt;/partition_nr&gt;</screen>
        </entry>
        <entry>
         <para>
          In most cases, numbers 1 to 4 are primary partitions while 5 and
          higher are logical partitions.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          partition_id
         </para>
        </entry>
        <entry>
         <para>
          The partition_id sets the id of the partition. If you want
          different identifiers than 131 for Linux partition or 130 for
          swap, configure them with partition_id.
         </para>
<screen>&lt;partition_id config:type="integer"
&gt;131&lt;/partition_id&gt;</screen>
        </entry>
        <entry>
         <para>
          The default is 131 for Linux partition and 130 for swap.
         </para>
        </entry>
       </row>
<!--
              <row>
                <entry>filesystem_id</entry>
                <entry>
                  <para>
                   See partition_id above. For historical reasons they represent the same.
                  </para>
                  <screen>&lt;filesystem_id config:type="integer"
&gt;131&lt;/filesystem_id&gt;</screen>
                </entry>
                <entry>Since 10.1 and SLES10 it is recommended to use partition_id instead.</entry>
              </row>
-->
       <row>
        <entry>
         <para>
          mountby
         </para>
        </entry>
        <entry>
         <para>
          Instead of a partition number, you can tell AutoYaST to mount a
          partition by device, label, uuid, path or id, which are the udev
          path and udev id (see /dev/disk/...).
         </para>
<screen>&lt;mountby config:type="symbol"
&gt;label&lt;/mountby&gt;</screen>
        </entry>
        <entry>
         <para>
          See "label" and "uuid" documentation above. The default depends on
          YaST and is id in most cases. It was device in the past.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          subvolumes
         </para>
        </entry>
        <entry>
         <para>
          List of subvolumes to create for a file system of type btrfs. This
          key only makes sense for file systems of type btrfs. If there is a
          default subvolume used for the distribution (for example, "@" in
          SLES11 SP2) the name of this default subvolume is automatically
          prepended to the names in this list.
         </para>
<screen>&lt;subvolumes config:type="list"&gt;
    &lt;path&gt;tmp&lt;/path&gt;
    &lt;path&gt;opt&lt;/path&gt;
    &lt;path&gt;srv&lt;/path&gt;
    &lt;path&gt;var/crash&lt;/path&gt;
    &lt;path&gt;var/lock&lt;/path&gt;
    &lt;path&gt;var/run&lt;/path&gt;
    &lt;path&gt;var/tmp&lt;/path&gt;
    &lt;path&gt;var/spool&lt;/path&gt;
    ...
&lt;/subvolumes&gt;</screen>
        </entry>
        <entry>
         <para>
          This key is available since openSUSE 12.3 and SLES11 SP3.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          lv_name
         </para>
        </entry>
        <entry>
         <para>
          If this partition is in a logical volume in a volume group (LVM or
          EVMS) specify the logical volume name here (see is_lvm_vg or
          is_evms_vg parameter in drive configuration).
         </para>
<screen>&lt;lv_name&gt;opt_lv&lt;/lv_name&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          stripes
         </para>
        </entry>
        <entry>
         <para>
          An integer that configures LVM striping. Specify across how many
          devices you want to stripe (spread data).
         </para>
<screen>&lt;stripes config:type="integer"&gt;2&lt;/stripes&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          stripesize
         </para>
        </entry>
        <entry>
         <para>
          Specify the size of each block in kb.
         </para>
<screen>&lt;stripesize config:type="integer"
&gt;4&lt;/stripesize&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          lvm_group
         </para>
        </entry>
        <entry>
         <para>
          If this is a physical partition used by (part of) a volume group
          (LVM), you have to specify the name of the volume group here.
         </para>
<screen>&lt;lvm_group&gt;system&lt;/lvm_group&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          pool
         </para>
        </entry>
        <entry>
         <para>
          Boolean must be set to true if the LVM logical volume should
          be an LVM thin pool.
         </para>
<screen>&lt;pool config:type="boolean"&gt;false&lt;/pool&gt;</screen>
        </entry>
        <entry>
         <para>
          This key is available since openSUSE 12.3 and SLES11 SP3.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          used_pool
         </para>
        </entry>
        <entry>
         <para>
          The name of the LVM thin pool that is used as a data store for this
          thin logical volume. If this is set to something non-empty, it
          implies that the volume is a so-called thin logical volume.
         </para>
<screen>&lt;used_pool&gt;my_thin_pool&lt;/used_pool&gt;</screen>
        </entry>
        <entry>
         <para>
          This key is available since openSUSE 12.3 and SLES11 SP3.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          evms_group
         </para>
        </entry>
        <entry>
         <para>
          If this physical partition is used by a volume group (EVMS), you
          have to specify the name of the volume group here.
         </para>
<screen>&lt;evms_group&gt;system&lt;/evms_group&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          raid_name
         </para>
        </entry>
        <entry>
         <para>
          If this physical volume is part of a RAID, specify the name of the
          RAID.
         </para>
<screen>&lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          raid_type
         </para>
        </entry>
        <entry>
         <para>
          Specify the type of the RAID.
         </para>
<screen>&lt;raid_type&gt;raid1&lt;/raid_type&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          raid_options
         </para>
        </entry>
        <entry>
         <para>
          Specify RAID options, see below.
         </para>
<screen>&lt;raid_options&gt;...&lt;/raid_options&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          resize
         </para>
        </entry>
        <entry>
         <para>
          This boolean must be "true" if an existing partition should be
          resized. In this case, you want to set <emphasis>create</emphasis>
          to <emphasis>false</emphasis> and in most cases you don't want to
          <emphasis>format</emphasis> the partition. You need to tell
          AutoYaST the <emphasis>partition_nr</emphasis> and the
          <emphasis>size</emphasis>. The size can be in percentage of the
          original size or a number, like <emphasis>800M</emphasis>.
          <emphasis>max</emphasis> and <emphasis>auto</emphasis> do not work
          as size here.
         </para>
<screen>&lt;resize config:type="boolean"
&gt;false&lt;/resize&gt;</screen>
        </entry>
        <entry>
         <para>
          The resize only works with physical disks. Not with LVM/EVMS
          volumes.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect2>

   <sect2>
    <title>RAID Options</title>
    <para>
     The following elements must be between the
     &lt;partition&gt;&lt;raid_options&gt; ...
     &lt;/raid_options&gt;&lt;/partition&gt; tags.
    </para>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          chunk_size
         </para>
        </entry>
        <entry>
         <para/>
<screen>&lt;chunk_size&gt;4&lt;/chunk_size&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          parity_algorithm
         </para>
        </entry>
        <entry>
         <para>
          Possible values are: left_asymmetric, left_symmetric,
          right_asymmetric, right_symmetric. Since SLES11 SP2 and openSUSE
          12.1 you can use: parity_first, parity_last, left_asymmetric_6,
          left_symmetric_6, right_asymmetric_6, right_symmetric_6,
          parity_first_6, n2, o2, f2, n3, o3, f3 for RAID6 and RAID10.
         </para>
<screen>&lt;parity_algorithm
&gt;left_asymmetric&lt;/parity_algorithm&gt;</screen>
        </entry>
        <entry>
         <para/>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          raid_type
         </para>
        </entry>
        <entry>
         <para>
          Possible values are: raid0, raid1 and raid5.
         </para>
<screen>&lt;raid_type&gt;raid1&lt;/raid_type&gt;</screen>
        </entry>
        <entry>
         <para>
          The default is raid1.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          device_order
         </para>
        </entry>
        <entry>
         <para>
          This list contains the optional order of the physical devices:
         </para>
<screen>&lt;device_order config:type="list"&gt;
   &lt;device&gt;/dev/sdb2&lt;/device&gt;
   &lt;device&gt;/dev/sda1&lt;/device&gt;
   ...
&lt;/device_order&gt;</screen>
        </entry>
        <entry>
         <para>
          This is optional and the default is alphabetical order.
         </para>
         <para>
          This key is available since openSUSE 12.2 and SLES11 SP3.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect2>

   <sect2>
    <title>Automated Partitioning</title>
    <para>
     For automated partitioning, you only need to provide the sizes and
     mount points of partitions. All other data needed for successful
     partitioning is calculated during installation—unless provided in the
     control file.
    </para>
    <para>
     If no partitions are defined and the specified drive is also the drive
     where the root partition should be created, the following partitions
     are created automatically:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <emphasis>/boot</emphasis>
      </para>
      <para>
       The size of the <emphasis>/boot</emphasis> partition is determined by
       the architecture of the target system.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>swap</emphasis>
      </para>
      <para>
       The size of the <emphasis>swap</emphasis> partition is determined by
       the amount of memory available in the system.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>/</emphasis> (root partition)
      </para>
      <para>
       The size of the root partition is determined by the space left after
       creating <emphasis>swap</emphasis> and <emphasis>/boot</emphasis>.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Depending on the initial status of the drive and how it was previously
     partitioned, it is possible to create the <emphasis>default</emphasis>
     partitioning in the following ways:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <emphasis>Use free space</emphasis>
      </para>
      <para>
       If the drive is already partitioned, it is possible to create the new
       partitions using the free space on the hard drive. This requires the
       availability of enough space for all selected packages in addition to
       swap.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>Reuse all available space</emphasis>
      </para>
      <para>
       Use this option to delete all existing partitions (Linux and
       non-Linux).
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>Reuse all available Linux partitions</emphasis>
      </para>
      <para>
       This option deletes all existing Linux partitions. Other partitions
       (i.e. Windows) remain untouched. Note that this works only if the
       Linux partitions are at the end of the device.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>Reuse only specified partitions</emphasis>
      </para>
      <para>
       This option allows you to select specific partitions to delete. Start
       the selection with the last available partition.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Repartitioning only works if the selected partitions are neighbors and
     located at the end of the device.
    </para>
<!-- role="caution" -->
    <note>
     <title>Important Notice</title>
     <para>
      The value provided in the <emphasis>use</emphasis> property determines
      how existing data and partitions are treated. The value
      <emphasis>all</emphasis> means that <emphasis>ALL</emphasis> data on
      the disk will be erased. Make backups and use the
      <emphasis>confirm</emphasis> property if you are going to keep some
      partitions with important data. During automated installation, no
      pop-ups will notify you about partitions being deleted.
     </para>
    </note>
    <para>
     If multiple drives are present in the target system, identify all
     drives with their device names and specify how the partitioning should
     be performed.
    </para>
    <para>
     Partition sizes can be given in gigabytes, megabytes or can be set to a
     flexible value using the keywords <emphasis>auto</emphasis> and
     <emphasis>max</emphasis>. <emphasis>max</emphasis> uses all available
     space on a drive, therefore should only be set for the last partition
     on the drive. With <emphasis>auto</emphasis> the size of a
     <emphasis>swap</emphasis> or <emphasis>boot</emphasis> partition is
     determined automatically, depending on the memory available and the
     type of the system.
    </para>
    <para>
     A fixed size can be given as shown below:
    </para>
    <para>
     <emphasis>1GB</emphasis> will create a partition of the size 1 GB.
     <emphasis>1500MB</emphasis> will create a partition of the size 1.5 GB.
    </para>
    <example>
     <title>Automated Partitioning</title>
     <para>
      The following is an example of a single drive system, which is not
      pre-partitioned and should be automatically partitioned according to
      the described pre-defined partition plan. If you do not specify the
      device, it will be automatically detected. You do not have to create
      different profiles for /dev/sda or /dev/hda systems.
     </para>
<screen>
  &lt;partitioning  config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/hda&lt;/device&gt;       
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
  &lt;/partitioning&gt;
</screen>
    </example>
    <para>
     A more detailed example shows how existing partitions and multiple
     drives are handled.
    </para>
    <example>
     <title>Detailed Automated Partitioning</title>
<screen>&lt;partitioning  config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/hda&lt;/device&gt;            
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
	&lt;mount&gt;/&lt;/mount&gt;
	&lt;size&gt;5gb&lt;/size&gt;
      &lt;/partition&gt;
      &lt;partition&gt;
	&lt;mount&gt;swap&lt;/mount&gt;
	&lt;size&gt;1gb&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
  &lt;/drive&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/hdb&lt;/device&gt;
    &lt;use&gt;all&lt;/use&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
	&lt;filesystem  config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	&lt;mount&gt;/data1&lt;/mount&gt;
	&lt;size&gt;15gb&lt;/size&gt;	
      &lt;/partition&gt;
      &lt;partition&gt;
	&lt;filesystem  config:type="symbol"&gt;jfs&lt;/filesystem&gt;
	&lt;mount&gt;/data2&lt;/mount&gt;
	&lt;size&gt;auto&lt;/size&gt;	
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;free&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Advanced Partitioning Features</title>
    <para>
     <remark role="fixme">Add a short description</remark>
    </para>
    <sect3>
     <title>Wipe out Partition Table</title>
     <para>
      In most cases this is not needed because AutoYaST can delete
      partitions one by one automatically, but you have the option to let
      AutoYaST clear the partition table instead of deleting partitions
      individually.
     </para>
     <para>
      Go to the "drive" section and add:
     </para>
<screen>&lt;initialize config:type="boolean"&gt;true&lt;/initialize&gt;</screen>
     <para>
      With this setting AutoYaST will delete the partition table before it
      starts to analyse the actual partitioning and calculates its partition
      plan. Of course this means, that you cannot keep any of your existing
      partitions.
     </para>
    </sect3>
    <sect3>
     <title>Mount Options</title>
     <para>
      By default a file system to be mounted is identified in
      <filename>/etc/fstab</filename> by the device name. This
      identification can be changed so the file system is found by searching
      for a <phrase role="acronym">UUID</phrase> or a volume label. Note
      that not all file systems can be mounted by
      <phrase role="acronym">UUID</phrase> or a volume label. To specify how
      a partition is to be mounted, use the <emphasis>mountby</emphasis>
      property which has the <emphasis>symbol</emphasis> type. Possible
      options are:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        device (default),
       </para>
      </listitem>
      <listitem>
       <para>
        label,
       </para>
      </listitem>
      <listitem>
       <para>
        UUID.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      If you choose to mount the partition using a label, the name entered
      for the <emphasis>label</emphasis> property is used as the volume
      label.
     </para>
     <para>
      Add any legal mount option in the fourth field of
      <filename>/etc/fstab</filename>. Multiple options are separated by
      commas. Possible fstab options:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <emphasis>Mount read-only (ro):</emphasis> No write access to the
        file system. Default is "false".
       </para>
      </listitem>
      <listitem>
       <para>
        <emphasis>No access time (noatime):</emphasis> Access times are not
        updated when a file is read. Default is "false".
       </para>
      </listitem>
      <listitem>
       <para>
        <emphasis>Mountable by User (user):</emphasis> The file system can
        be mounted by a normal user. Default is "false".
       </para>
      </listitem>
      <listitem>
       <para>
        <emphasis>Data Journaling Mode (ordered, journal,
        writeback):</emphasis> Specifies the journaling mode for file data.
       </para>
       <variablelist>
        <varlistentry>
         <term>journal</term>
         <listitem>
          <para>
           All data is committed to the journal prior to being written to
           the main file system.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>ordered</term>
         <listitem>
          <para>
           All data is directly written to the main file system before its
           metadata is committed to the journal.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>writeback</term>
         <listitem>
          <para>
           Data ordering is not preserved.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </listitem>
      <listitem>
       <para>
        <emphasis>Access Control List (acl):</emphasis> Enable access
        control lists on the file system.
       </para>
      </listitem>
      <listitem>
       <para>
        <emphasis>Extended User Attributes (user_xattr):</emphasis> Allow
        extended user attributes on the file system.
       </para>
      </listitem>
     </itemizedlist>
     <example>
      <title>Mount Options</title>
<screen>
  &lt;partitions config:type="list"&gt;
    &lt;partition&gt;   
      &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
      &lt;format config:type="boolean"&gt;true&lt;/format&gt;
      &lt;fstopt&gt;ro,noatime,user,data=ordered,acl,user_xattr&lt;/fstopt&gt;
      &lt;mount&gt;/local&lt;/mount&gt;
      &lt;mountby config:type="symbol"&gt;uuid&lt;/mountby&gt;
      &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
      &lt;size&gt;10gb&lt;/size&gt;
    &lt;/partition&gt;
  &lt;/partitions&gt;
</screen>
     </example>
    </sect3>
    <sect3>
     <title>Keeping Specific Partitions</title>
     <para>
      In some cases you may want to leave partitions untouched and only
      format specific target partitions, rather than creating them from
      scratch. For example, if different Linux installations coexist, or you
      have another operating system installed, likely you do not want to
      wipe these out. Or you may want to leave data partitions untouched.
     </para>
     <para>
      Such scenarios require certain knowledge about the target systems and
      hard drives. Depending on the scenario, you might need to know the
      exact partition table of the target hard drive with partition ids,
      sizes and numbers. With this data you can tell AutoYaST to keep
      certain partitions, format others and create new partitions if needed.
     </para>
     <para>
      The following example will keep partitions 1, 2 and 5 and delete
      partition 6 to create two new partitions. All remaining partitions
      will only be formatted.
      <remark>emap 2011-11-05: Not the best example for the scenarios two paras up with coexisting operating systems or data partitions. Who'd want to format those?</remark>
     </para>
     <example>
      <title>Keeping partitions</title>
<screen>

    &lt;partitioning config:type="list"&gt;
      &lt;drive&gt;
        &lt;device&gt;/dev/hdc&lt;/device&gt;
        &lt;partitions config:type="list"&gt;
          &lt;partition&gt;
            &lt;create config:type="boolean"&gt;false&lt;/create&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;mount&gt;/&lt;/mount&gt;
            &lt;partition_nr config:type="integer"&gt;1&lt;/partition_nr&gt;
          &lt;/partition&gt;
          &lt;partition&gt;
            &lt;create config:type="boolean"&gt;false&lt;/create&gt;
            &lt;format config:type="boolean"&gt;false&lt;/format&gt;
            &lt;partition_nr config:type="integer"&gt;2&lt;/partition_nr&gt;
            &lt;mount&gt;/space&lt;/mount&gt;
          &lt;/partition&gt;
          &lt;partition&gt;
            &lt;create config:type="boolean"&gt;false&lt;/create&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
            &lt;partition_nr config:type="integer"&gt;5&lt;/partition_nr&gt;
            &lt;mount&gt;swap&lt;/mount&gt;
          &lt;/partition&gt;
          &lt;partition&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;mount&gt;/space2&lt;/mount&gt;
            &lt;size&gt;50mb&lt;/size&gt;
          &lt;/partition&gt;
          &lt;partition&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;mount&gt;/space3&lt;/mount&gt;
            &lt;size&gt;max&lt;/size&gt;
          &lt;/partition&gt;
        &lt;/partitions&gt;
        &lt;use&gt;6&lt;/use&gt;
      &lt;/drive&gt;
    &lt;/partitioning&gt;

</screen>
     </example>
     <para>
      The last example requires exact knowledge of the existing partition
      table and the partition numbers of those partitions that should be
      kept. In some cases however, such data may not be available,
      especially in a mixed hardware environment with different hard drive
      types and configurations. The following scenario is for a system with
      a non-Linux OS with a designated area for a Linux installation.
     </para>
     <figure id="partitioning-keep1">
      <title>Keeping partitions</title>
      <mediaobject>
       <imageobject role="html">
        <imagedata fileref="partitioning-keep1.png"/>
       </imageobject>
       <imageobject role="fo">
        <imagedata fileref="partitioning-keep1.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      In this scenario, shown in figure
      <quote><xref linkend="partitioning-keep1"/></quote>, AutoYaST will not
      create new partitions. Instead it searches for certain partition types
      on the system and uses them according to the partitioning plan in the
      control file. No partition numbers are given in this case, only the
      mount points and the partition types (additional configuration data
      can be provided, for example file system options, encryption and
      file system type).
     </para>
     <example>
      <title>Auto-detection of partitions to be kept.</title>
<screen>
    &lt;partitioning config:type="list"&gt;
      &lt;drive&gt;
        &lt;partitions config:type="list"&gt;
          &lt;partition&gt;
            &lt;create config:type="boolean"&gt;false&lt;/create&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;mount&gt;/&lt;/mount&gt;
            &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
          &lt;/partition&gt;
          &lt;partition&gt;
            &lt;create config:type="boolean"&gt;false&lt;/create&gt;
            &lt;format config:type="boolean"&gt;true&lt;/format&gt;
            &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
            &lt;partition_id config:type="integer"&gt;130&lt;/partition_id&gt;
            &lt;mount&gt;swap&lt;/mount&gt;
          &lt;/partition&gt;
        &lt;/partitions&gt;
      &lt;/drive&gt;
    &lt;/partitioning&gt;
</screen>
     </example>
    </sect3>
   </sect2>

   <sect2>
    <title>Using Existing Mount Table (fstab)</title>
    <note>
     <title>New Feature</title>
     <para>
      This option will allow AutoYaST to use an existing
      <filename>/etc/fstab</filename> and use the partition data from a
      previous installation. All partitions are kept and no new partitions
      are created. The partitions will be formatted and mounted as specified
      in <filename>/etc/fstab</filename> on a Linux root partition.
     </para>
    </note>
    <para>
     Although the default behaviour is to format all partitions, it is also
     possible to leave some partitions untouched and only mount them, for
     example data partitions. If multiple installations are found on the
     system (multiple root partitions with different
     <emphasis>fstab</emphasis> files, the installation will abort, unless
     the root partition is configured in the control file. The following
     example illustrates how this option can be used:
    </para>
    <example>
     <title>Reading existing <filename>/etc/fstab</filename></title>
<screen>
    &lt;partitioning_advanced&gt;
      &lt;fstab&gt;
	&lt;!-- Read data from existing fstab. If multiple root partitions are
	found, use the one specified below. Otherwise the first root
	partition is taken --&gt;
	&lt;!-- &lt;root_partition&gt;/dev/hda5&lt;/root_partition&gt; --&gt;
	&lt;use_existing_fstab config:type="boolean"&gt;true&lt;/use_existing_fstab&gt;
	&lt;!-- all partitions found in fstab will be formatted and mounted
	by default unless a partition is listed below with different
	settings --&gt;
	&lt;partitions config:type="list"&gt;
	  &lt;partition&gt;
	    &lt;format config:type="boolean"&gt;false&lt;/format&gt;
	    &lt;mount&gt;/bootmirror&lt;/mount&gt;
	  &lt;/partition&gt;
	&lt;/partitions&gt;
      &lt;/fstab&gt;
    &lt;/partitioning_advanced&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Logical Volume Manager (LVM)</title>
    <para>
     To configure LVM, first create a <emphasis>physical volume</emphasis>
     using the normal partitioning method described above.
    </para>
    <example>
     <title>Create LVM Physical Volume</title>
     <para>
      The following example shows how to prepare for LVM in the
      <emphasis>partitioning</emphasis> resource:
     </para>
<screen>
  &lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sda&lt;/device&gt;         
      
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;	  
	  &lt;lvm_group&gt;system&lt;/lvm_group&gt;
	  &lt;partition_type&gt;primary&lt;/partition_type&gt;
	  &lt;size&gt;max&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
  &lt;/partitioning&gt;
</screen>
    </example>
    <para>
     In the last example, a non-formatted partition is created on device
     <filename>/dev/sda1</filename> of the type <emphasis>LVM</emphasis> and
     with the volume group <emphasis>system</emphasis>. This partition will
     use all space available on the drive.
    </para>
    <example>
     <title>LVM Logical Volumes (New syntax)</title>
<screen>
  &lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sda&lt;/device&gt;             
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;	 
	  &lt;lvm_group&gt;system&lt;/lvm_group&gt;
	  &lt;partition_type&gt;primary&lt;/partition_type&gt;
	  &lt;size&gt;max&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/system&lt;/device&gt;       
      &lt;is_lvm_vg config:type="boolean"&gt;true&lt;/is_lvm_vg&gt;
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;user_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/usr&lt;/mount&gt;
	  &lt;size&gt;500mb&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;opt_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/opt&lt;/mount&gt;
	  &lt;size&gt;1500mb&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;var_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/var&lt;/mount&gt;
	  &lt;size&gt;200mb&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;pesize&gt;4M&lt;/pesize&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
  &lt;/partitioning&gt;
</screen>
    </example>
    <para>
     With SUSE Linux 10.1 and all following versions, it is possible to set
     the <emphasis>size</emphasis> to <emphasis>max</emphasis> for the
     logical volumes. Of course, you can only use <emphasis>max</emphasis>
     for one(!) logical volume. You cannot set two logical volumes in one
     volume group to <emphasis>sizemax</emphasis>.
    </para>
   </sect2>

   <sect2>
    <title>Enterprise Volume Management System (EVMS)—SLES10 only!</title>
    <para>
     SLES10 AutoYaST has EVMS support. SLES11 has not!
    </para>
    <para>
     Using EVMS is quite similar to using LVM (see above). Switching from
     LVM to EVMS is just a small change in the AutoYaST profile. Change the
     "is_lvm_vg" element to "is_evms_vg" and the "lvm_group" element to
     "evms_group".
    </para>
    <para>
     With AutoYaST it is not possible to mix LVM and EVMS.
    </para>
    <para>
     Using the LVM example from above for EVMS, looks like this:
    </para>
    <example>
     <title>EVMS Logical Volumes</title>
<screen>
  &lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sda&lt;/device&gt;             
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;	 
	  &lt;evms_group&gt;system&lt;/evms_group&gt;
	  &lt;partition_type&gt;primary&lt;/partition_type&gt;
	  &lt;size&gt;max&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/system&lt;/device&gt;       
      &lt;is_evms_vg config:type="boolean"&gt;true&lt;/is_evms_vg&gt;
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;user_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/usr&lt;/mount&gt;
	  &lt;size&gt;500mb&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;opt_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/opt&lt;/mount&gt;
	  &lt;size&gt;1500mb&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;var_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/var&lt;/mount&gt;
	  &lt;size&gt;200mb&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;pesize&gt;4M&lt;/pesize&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
  &lt;/partitioning&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Software RAID</title>
    <para>
     Using AutoYaST, you can create and assemble software RAID devices. The
     supported RAID levels are the following:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <emphasis>RAID 0:</emphasis> This level increases your disk
       performance. There is <emphasis>no</emphasis> redundancy in this
       mode. If one of the drives crashes, data recovery will not be
       possible.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>RAID 1:</emphasis> This mode offers the best redundancy. It
       can be used with two or more disks. An exact copy of all data is
       maintained on all disks. As long as at least one disk is still
       working, no data is lost. The partitions used for this type of RAID
       should have approximately the same size.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>RAID 5:</emphasis> This mode combines management of a
       larger number of disks and still maintains some redundancy. This mode
       can be used on three disks or more. If one disk fails, all data is
       still intact. If two disks fail simultaneously, all data is lost.
       <remark>emap 2011-11-05: Really all data is lost, although
	  there are three or more disks?</remark>
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>Multipath:</emphasis> This mode allows access to the same
       physical device via multiple controllers for redundancy against a
       fault in a controller card. This mode can be used with at least two
       devices.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     As with LVM, you need to create all
     <emphasis><phrase role="acronym">RAID</phrase></emphasis> partitions
     first and assign the partitions to the
     <phrase role="acronym">RAID</phrase> device you want to create.
     Additionally you need to specify whether a partition or a device should
     be configured in the <phrase role="acronym">RAID</phrase> or if it
     should be configured as a <emphasis>Spare</emphasis> device.
    </para>
    <para>
     The following example shows a simple RAID1 configuration:
    </para>
    <example>
     <title>RAID1 configuration</title>
<screen>
  &lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sda&lt;/device&gt;
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;partition_id config:type="integer"&gt;253&lt;/partition_id&gt;
	  &lt;format config:type="boolean"&gt;false&lt;/format&gt;
	  &lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;
	  &lt;raid_type&gt;raid&lt;/raid_type&gt;
	  &lt;size&gt;4gb&lt;/size&gt;            
	&lt;/partition&gt;

	&lt;!-- Here come the regular partitions, i.e. / and swap --&gt;        
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sdb&lt;/device&gt;
      
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;format config:type="boolean"&gt;false&lt;/format&gt;
	  &lt;partition_id config:type="integer"&gt;253&lt;/partition_id&gt;	  
	  &lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;            
	  &lt;raid_type&gt;raid&lt;/raid_type&gt;
	  &lt;size&gt;4gb&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/md&lt;/device&gt;
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;format config:type="boolean"&gt;true&lt;/format&gt;
	  &lt;mount&gt;/space&lt;/mount&gt;
	  &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;	 
	  &lt;partition_nr config:type="integer"&gt;0&lt;/partition_nr&gt;
	  &lt;raid_options&gt;
	    &lt;chunk_size&gt;4&lt;/chunk_size&gt;
	    &lt;parity_algorithm&gt;left-asymmetric&lt;/parity_algorithm&gt;	   
	    &lt;raid_type&gt;raid1&lt;/raid_type&gt;
	  &lt;/raid_options&gt;
	 	  
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;use&gt;all&lt;/use&gt;
    &lt;/drive&gt;
    
  &lt;/partitioning&gt;
</screen>
    </example>
    <para>
     Consider the following when configuring raid:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       The device for raid is always <emphasis>/dev/md</emphasis>
      </para>
     </listitem>
     <listitem>
      <para>
       The property <emphasis>partition_nr</emphasis> is used to determine
       the MD device number. If <emphasis>partition_nr</emphasis> is equal
       to 0, then <emphasis>/dev/md0</emphasis> is configured.
      </para>
     </listitem>
     <listitem>
      <para>
       All RAID-specific options are contained in the
       <emphasis>raid_options</emphasis> resource.
      </para>
     </listitem>
    </itemizedlist>
   </sect2>

   <sect2>
    <title>IBM System z Specific Configuration</title>
    <para/>
    <sect3>
     <title>Configuring DASD Disks</title>
     <para>
      The following elements must be between the
     </para>
<screen>&lt;dasd&gt;
 &lt;devices config:type="list"&gt;
  &lt;listentry&gt;
   ...
  &lt;/listentry&gt;
 &lt;/devices&gt;
&lt;/dasd&gt;</screen>
     <para>
      tags in the &lt;profile&gt; section. Each disk needs to be configured
      in a separate &lt;listentry&gt; ... &lt;/listentry&gt; section.
     </para>
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           device
          </para>
         </entry>
         <entry>
          <para>
           <literal>DASD</literal> is the only value allowed
          </para>
<screen>&lt;device
&gt;DASD&lt;/dev_name&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           dev_name
          </para>
         </entry>
         <entry>
          <para>
           The device (<literal>dasd<replaceable>n</replaceable></literal>)
           you want to configure in this section.
          </para>
<screen>&lt;dev_name
&gt;/dev/dasda&lt;/dev_name&gt;</screen>
         </entry>
         <entry>
          <para>
           Optional but recommended. If left out, AutoYaST tries to guess
           the device.
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           channel
          </para>
         </entry>
         <entry>
          <para>
           Channel by which the disk is accessed.
          </para>
<screen>&lt;channel&gt;0.0.0150&lt;/channel&gt;</screen>
         </entry>
         <entry>
          <para>
           Mandatory.
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           diag
          </para>
         </entry>
         <entry>
          <para>
           Enable or disable the use of <literal>DIAG</literal>. Possible
           values are <literal>true</literal> (enable) or
           <literal>false</literal> (disable).
          </para>
<screen>&lt;diag
config:type="boolean"&gt;true&lt;/diag&gt;</screen>
         </entry>
         <entry>
          <para>
           Optional.
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect3>
    <sect3>
     <title>Configuring zFCP Disks</title>
     <para>
       The following elements must be between the tags in the
       &lt;profile&gt; section:
     </para>
<screen>&lt;zfcp&gt;
 &lt;devices config:type="list"&gt;
  &lt;listentry&gt;
   ...
  &lt;/listentry&gt;
 &lt;/devices&gt;
&lt;/zfcp&gt;</screen>
     <para>
      Each disk needs to be configured
      in a separate &lt;listentry&gt; ... &lt;/listentry&gt; section.
     </para>
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           controller_id
          </para>
         </entry>
         <entry>
          <para>
           Channel number
          </para>
<screen>&lt;controller_id
&gt;0.0.fc00&lt;/controller_id&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           fcp_lun
          </para>
         </entry>
         <entry>
          <para>
           Logical unit number
          </para>
<screen>&lt;fcp_lun
&gt;0x4010400400000000&lt;/fcp_lun&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           wwpn
          </para>
         </entry>
         <entry>
          <para>
           World wide port number
          </para>
<screen>&lt;wwpn
&gt;0x500507630510473a&lt;/wwpn&gt;</screen>
         </entry>
         <entry>
          <para/>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect3>
   </sect2>
  </sect1>
  <sect1 id="CreateProfile-fcoe-client">
   <title>Fibre Channel over Ethernet Configuration (FCoE)</title>
   <para>
    Using the <literal>fcoe_cfg</literal> resource, you can configure
    a Fibre Channel over Ethernet (FCoE).
   </para>

   <example>
     <title>FCoE configuration</title>
     <screen>
  &lt;fcoe-client&gt;
    &lt;fcoe_cfg&gt;
      &lt;DEBUG&gt;no&lt;/DEBUG&gt;
      &lt;USE_SYSLOG&gt;yes&lt;/USE_SYSLOG&gt;
    &lt;/fcoe_cfg&gt;
    &lt;interfaces config:type="list"&gt;
      &lt;listentry&gt;
        &lt;dev_name&gt;eth3&lt;/dev_name&gt;
        &lt;mac_addr&gt;01:000:000:000:42:42&lt;/mac_addr&gt;
        &lt;device&gt;Gigabit 1313&lt;/device&gt;
        &lt;vlan_interface&gt;200&lt;/vlan_interface&gt;
        &lt;fcoe_vlan&gt;eth3.200&lt;/fcoe_vlan&gt;
        &lt;fcoe_enable&gt;yes&lt;/fcoe_enable&gt;
        &lt;dcb_required&gt;yes&lt;/dcb_required&gt;
        &lt;auto_vlan&gt;no&lt;/auto_vlan&gt;
        &lt;dcb_capable&gt;no&lt;/dcb_capable&gt;
        &lt;cfg_device&gt;eth3.200&lt;/cfg_device&gt;
      &lt;/listentry&gt;
    &lt;/interfaces&gt;
    &lt;service_start&gt;
      &lt;fcoe config:type="boolean"&gt;true&lt;/fcoe&gt;
      &lt;lldpad config:type="boolean"&gt;true&lt;/lldpad&gt;
    &lt;/service_start&gt;
  &lt;/fcoe-client&gt;
     </screen>
   </example>

   <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Attribute
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
         <entry>
          <para>
           Values
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           fcoe_cfg
          </para>
         </entry>
         <entry>
          <para>
           <literal>DEBUG</literal> is used to enable or disable debugging
           messages from the fcoe service script and fcoemon.
          </para>
          <para>
           <literal>USE_SYSLOG</literal> messages are sent to the system log
           if set to yes (data are logged to /var/log/messages).
          </para>
         </entry>
         <entry>
          <para>
           yes/no
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           interfaces
          </para>
         </entry>
         <entry>
          <para>
           List of network cards including the status of VLAN and FCoE
           configuration.
          </para>
         </entry>
         <entry>
          <para>
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           service_start
          </para>
         </entry>
         <entry>
          <para>
           Enable or disable the start of the services fcoe and lldpad at
           boot time.
          </para>
          <para>
           Starting the service fcoe means starting the Fibre Channel over
           Ethernet service daemon fcoemon which controls the FCoE interfaces
           and establishes a connection with the daemon lldpad.
          </para>
          <para>
           The lldpad service provides the Link Layer Discovery Protocol agent
           daemon lldpad that informs fcoemon about DCB
           (Data Center Bridging) features and configuration of the interfaces.
          </para>
         </entry>
         <entry>
          <para>
           yes/no
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
   </informaltable>
  </sect1>
  <sect1 id="CreateProfile-Software">
   <title>Software</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2 id="Software-Selections-sles10">
    <title>Package Selections with Patterns</title>
    <para>
     SLES10 no longer supports <emphasis>selections</emphasis> but uses
     <emphasis>patterns</emphasis>. AutoYaST cannot convert selections to
     patterns. If you want to use a SLES9 AutoYaST profile to install a
     SLES10 server, you have to remove all <emphasis>addon</emphasis>
     entries and the <emphasis>base</emphasis> entry. Patterns are
     configured like this:
    </para>
    <example>
     <title>Package Selection in Control File with Patterns</title>
<screen>
  &lt;software&gt;
    &lt;patterns config:type="list"&gt;
        &lt;pattern&gt;directory_server&lt;/pattern&gt;
    &lt;/patterns&gt;
    &lt;packages  config:type="list"&gt;
      &lt;package&gt;apache&lt;/package&gt;
      &lt;package&gt;sendmail&lt;/package&gt;
    &lt;/packages&gt;
    &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;  &lt;!-- since openSUSE 11.1 --&gt;
  &lt;/software&gt;
</screen>
    </example>
    <para>
     The <emphasis>packages</emphasis> section is still the same as on a
     SLES9. Just the <emphasis>addon</emphasis> and
     <emphasis>base</emphasis> sections are gone.
    </para>
   </sect2>

   <sect2>
    <title>Deploying Images</title>
    <para>
     This feature is available since openSUSE 11.1 but not in SLES11.
    </para>
    <para>
     Since openSUSE 11.0 you can use images during installation to speed up
     the installation. This feature is available in openSUSE 11.1 as well.
    </para>
    <example>
     <title>Activating Image Deployment</title>
<screen>   &lt;!-- since openSUSE 11.1 --&gt;
   &lt;!-- note! this is not in the software section! --&gt;
  &lt;deploy_image&gt;
      &lt;image_installation config:type="boolean"&gt;false&lt;/image_installation&gt;
  &lt;/deploy_image&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Installing Additional and Customized Packages</title>
    <para>
     In addition to the packages available for installation on the CD-ROMs,
     you can add external packages including customized kernels. Customized
     kernel packages must be compatible to the <emphasis>SuSE</emphasis>
     packages and must install the kernel files to the same locations.
    </para>
    <para>
     Unlike in earlier in versions, you do not need a special resource in
     the control file to install custom and external packages. Instead you
     need to re-create the package database and update it with any new
     packages or new package versions in the source repository.
    </para>
    <para>
     A script is provided for this task which will query packages available
     in the repository and create the package database. Use the command
     <command>/usr/bin/create_package_descr</command>. When creating the
     database, all languages will be reset to English.
    </para>
    <example>
     <title>Creating Package Database</title>
<screen>cd /usr/local/CDs/LATEST/suse
	create_package_descr  -x PATH_TO_EXTRA_PROV -d /usr/local/CDs/LATEST/suse</screen>
    </example>
    <para>
     In the above example, the directory
     <filename>/usr/local/CDs/LATEST/suse</filename> contains the
     architecture dependent and independent packages, i.e.
     <emphasis>noarch</emphasis> and <emphasis>i586</emphasis>. This might
     look different on other architectures.
    </para>
    <para>
     The advantage of this method is that you can keep an up-to-date
     repository with fixed and updated package (e.g. from
     <emphasis>SuSE</emphasis> FTP server). Additionally this method makes
     the creation of custom CD-ROMs easier.
    </para>
    <note>
     <title>Changes starting with SUSE Linux 10.1/SLES 10</title>
     <para>
      With SLES10/SL10.1, the concept of adding your own RPMs to an
      installation source has changed. Neither
      <emphasis>yast/order</emphasis> nor
      <emphasis>yast/instorder</emphasis> are supported any longer by
      AutoYaST or by YaST. To add your own RPMs to an installation source
      (or add-on products like the SDK), add a file
      <emphasis>add_on_products</emphasis> to CD1 of the main product.
     </para>
<screen>media_url [path_on_media [product_1 [product_2 [....]]]</screen>
     <para>
      media_url is the URL of the media, path_on_media is the path to the
      catalog on the media. If not present, / (root) is assumed. product_1
      and following are the names of products, which should be marked for
      installation. If no product is specified, all products found on the
      media are selected for installation. For example:
     </para>
<screen>http://192.168.66.6/SLES10/sdk/CD1
        http://192.168.66.6/SLES10/CD1/updates</screen>
     <para>
      Besides the <emphasis>add_on_products</emphasis> file, you can use the
      AutoYaST profile to specify add-on products. For example:
     </para>
<screen>&lt;add-on&gt;
 &lt;add_on_products config:type="list"&gt;
   &lt;listentry&gt;
     &lt;media_url&gt;http://192.168.66.6/SLES10/CD1/updates&lt;/media_url&gt;
     &lt;product&gt;SuSE-Linux-Updates&lt;/product&gt;
     &lt;product_dir&gt;/&lt;/product_dir&gt;
     &lt;ask_on_error config:type="boolean"&gt;false&lt;/ask_on_error&gt;
     &lt;!-- available since openSUSE 11.0/SLES 11 --&gt;
     &lt;name&gt;MyUpdates&lt;/name&gt; &lt;!-- available since openSUSE 11.1/SLES11 (bnc#433981) --&gt;
   &lt;/listentry&gt;
 &lt;/add_on_products&gt;
&lt;/add-on&gt;</screen>
     <para>
      With this entry in the AutoYaST profile, the
      <emphasis>add_on_products</emphasis> file is not necessary. Since
      openSUSE 11.0, AutoYaST can ask the user to make add-on products
      available instead of reporting a time-out error when an add-on product
      cannot be found at the given location. Set ask_on_error to "true" (the
      default is "false"). Then your add-on product can be on a different
      CD/DVD than the installation source.
     </para>
     <para>
      YaST checks the signatures of files on the installation source. If a
      <emphasis>content</emphasis> file is not signed, during a manual
      installation YaST asks the user what to do. During an automatic
      installation, the installation source is rejected silently.
     </para>
    </note>
    <para>
     If you want to use unsigned installation sources with AutoYaST, turn
     off the checks with the following configuration in your AutoYaST
     profile (part of the <emphasis>general</emphasis> section.
    </para>
    <para>
     The following elements must be between the
     &lt;general&gt;&lt;signature-handling&gt; ...
     &lt;/signature-handling&gt;&lt;/general&gt; tags.
    </para>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          accept_unsigned_file
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept unsigned files like the
          content file.
         </para>
<screen>&lt;accept_unsigned_file config:type="boolean"
&gt;true&lt;/accept_unsigned_file&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        <remark>emap 2011-11-05: Is this correct? How will YaST make the decision? Above we write that YaST will ask the user, but during auto-install the package will be rejected. So which is it?</remark>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_file_without_checksum
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept files without a checksum in
          the content file.
         </para>
<screen>&lt;accept_file_without_checksum config:type="boolean"
&gt;true&lt;/accept_file_without_checksum&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        <remark>emap 2011-11-05: See my previous remark.</remark>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_verification_failed
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept signed files even when the
          verification of the signature failed.
         </para>
<screen>&lt;accept_verification_failed config:type="boolean"
&gt;true&lt;/accept_verification_failed&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        <remark>emap 2011-11-05: Same here. Unless I'm just not getting it, please fix all other occurrences below.</remark>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_unknown_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept new gpg keys on the
          installation source, for example the key used to sign the content
          file.
         </para>
<screen>&lt;accept_unknown_gpg_key config:type="boolean"
&gt;true&lt;/accept_unknown_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_non_trusted_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          This basically means, we know the key, but it is not trusted.
         </para>
<screen>&lt;accept_non_trusted_gpg_key config:type="boolean"
&gt;true&lt;/accept_non_trusted_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          import_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept and import new gpg keys on
          the installation source in its database.
         </para>
<screen>&lt;import_gpg_key config:type="boolean"
&gt;true&lt;/import_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST lets YaST decide what to do.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
    <para>
     Since openSUSE 10.3, it is possible to configure the signature handling
     for each add-on product individually. The following elements must be
     between the &lt;signature-handling&gt; section of the individual add-on
     product.
    </para>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          accept_unsigned_file
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept unsigned files like the
          content file for this add-on product.
         </para>
<screen>&lt;accept_unsigned_file config:type="boolean"
&gt;true&lt;/accept_unsigned_file&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_file_without_checksum
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept files without a checksum in
          the content file for this add-on.
         </para>
<screen>&lt;accept_file_without_checksum config:type="boolean"
&gt;true&lt;/accept_file_without_checksum&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_verification_failed
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept signed files even when the
          verification of the signature fails.
         </para>
<screen>&lt;accept_verification_failed config:type="boolean"
&gt;true&lt;/accept_verification_failed&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_unknown_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept new gpg keys on the
          installation source, for example the key used to sign the content
          file.
         </para>
<screen>&lt;accept_unknown_gpg_key&gt;
            &lt;all config:type="boolean"&gt;false&lt;/all&gt;
             &lt;keys config:type="list"&gt;
               &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
             &lt;/keys&gt;
           &lt;/accept_unknown_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept_non_trusted_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          This basically means, we know the key, but it is not trusted.
         </para>
<screen>&lt;accept_non_trusted_gpg_key&gt;
            &lt;all config:type="boolean"&gt;false&lt;/all&gt;
             &lt;keys config:type="list"&gt;
               &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
             &lt;/keys&gt;
           &lt;/accept_non_trusted_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          import_gpg_key
         </para>
        </entry>
        <entry>
         <para>
          If set to "true", AutoYaST will accept and import new gpg keys on
          the installation source into its database.
         </para>
<screen>&lt;import_gpg_key&gt;
            &lt;all config:type="boolean"&gt;false&lt;/all&gt;
             &lt;keys config:type="list"&gt;
               &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
             &lt;/keys&gt;
           &lt;/import_gpg_key&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, the global signature-handling in the
          &lt;general&gt; section is used.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect2>

   <sect2>
    <title>Kernel Packages</title>
    <para>
     Kernel packages are not part of any selection. The required kernel is
     determined during installation. If the kernel package is added to any
     selection or to the individual package selection, installation will
     mostly fail due to conflicts.
    </para>
    <para>
     To force the installation of a specific kernel, use the
     <emphasis>kernel</emphasis> property. The following is an example of
     forcing the installation of the default kernel. This kernel will be
     installed even if an SMP or other kernel is required.
    </para>
    <example>
     <title>Package Selection in Control File
      <remark>emap 2011-11-05: Should this read: Kernel Selection in Control File?</remark></title>
<screen>
  &lt;software&gt;        
    &lt;kernel&gt;kernel-default&lt;/kernel&gt;
    &lt;packages  config:type="list"&gt;
      &lt;package&gt;apache2&lt;/package&gt;
    &lt;/packages&gt;
  &lt;/software&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Removing Automatically Selected Packages</title>
    <para>
     Some packages are selected automatically either because of a dependency
     or because it is available in a selection.
    </para>
    <para>
     Removing such packages might break the system consistency and it is not
     recommended to remove basic packages unless a replacement which
     provides the same services is provided. The best example for this case
     are <phrase role="acronym">MTA</phrase> packages. By default,
     <emphasis>postfix</emphasis> will be selected and installed. If you
     wish to use another <phrase role="acronym">MTA</phrase> like
     <emphasis>sendmail</emphasis>, then postfix can be removed from the
     list of selected package using a list in the software resource. The
     following example shows how this can be done:
    </para>
    <example>
     <title>Package Selection in Control File</title>
<screen>  &lt;software&gt;
    &lt;packages  config:type="list"&gt;
      &lt;package&gt;sendmail&lt;/package&gt;
    &lt;/packages&gt;
    &lt;remove-packages  config:type="list"&gt;
      &lt;package&gt;postfix&lt;/package&gt;
    &lt;/remove-packages&gt;
  &lt;/software&gt;
</screen>
    </example>
   </sect2>

   <sect2>
    <title>Installing Packages in Stage 2</title>
    <para>
     If you want to install packages after the reboot during stage 2,
     instead of during the normal installation process in stage 1, you can
     use the <emphasis>post-packages</emphasis> element for that:
    </para>
<screen>&lt;software&gt;
  &lt;post-packages config:type="list"&gt;
    &lt;package&gt;yast2-cim&lt;/package&gt;
  &lt;/post-packages&gt;
&lt;/software&gt;</screen>
   </sect2>

   <sect2>
    <title>Installing Patterns in Stage 2</title>
    <para>
     Since SLES11 and openSUSE 11.1, you can also install patterns in stage
     2. Use the <emphasis>post-patterns</emphasis> element for that:
    </para>
<screen>&lt;software&gt;
  &lt;post-patterns config:type="list"&gt;
    &lt;pattern&gt;apparmor&lt;/pattern&gt;
  &lt;/post-patterns&gt;
&lt;/software&gt;</screen>
   </sect2>

   <sect2>
    <title>Online Update in Stage 2</title>
    <para>
     Since openSUSE 11.1, you can perform an online update at the end of the
     installation. Set the boolean <emphasis>do_online_update</emphasis> to
     "true". Of course this only makes sense if you add an online update
     repository in the suse-register/customer-center section, for example,
     or in a post-script. If the online update repository was available in
     stage 1 already via add-on section, then AutoYaST has already installed
     the latest packages available. If a kernel update is done via
     online-update, a reboot at the end of stage 2 is triggered.
    </para>
<screen>&lt;software&gt;
  &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;
&lt;/software&gt;</screen>
   </sect2>
  </sect1>
  <sect1 id="CreateProfile-Services">
   <title>Services and Runlevels</title>

   <para>
    With the runlevel resource you can set the default runlevel and specify
    in detail which system services you want to be started in which
    runlevel.
   </para>

   <para>
    The <emphasis>default</emphasis> property specifies the default runlevel
    of the system. Changes to the default runlevel will take effect the next
    time you boot the system. After the installation is completed, the
    system runs in runlevel 5, which is <emphasis>full multiuser with
    network and XDM</emphasis>. If you have configured a system with no X11,
    it is recommended to reboot the system after stage 1, using the
    <emphasis>reboot</emphasis> property in the <emphasis>general</emphasis>
    resource.
    <remark>emap 2011-11-05: Something missing, like setting
      "default" to runlevel 3?</remark>
   </para>

   <para>
    Specify in which runlevels a service should run via a space separated
    list of the runlevels, as shown in the following example. Alternatively
    change the status of the service by either enabling or disabling it
    using the <emphasis>service_status</emphasis> property.
   </para>

   <example>
    <title>Run-level Configuration</title>
<screen>

....
  &lt;runlevel&gt;
   &lt;default&gt;3&lt;/default&gt;
   &lt;services config:type="list" &gt;   
    &lt;service&gt;
     &lt;service_name&gt;at&lt;/service_name&gt;
     &lt;service_start&gt;3 5&lt;/service_start&gt;  
    &lt;/service&gt;
    &lt;service&gt;
     &lt;service_name&gt;portmap&lt;/service_name&gt;
     &lt;service_status&gt;enable&lt;/service_status&gt;    
    &lt;/service&gt;
    &lt;service&gt;
     &lt;service_name&gt;hwscan&lt;/service_name&gt;
     &lt;service_status&gt;disable&lt;/service_status&gt;    
    &lt;/service&gt;
   &lt;/services&gt;
  &lt;/runlevel&gt;
....

	</screen>
   </example>
  </sect1>
  <sect1 id="CreateProfile-Network">
   <title>Network Configuration</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2 id="Configuration-Network-Devices">
    <title>Network Devices, DNS and Routing</title>
    <para>
     Network configuration is used to connect a single
     <emphasis>SuSE</emphasis> Linux workstation to an Ethernet-based LAN or
     to configure a dial-up connection. More complex configurations
     (multiple network cards, routing, etc.) are also provided. With this
     module it is possible to configure and setup Ethernet controllers and
     Token-Ring controllers.
    </para>
    <para>
     In the networking section, set this option to "true" (default is
     "false", available since openSUSE 11.2 and SLES11):
    </para>
<screen>&lt;keep_install_network config:type="boolean"&gt;true&lt;/keep_install_network&gt;</screen>
    <para>
     YaST will keep network settings created during installation (via
     Linuxrc) and/or merge it with network settings from the AutoYaST
     profile (if defined). AutoYaST settings have higher priority than
     already present configuration files. YaST will write ifcfg-* files from
     profile without removing old ones. If there is an empty or no dns and
     routing section, YaST will keep already present values. Otherwise
     settings from the profile will be applied.
    </para>
    <para>
     To configure network settings and activate networking automatically,
     one global resource is used to store the whole network configuration.
    </para>
    <example>
     <title>Network configuration</title>
<screen>

.....
    &lt;networking&gt;
      &lt;dns&gt;
        &lt;dhcp_hostname config:type="boolean"&gt;true&lt;/dhcp_hostname&gt;
        &lt;dhcp_resolv config:type="boolean"&gt;true&lt;/dhcp_resolv&gt;
        &lt;domain&gt;local&lt;/domain&gt;
        &lt;hostname&gt;linux&lt;/hostname&gt;
      &lt;/dns&gt;
      &lt;interfaces config:type="list"&gt;
        &lt;interface&gt;
          &lt;bootproto&gt;dhcp&lt;/bootproto&gt;
          &lt;device&gt;eth0&lt;/device&gt;        
          &lt;startmode&gt;onboot&lt;/startmode&gt;
        &lt;/interface&gt;
      &lt;/interfaces&gt;
      &lt;routing&gt;
        &lt;ip_forward config:type="boolean"&gt;false&lt;/ip_forward&gt;
        &lt;routes config:type="list"&gt;
          &lt;route&gt;
            &lt;destination&gt;default&lt;/destination&gt;
            &lt;device&gt;-&lt;/device&gt;
            &lt;gateway&gt;192.168.1.240&lt;/gateway&gt;
            &lt;netmask&gt;-&lt;/netmask&gt;
          &lt;/route&gt;
        &lt;/routes&gt;
      &lt;/routing&gt;
      &lt;modules config:type="list"&gt;
        &lt;module_entry&gt;
          &lt;device&gt;eth0&lt;/device&gt;
          &lt;module&gt;e100&lt;/module&gt;
          &lt;options&gt;&lt;/options&gt;
        &lt;/module_entry&gt;
      &lt;/modules&gt;
      &lt;net-udev config:type="list"&gt;
        &lt;rule&gt;
          &lt;name&gt;eth0&lt;/name&gt;
          &lt;rule&gt;KERNELS&lt;/rule&gt;
          &lt;value&gt;0.0.0800&lt;/value&gt;
        &lt;/rule&gt;
      &lt;/net-udev&gt;
      &lt;s390-devices config:type="list"&gt;
        &lt;listentry&gt;
          &lt;chanids&gt;0.0.0800 0.0.0801 0.0.0802&lt;/chanids&gt;
          &lt;type&gt;qeth&lt;/type&gt;
        &lt;/listentry&gt;
      &lt;/s390-devices&gt;
      &lt;ipv6 config:type="boolean"&gt;true&lt;/ipv6&gt;
    &lt;/networking&gt;
....

	  </screen>
 
    </example>
    <tip>
     <title>IPv6 Address Support</title>
     <para>
      Using IPv6 addresses in &ay; is fully supported. To disable IPv6 Address
      Support, set &lt;ipv6 config:type="boolean"&gt;false&lt;/ipv6&gt; in the
      network configuration section.
     </para>
    </tip>

    <sect3>
      <title>Persistent Names of Network Interfaces</title>
      <para>
       The following elements must be between the
       &lt;net-udev&gt;...&lt;/net-udev&gt; tags.
      </para>
      <informaltable>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                <para> Element </para>
              </entry>
              <entry>
                <para> Description </para>
              </entry>
              <entry>
                <para> Comment </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>name</para>
              </entry>
              <entry>
                <para>Network interface name, e.g. <literal>eth3</literal>
                </para>
              </entry>
              <entry>
                <para>required</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rule</para>
              </entry>
              <entry>
                <para><literal>ATTR{address}</literal> for a MAC based rule,
                <literal>KERNELS</literal> for a bus ID based rule
                </para>
              </entry>
              <entry>
                <para>required</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>value</para>
              </entry>
              <entry>
                <para>e.g. <literal>f0:de:f1:6b:da:69</literal> for a MAC rule,
                <literal>0000:00:1c.1 or 0.0.0700</literal> for a bus ID rule
                </para>
              </entry>
              <entry>
                <para>required</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect3>
    <sect3>
      <title>s390 Devices</title>    
      <para>
       The following elements must be between the
       &lt;s390-devices&gt;...&lt;/s390-devices&gt; tags.
      </para>
      <informaltable>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                <para>Element</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
              <entry>
                <para>Comment</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para> type </para>
              </entry>
              <entry>
                <para>qeth, ctc or iucv
                </para>
              </entry>
              <entry>
                <para>
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para> chanids </para>
              </entry>
              <entry>
                <para>channel ids separated by spaces
                </para>
                <screen>&lt;chanids&gt;0.0.0700 0.0.0701 0.0.0702&lt;/chanids&gt;</screen>
              </entry>
              <entry>
                <para>
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para> layer2 </para>
              </entry>
              <entry>
                <para>
                </para>
                <screen>&lt;layer2 config:type="boolean"&gt;true&lt;/layer2&gt;</screen>
              </entry>
              <entry>
                <para>
                  boolean; default: false
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para> portname </para>
              </entry>
              <entry>
                <para>
                  QETH port name
                </para>
              </entry>
              <entry>
                <para>
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para> protocol </para>
              </entry>
              <entry>
                <para>
                  CTC / LCS protocol, a small number (as a string)
                </para>
                <screen>&lt;protocol&gt;1&lt;/protocol&gt;</screen>
              </entry>
              <entry>
                <para>optional</para>
              </entry>
            </row>
            <row>
              <entry>
                <para> router </para>
              </entry>
              <entry>
                <para>
                  IUCV router/user
                </para>
              </entry>
              <entry>
                <para>
                </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect3>
   </sect2>

   <sect2 id="Configuration-Network-Proxy">
    <title>Proxy</title>
    <para>
     Configure your Internet proxy (caching) settings.
    </para>
    <para>
     <emphasis>HTTP proxy</emphasis> is the name of the proxy server for
     your access to the World Wide Web (WWW). <emphasis>FTP proxy</emphasis>
     is the name of the proxy server for your access to the file transfer
     services (FTP). <emphasis>No proxy</emphasis> domains
     <remark>emap 2011-11-06: Does 'domains' belong here? Delete or put within 'emphasis' tag?</remark>
     is a list of domains for which requests should be carried out directly
     without caching.
    </para>
    <para>
     If you are using a proxy server with authorization, fill in Proxy user
     name and Proxy password.
    </para>
    <example>
     <title>Network configuration: Proxy</title>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
    &lt;proxy&gt;
      &lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
      &lt;ftp_proxy&gt;http://192.168.1.240:3128&lt;/ftp_proxy&gt;
      &lt;http_proxy&gt;http://192.168.1.240:3128&lt;/http_proxy&gt;
      &lt;no_proxy&gt;localhost&lt;/no_proxy&gt;
      &lt;proxy_password&gt;testpw&lt;/proxy_password&gt;
      &lt;proxy_user&gt;testuser&lt;/proxy_user&gt;
    &lt;/proxy&gt;
&lt;/profile&gt;

</screen>
    </example>
   </sect2>

   <sect2 id="Configuration-Network-Inetd">
    <title>(X)Inetd</title>
    <para>
     The profile has elements to specify which superserver should be used
     (netd_service), whether it should be enabled (netd_status) and how the
     services should be configured (netd_conf).
    </para>
    <para>
     A service description element has two parts: key and non-key. When
     writing the configuration, services are matched using the key fields;
     to the matching service, non-key fields are applied. If no service
     matches, it is created. If more services match, a warning is reported.
     The key fields are <emphasis>script, service, protocol and
     server.</emphasis>
    </para>
    <para>
     <emphasis>service</emphasis> and <emphasis>protocol</emphasis> are
     matched literally. <emphasis>script</emphasis> is the base name of the
     config file: usually a file in<filename> /etc/xinetd.d</filename>, for
     example "echo-udp", or "inetd.conf". For compatibility with 8.2,
     <emphasis>server</emphasis> is matched more loosely: if it is
     <filename>/usr/sbin/tcpd</filename>, the real server name is taken from
     <emphasis>server_args</emphasis>. After that, the basename of the first
     whitespace-separated word is taken and these values are compared.
    </para>
    <example>
     <title>Inetd Example</title>
<screen>


&lt;profile&gt;
  ...
  &lt;inetd&gt;
    &lt;netd_service config:type="symbol"&gt;xinetd&lt;/netd_service&gt;
    &lt;netd_status config:type="integer"&gt;0&lt;/netd_status&gt;
    &lt;netd_conf config:type="list"&gt;
      &lt;conf&gt;
	&lt;script&gt;imap&lt;/script&gt;
	&lt;service&gt;pop3&lt;/service&gt;
	&lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
      &lt;/conf&gt;
      &lt;conf&gt;
	&lt;server&gt;in.ftpd&lt;/server&gt;
	&lt;server_args&gt;-A&lt;/server_args&gt;
	&lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
      &lt;/conf&gt;
      &lt;conf&gt;
	&lt;service&gt;daytime&lt;/service&gt;
	&lt;protocol&gt;tcp&lt;/protocol&gt;
      &lt;/conf&gt;
      ....
      &lt;conf&gt;...&lt;/conf&gt;
    &lt;/netd_conf&gt;
  &lt;/inetd&gt;
  ...
&lt;/profile&gt;

	  </screen>
    </example>
   </sect2>
  </sect1>
  <sect1 id="Configuration-Network-NIS">
   <title>NIS</title>

   <para>
    Using the <emphasis>nis</emphasis> resource, you can configure the
    target machine as a <emphasis>NIS client</emphasis>. The following
    example shows a detailed configuration using multiple domains.
   </para>

   <example>
    <title>Network configuration: NIS</title>
<screen>

...
    &lt;nis&gt;
      &lt;nis_broadcast config:type="boolean"&gt;true&lt;/nis_broadcast&gt;
      &lt;nis_broken_server config:type="boolean"&gt;true&lt;/nis_broken_server&gt;
      &lt;nis_by_dhcp config:type="boolean"&gt;false&lt;/nis_by_dhcp&gt;
      &lt;nis_domain&gt;test.com&lt;/nis_domain&gt;
      &lt;nis_local_only config:type="boolean"&gt;true&lt;/nis_local_only&gt;
      &lt;nis_options&gt;&lt;/nis_options&gt;
      &lt;nis_other_domains config:type="list"&gt;
        &lt;nis_other_domain&gt;
          &lt;nis_broadcast config:type="boolean"&gt;false&lt;/nis_broadcast&gt;
          &lt;nis_domain&gt;domain.com&lt;/nis_domain&gt;
          &lt;nis_servers config:type="list"&gt;
            &lt;nis_server&gt;10.10.0.1&lt;/nis_server&gt;
          &lt;/nis_servers&gt;
        &lt;/nis_other_domain&gt;
      &lt;/nis_other_domains&gt;
      &lt;nis_servers config:type="list"&gt;
        &lt;nis_server&gt;192.168.1.1&lt;/nis_server&gt;
      &lt;/nis_servers&gt;
      &lt;start_autofs config:type="boolean"&gt;true&lt;/start_autofs&gt;
      &lt;start_nis config:type="boolean"&gt;true&lt;/start_nis&gt;
    &lt;/nis&gt;
...

	  </screen>
   </example>
  </sect1>
<!--
    <section id="Configuration-Network-NISplus">
    <title>
    NIS+
  </title>
    <para>
    If you activate NIS+, the data of the
    NIS+ Server will be added to <filename>/etc/hosts</filename>. Keyserv and the NIS+ cache manager
    will be started and the NSS and PAM configuration will be modified to use
    NIS+ and set the Secret Key of a user.
  </para>
    &example.nisplus;
  </section>
    -->
  <sect1 id="Configuration-Network-LDAP">
   <title><phrase role="acronym">LDAP</phrase> Client</title>

   <para>
    The installed machine can be set up as an
    <emphasis><phrase role="acronym">LDAP</phrase> client</emphasis> to
    authenticate users with an OpenLDAP; server. Required data are the name
    of the search base (base DN, e.g, dc=mydomain,dc=com) and the IP address
    of the <phrase role="acronym">LDAP</phrase> server (e.g., 10.20.0.2).
   </para>

   <para>
    If <phrase role="acronym">LDAP</phrase> is activated,
    <emphasis>NSS</emphasis> and <emphasis>PAM</emphasis> will be configured
    accordingly to use <phrase role="acronym">LDAP</phrase> for user
    authentication.
   </para>

   <example>
    <title>Network configuration: <phrase role="acronym">LDAP</phrase> client</title>
<screen>

...
    &lt;ldap&gt;
      &lt;ldap_domain&gt; dc=mydomain,dc=com&lt;/ldap_domain&gt;
      &lt;ldap_server&gt;10.10.0.1&lt;/ldap_server&gt;
      &lt;ldap_tls config:type="boolean"&gt;true&lt;/ldap_tls&gt;
      &lt;ldap_v2 config:type="boolean"&gt;true&lt;/ldap_v2&gt;
      &lt;pam_password&gt;crypt&lt;/pam_password&gt;
      &lt;start_ldap config:type="boolean"&gt;true&lt;/start_ldap&gt;
    &lt;/ldap&gt;
...

	  </screen>
   </example>
  </sect1>
  <sect1>
   <title>NFS Client and Server</title>

   <para>
    Configuring a system as an NFS client or an NFS server is can be done
    using the configuration system. The following examples show how both NFS
    client and server can be configured.
   </para>

   <para>
    Up to SLE11 and openSUSE 11.2, the following structure of NFS client
    configuration has been used:
   </para>

   <example>
    <title>Network Configuration: NFS Client</title>
<screen>...
    &lt;nfs config:type="list"&gt;
      &lt;nfs_entry&gt;
        &lt;mount_point&gt;/home&lt;/mount_point&gt;
        &lt;nfs_options&gt;defaults&lt;/nfs_options&gt;
        &lt;server_path&gt;192.168.1.1:/home&lt;/server_path&gt;
      &lt;/nfs_entry&gt;
    &lt;/nfs&gt;
...
</screen>
   </example>

   <para>
    From openSUSE 11.3 (SLE12 respectively) on, the structure of NFS client
    configuration has changed. Some global configuration options were
    introduced: <emphasis>enable_nfs4</emphasis> to switch NFS4 support
    on/off and <emphasis>idmapd_domain</emphasis> to define domain name for
    rpc.idmapd (this only makes sense with enabled NFS4). Attention: the old
    structure is not compatible with the new one and the profiles with an
    NFS section created on older releases will not work with newer products.
   </para>

   <example>
    <title>Network Configuration: NFS Client - New Style (openSUSE 11.3 and newer)</title>
<screen>...  
  &lt;nfs&gt;
    &lt;enable_nfs4 config:type="boolean"&gt;true&lt;/enable_nfs4&gt;
    &lt;idmapd_domain&gt;suse.cz&lt;/idmapd_domain&gt;
    &lt;nfs_entries config:type="list"&gt;
      &lt;nfs_entry&gt;
        &lt;mount_point&gt;/home&lt;/mount_point&gt;
        &lt;nfs_options&gt;sec=krb5i,intr,rw&lt;/nfs_options&gt;
        &lt;server_path&gt;saurus.suse.cz:/home&lt;/server_path&gt;
        &lt;vfstype&gt;nfs4&lt;/vfstype&gt;
      &lt;/nfs_entry&gt;
      &lt;nfs_entry&gt;
        &lt;mount_point&gt;/work&lt;/mount_point&gt;
        &lt;nfs_options&gt;defaults&lt;/nfs_options&gt;
        &lt;server_path&gt;bivoj.suse.cz:/work&lt;/server_path&gt;
        &lt;vfstype&gt;nfs&lt;/vfstype&gt;
      &lt;/nfs_entry&gt;
      &lt;nfs_entry&gt;
        &lt;mount_point&gt;/mnt&lt;/mount_point&gt;
        &lt;nfs_options&gt;defaults&lt;/nfs_options&gt;
        &lt;server_path&gt;fallback.suse.cz:/srv/dist&lt;/server_path&gt;
        &lt;vfstype&gt;nfs&lt;/vfstype&gt;
      &lt;/nfs_entry&gt;
    &lt;/nfs_entries&gt;
  &lt;/nfs&gt;
...
</screen>
   </example>

   <example>
    <title>Network Configuration: NFS Server</title>
<screen>....
    &lt;nfs_server&gt;
      &lt;nfs_exports config:type="list"&gt;
        &lt;nfs_export&gt;
          &lt;allowed config:type="list"&gt;
            &lt;allowed_clients&gt;*(ro,root_squash,sync)&lt;/allowed_clients&gt;
          &lt;/allowed&gt;
          &lt;mountpoint&gt;/home&lt;/mountpoint&gt;
        &lt;/nfs_export&gt;
        &lt;nfs_export&gt;
          &lt;allowed config:type="list"&gt;
            &lt;allowed_clients&gt;*(ro,root_squash,sync)&lt;/allowed_clients&gt;
          &lt;/allowed&gt;
          &lt;mountpoint&gt;/work&lt;/mountpoint&gt;
        &lt;/nfs_export&gt;
      &lt;/nfs_exports&gt;
      &lt;start_nfsserver config:type="boolean"&gt;true&lt;/start_nfsserver&gt;
    &lt;/nfs_server&gt;
....
</screen>
   </example>
  </sect1>
  <sect1 id="Configuration-Network-Ntp">
   <title>NTP Client</title>

   <para>
    Select whether to start the NTP daemon when booting the system. The NTP
    daemon resolves hostnames
    <remark>emap 2011-11-06: Really the NTP daemon?</remark>
    when initializing. The first synchronization of the clock is performed
    before the NTP daemon is started. To use this host for initial
    synchronization, configure the property
    <emphasis>initial_sync</emphasis>.
   </para>

   <para>
    To run NTP daemon in chroot jail, set
    <emphasis>start_in_chroot</emphasis>. Starting any daemon in a chroot
    jail is more secure and strongly recommended. To adjust NTP servers,
    peers, local clocks, and NTP broadcasting, add the appropriate entry to
    the control file. An example of various configuration options is shown
    below.
   </para>

   <example>
    <title>Network configuration: NTP Client</title>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
    &lt;ntp-client&gt;
      &lt;configure_dhcp config:type="boolean"&gt;false&lt;/configure_dhcp&gt;
      &lt;peers config:type="list"&gt;
        &lt;peer&gt;
          &lt;address&gt;ntp1.example.com&lt;/address&gt;
          &lt;initial_sync config:type="boolean"&gt;true&lt;/initial_sync&gt;
          &lt;options&gt;&lt;/options&gt;
          &lt;type&gt;server&lt;/type&gt;
        &lt;/peer&gt;
      &lt;/peers&gt;
      &lt;start_at_boot config:type="boolean"&gt;true&lt;/start_at_boot&gt;
      &lt;start_in_chroot config:type="boolean"&gt;true&lt;/start_in_chroot&gt;
    &lt;/ntp-client&gt;
&lt;/profile&gt;

</screen>
   </example>
  </sect1>
  <sect1 id="Configuration-Network-Sendmail">
   <title>Mail Configuration (Sendmail or Postfix)</title>

   <para>
    For the mail configuration of the client, this module lets you create a
    detailed mail configuration. The module contains various options. We
    recommended you use it at least for the initial configuration.
   </para>

   <example>
    <title>Mail Configuration</title>
<screen>...
    &lt;mail&gt;
      &lt;aliases config:type="list"&gt;
        &lt;alias&gt;
          &lt;alias&gt;root&lt;/alias&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;destinations&gt;foo&lt;/destinations&gt;
        &lt;/alias&gt;
        &lt;alias&gt;
          &lt;alias&gt;test&lt;/alias&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;destinations&gt;foo&lt;/destinations&gt;
        &lt;/alias&gt;
      &lt;/aliases&gt;
      &lt;connection_type config:type="symbol"&gt;permanent&lt;/connection_type&gt;
      &lt;fetchmail config:type="list"&gt;
        &lt;fetchmail_entry&gt;
          &lt;local_user&gt;foo&lt;/local_user&gt;
          &lt;password&gt;bar&lt;/password&gt;
          &lt;protocol&gt;POP3&lt;/protocol&gt;
          &lt;remote_user&gt;foo&lt;/remote_user&gt;
          &lt;server&gt;pop.foo.com&lt;/server&gt;
        &lt;/fetchmail_entry&gt;
        &lt;fetchmail_entry&gt;
          &lt;local_user&gt;test&lt;/local_user&gt;
          &lt;password&gt;bar&lt;/password&gt;
          &lt;protocol&gt;IMAP&lt;/protocol&gt;
          &lt;remote_user&gt;test&lt;/remote_user&gt;
          &lt;server&gt;blah.com&lt;/server&gt;
        &lt;/fetchmail_entry&gt;
      &lt;/fetchmail&gt;
      &lt;from_header&gt;test.com&lt;/from_header&gt;
      &lt;listen_remote config:type="boolean"&gt;true&lt;/listen_remote&gt;
      &lt;local_domains config:type="list"&gt;
        &lt;domains&gt;test1.com&lt;/domains&gt;
      &lt;/local_domains&gt;
      &lt;masquerade_other_domains config:type="list"&gt;
        &lt;domain&gt;blah.com&lt;/domain&gt;
      &lt;/masquerade_other_domains&gt;
      &lt;masquerade_users config:type="list"&gt;
        &lt;masquerade_user&gt;
          &lt;address&gt;joe@test.com&lt;/address&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;user&gt;joeuser&lt;/user&gt;
        &lt;/masquerade_user&gt;
        &lt;masquerade_user&gt;
          &lt;address&gt;bar@test.com&lt;/address&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;user&gt;foo&lt;/user&gt;
        &lt;/masquerade_user&gt;
      &lt;/masquerade_users&gt;
      &lt;mta config:type="symbol"&gt;postfix&lt;/mta&gt;
      &lt;outgoing_mail_server&gt;test.com&lt;/outgoing_mail_server&gt;
      &lt;postfix_mda config:type="symbol"&gt;local&lt;/postfix_mda&gt;
      &lt;smtp_auth config:type="list"&gt;
        &lt;listentry&gt;
          &lt;password&gt;bar&lt;/password&gt;
          &lt;server&gt;test.com&lt;/server&gt;
          &lt;user&gt;foo&lt;/user&gt;
        &lt;/listentry&gt;
      &lt;/smtp_auth&gt;
      &lt;use_amavis config:type="boolean"&gt;true&lt;/use_amavis&gt;
      &lt;virtual_users config:type="list"&gt;
        &lt;virtual_user&gt;
          &lt;alias&gt;test.com&lt;/alias&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;destinations&gt;foo.com&lt;/destinations&gt;
        &lt;/virtual_user&gt;
        &lt;virtual_user&gt;
          &lt;alias&gt;geek.com&lt;/alias&gt;
          &lt;comment&gt;&lt;/comment&gt;
          &lt;destinations&gt;bar.com&lt;/destinations&gt;
        &lt;/virtual_user&gt;
      &lt;/virtual_users&gt;
    &lt;/mail&gt;
...
</screen>
   </example>
  </sect1>
  <sect1 id="CreateProfile-Security">
   <title>Security Settings</title>

   <para>
    Using the features of this module, you will be able to change the local
    security settings on the target system. The local security settings
    include the boot configuration, login settings, password settings, user
    addition settings, and file permissions.
   </para>

   <para>
    Configuring the security settings automatically corresponds to the
    <emphasis>Custom Settings</emphasis> in the security module available in
    the running system which lets you create your own, customized
    configuration.
   </para>

   <example>
    <title>Security configuration</title>
    <para>
     See the reference for the meaning and the possible values of the
     settings in the following example.
    </para>
<screen>

...
   &lt;security&gt;
      &lt;console_shutdown&gt;ignore&lt;/console_shutdown&gt;
      &lt;cwd_in_root_path&gt;no&lt;/cwd_in_root_path&gt;
      &lt;displaymanager_remote_access&gt;no&lt;/displaymanager_remote_access&gt;
      &lt;fail_delay&gt;3&lt;/fail_delay&gt;
      &lt;faillog_enab&gt;yes&lt;/faillog_enab&gt;
      &lt;gid_max&gt;60000&lt;/gid_max&gt;
      &lt;gid_min&gt;101&lt;/gid_min&gt;
      &lt;kdm_shutdown&gt;root&lt;/kdm_shutdown&gt;
      &lt;lastlog_enab&gt;yes&lt;/lastlog_enab&gt;
      &lt;encryption&gt;md5&lt;/encryption&gt;
      &lt;obscure_checks_enab&gt;no&lt;/obscure_checks_enab&gt;
      &lt;pass_max_days&gt;99999&lt;/pass_max_days&gt;
      &lt;pass_max_len&gt;8&lt;/pass_max_len&gt;
      &lt;pass_min_days&gt;1&lt;/pass_min_days&gt;
      &lt;pass_min_len&gt;6&lt;/pass_min_len&gt;
      &lt;pass_warn_age&gt;14&lt;/pass_warn_age&gt;
      &lt;passwd_use_cracklib&gt;yes&lt;/passwd_use_cracklib&gt;
      &lt;permission_security&gt;secure&lt;/permission_security&gt;
      &lt;run_updatedb_as&gt;nobody&lt;/run_updatedb_as&gt;
      &lt;uid_max&gt;60000&lt;/uid_max&gt;
      &lt;uid_min&gt;500&lt;/uid_min&gt;
  &lt;/security&gt;
...

	</screen>
   </example>

   <sect2>
    <title>Password Settings Options</title>
    <para>
     Change various password settings. These settings are mainly stored in
     the <filename>/etc/login.defs</filename> file.
    </para>
    <para>
     Use this resource to activate one of the
     <emphasis>encryption</emphasis> methods currently supported. If not
     set, <emphasis>DES</emphasis> is configured.
    </para>
    <para>
     <emphasis>DES</emphasis>, the Linux default method, works in all
     network environments, but it restricts you to passwords no longer than
     eight characters. <emphasis>MD5</emphasis> allows longer passwords,
     thus provides more security, but some network protocols don't support
     this, and you may have problems with NIS. <emphasis>Blowfish</emphasis>
     is also supported.
    </para>
    <para>
     Additionally, you can setup the system to check for password
     plausibility and length etc.
    </para>
   </sect2>

   <sect2>
    <title>Boot Settings</title>
    <para>
     Use the security resource, you can change various boot settings.
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <emphasis>How to interpret Ctrl + Alt + Del</emphasis>
      </para>
      <para>
       When someone at the console has pressed the CTRL + ALT + DEL key
       combination, the system usually reboots. Sometimes it is desirable to
       ignore this event, for example, when the system serves as both
       workstation and server.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>Shutdown behavior of KDM</emphasis>
      </para>
      <para>
       Set who is allowed to shut down the machine from KDM.
      </para>
     </listitem>
    </itemizedlist>
   </sect2>

   <sect2>
    <title>Login Settings</title>
    <para>
     Change various login settings. These settings are mainly stored in the
     '/etc/login.defs' file.
    </para>
   </sect2>

   <sect2>
    <title>New user settings (useradd settings)</title>
    <para>
     Set the minimum and maximum possible user ID and set the minimum and
     maximum possible group ID.
    </para>
   </sect2>
  </sect1>
  <sect1 id="Configuration-X11">
   <title>Monitor and X11 Configuration</title>

   <note>
    <para>
     Since openSUSE 11.2 there is not AutoYaST client for X11 configuration
     anymore. You can still have the X11 section in your profile but it will
     be ignored.
    </para>
    <para>
     SLES11 SP1 still has a X11 client.
    </para>
   </note>

   <para>
    FIXME
   </para>

   <example>
    <title>X11 and Monitor configuration (deprecated since openSUSE 11.2)</title>
<screen>...
  &lt;x11&gt;
    &lt;color_depth&gt;16&lt;/color_depth&gt;
    &lt;configure_x11 config:type="boolean"&gt;true&lt;/configure_x11&gt;
    &lt;display_manager&gt;kde&lt;/display_manager&gt;
    &lt;enable_3d config:type="boolean"&gt;false&lt;/enable_3d&gt;
    &lt;monitor&gt;
      &lt;display&gt;
        &lt;frequency config:type="integer"&gt;60&lt;/frequency&gt;
        &lt;max_hsync config:type="integer"&gt;97&lt;/max_hsync&gt;
        &lt;max_vsync config:type="integer"&gt;180&lt;/max_vsync&gt;
        &lt;min_hsync config:type="integer"&gt;30&lt;/min_hsync&gt;
        &lt;min_vsync config:type="integer"&gt;50&lt;/min_vsync&gt;
        &lt;width config:type="integer"&gt;1024&lt;/width&gt;
      &lt;/display&gt;
      &lt;monitor_device&gt;G90F&lt;/monitor_device&gt;
      &lt;monitor_vendor&gt;VIEWSONIC&lt;/monitor_vendor&gt;
    &lt;/monitor&gt;
    &lt;resolution&gt;1600x1200,1280x1024,1024x768,800x600,640x480&lt;/resolution&gt;
    &lt;window_manager&gt;kdm&lt;/window_manager&gt;
  &lt;/x11&gt;


...
</screen>
   </example>
  </sect1>
  <sect1 id="Configuration-Security-users">
   <title>Users</title>

   <para>
    The root user and at least one normal user can be added during install
    using data supplied in the control file. User data and passwords
    (encrypted or in clear text) are part of the
    <emphasis>configure</emphasis> resource in the control file.
   </para>

   <para>
    At least the root user should be configured during auto-installation so
    you can log in after the installation is finished. It will also ensure
    nobody else can log in to the system (in case the password is not set).
   </para>

   <para>
    The two users in the following example are added during system
    configuration.
   </para>

   <example>
    <title>User Configuration</title>
<screen>

...
   &lt;users config:type="list"&gt;
      &lt;user&gt;
         &lt;username&gt;root&lt;/username&gt;
         &lt;user_password&gt;password&lt;/user_password&gt;
         &lt;encrypted config:type="boolean"&gt;true&lt;/encrypted&gt;
         &lt;forename/&gt;
         &lt;surname/&gt;
      &lt;/user&gt;
      &lt;user&gt;
         &lt;username&gt;nashif&lt;/username&gt;
         &lt;user_password&gt;password&lt;/user_password&gt;
         &lt;encrypted config:type="boolean"&gt;true&lt;/encrypted&gt;
         &lt;forename&gt;Anas&lt;/forename&gt;
         &lt;surname&gt;Nashif&lt;/surname&gt;	  	
      &lt;/user&gt;
   &lt;/users&gt;
...
</screen>
   </example>

   <para>
    The last example shows the minimal information required for adding
    users. Additional options are available for a more customized user
    account management. The data in
    <filename>/etc/default/useradd</filename> is used to determine the home
    directory of the user to be created as well as other parameters.
   </para>
  </sect1>
  <sect1 id="createprofile-scripts">
   <title>Custom User Scripts</title>

   <para>
    By adding scripts to the auto-installation process you can customize the
    installation according to your needs and take control in different
    stages of the installation.
   </para>

   <para>
    In the auto-installation process, five types of scripts can be executed
    and they will be described here in order of "appearance" during the
    installation.
   </para>

   <para>
    All scripts have to be in the &lt;scritps&gt; section.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <emphasis>pre-scripts</emphasis> (very early, before anything else
      really happens)
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>postpartitioning-scripts</emphasis> (after partitioning and
      mounting to /mnt but before RPM installation—since openSUSE 11.2 and
      SLES11 SP3)
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>chroot-scripts</emphasis> (after the package installation,
      before the first boot)
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>post-scripts</emphasis> (during the first boot of the
      installed system, no services running)
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>init-scripts</emphasis> (during the first boot of the
      installed system, all services up and running)
     </para>
    </listitem>
   </itemizedlist>

   <sect2 id="pre-install-scripts">
    <title>Pre-Install Scripts</title>
    <para>
     Executed before YaST does any real change to the system (before
     partitioning and package installation but after the hardware
     detection).
    </para>
    <para>
     You can use a pre-script to modify your profile and let AutoYaST reread
     it. Find your profile in "/tmp/profile/autoinst.xml". Adjust the file
     and store the modified version in "/tmp/profile/modified.xml". AutoYaST
     will read the modified file after the pre-script finishes.
    </para>
    <para>
     With SUSE Linux 10.0 and all later versions, it is possible to change
     the partitioning with fdisk in your pre-script. With pre-10.0 versions
     of SUSE Linux (like SLES9), this was not possible.
    </para>
    <note>
     <title>Pre-Install Scripts with Confirmation</title>
     <para>
      Pre-scripts are executed at an early stage of the installation. This
      means if you have requested to confirm the installation, the
      pre-scripts will be executed before the confirmation screen shows up
      (<emphasis>profile/install/general/mode/confirm</emphasis>).
     </para>
    </note>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;pre-scripts config:type="list"&gt;&lt;script&gt; ...
     &lt;/script&gt;&lt;/pre-scripts&gt;...&lt;/scripts&gt; tags.
    </para>
    <table>
     <title>Pre-script XML Representation</title>
     <tgroup cols="3">
       <colspec colwidth="1*"/>
       <colspec colwidth="3*"/>
       <colspec colwidth="2*"/>
       <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myPreScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML
          profile, refer to the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing the pre script" &gt; /tmp/pre-script_out.txt 
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          interpreter
         </para>
        </entry>
        <entry>
         <para>
          Specify the interpreter that must be used for the script.
          Supported options are shell and perl.
         </para>
<screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional (default is "shell").
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;myPreScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. Default is the type of the script (pre-scripts in this
          case). If you have more than one script, you should set the
          filename to a reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback
         </para>
        </entry>
        <entry>
         <para>
          If this boolean is "true", stdout and stderr of the script will be
          shown in a pop-up, which the user has to confirm via the OK button.
          If stdout and stderr are empty, no pop-up is shown and therefore no
          confirmation is needed.
         </para>
<screen>&lt;feedback config:type="boolean"
&gt;true&lt;/feedback&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false". This option was introduced with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback_type
         </para>
        </entry>
        <entry>
         <para>
          This can be "message", "warning" or "error". Set the timeout for
          these pop-ups in the &lt;report&gt; section.
         </para>
<screen>&lt;feedback_type&gt;warning&lt;/feedback_type&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if missing, an always blocking pop-up is used. This
          option was introduced with openSUSE 11.2 (not SLES11).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          debug
         </para>
        </entry>
        <entry>
         <para>
          If this is "true", every single line of a shell script is logged.
          Perl scripts are run with warnings turned on.
         </para>
<screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "true". This option was introduced with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          notification
         </para>
        </entry>
        <entry>
         <para>
          This text will be shown in a pop-up for the time the script is
          running in the background.
         </para>
<screen>&lt;notification&gt;Please wait while script is running...&lt;/notification&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if not configured, no notification pop-up will be shown.
          This option was introduced with openSUSE 11.3/SLES11 SP2 (not
          SLES10).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. Change this
          default behavior by setting this boolean to "true".
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false" (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="postpartitioning-install-scripts">
    <title>Postpartitioning Scripts</title>
    <note>
     <para>
      Available since openSUSE 11.2 only and SLES11 SP3.
     </para>
    </note>
    <para>
     Executed after YaST has done the partitioning and written the fstab.
     The empty system is mounted to /mnt already.
    </para>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;postpartitioning-scripts
     config:type="list"&gt;&lt;script&gt; ...
     &lt;/script&gt;&lt;/postpartitioning-scripts&gt;...&lt;/scripts&gt;
     tags
    </para>
    <table>
     <title>Postpartitioning Script XML Representation</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you don't want to put the whole shell script into the XML profile,
          refer to the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing postpart script" &gt; /mnt/postpart_test.txt
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          interpreter
         </para>
        </entry>
        <entry>
         <para>
          The interpreter that must be used for the script. Supported
          options are shell and perl.
         </para>
<screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "shell".
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;myScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is the type of the script
          (postpartitioning-scripts in this case). If you have more than one
          script, set the filename to a reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback
         </para>
        </entry>
        <entry>
         <para>
          If this boolean is "true", stdout and stderr of the script will be
          shown in a pop-up, which the user has to confirm via the OK button.
          If stdout and stderr are empty, no pop-up is shown and therefore no
          confirmation is needed.
         </para>
<screen>&lt;feedback config:type="boolean"
&gt;true&lt;/feedback&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, the default is "false". This option was introduced with
          openSUSE 10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback_type
         </para>
        </entry>
        <entry>
         <para>
          This can be "message", "warning" or "error". Set the timeout for
          these pop-ups in the &lt;report&gt; section.
         </para>
<screen>&lt;feedback_type&gt;warning&lt;/feedback_type&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if missing, an always blocking pop-up is used. This
          option was introduced with openSUSE 11.2 (not SLES11).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          debug
         </para>
        </entry>
        <entry>
         <para>
          If this is "true", every single line of a shell script is logged.
          Perl scripts are run with warnings turned on.
         </para>
<screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "true". This option was added with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          notification
         </para>
        </entry>
        <entry>
         <para>
          This text will be shown in a pop-up for the time the script is
          running in the background.
         </para>
<screen>&lt;notification&gt;Please wait while script is running...&lt;/notification&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if not configured, no notification pop-up will be shown.
          This option was added with openSUSE 11.3/SLES11 SP2 (not SLES10).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. Set this
          boolean to "true" if you want to change this default behavior.
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is false (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="chroot-scripts">
    <title>Chroot Environment Scripts</title>
    <para>
     Chroot scripts are executed before the machine reboots for the first
     time. You can execute chroot scripts before the installation chroots
     into the installed system and configures the boot loader or you can
     execute a script after the chroot into the installed system has
     happened (look at the "chrooted" parameter for that).
    </para>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;chroot-scripts config:type="list"&gt;&lt;script&gt;
     ... &lt;/script&gt;&lt;/chroot-scripts&gt;...&lt;/scripts&gt; tags
    </para>
    <table>
     <title>Chroot Script XML Representation</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myChrootScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML
          profile, use the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[
echo "Testing the chroot script" &gt;
/tmp/chroot_out.txt
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          chrooted
         </para>
        </entry>
        <entry>
         <para>
          This value can be "true" or "false". If set to "false", the
          installed system remains mounted at "/mnt" and no chroot happens.
          The boot loader is not installed either at this stage. Set to
          "true" means, a chroot into /mnt is performed, where the installed
          system is mounted. The boot loader is installed, and if you want to
          change anything in the installed system, you don't have to use the
          "/mnt/" prefix anymore.
         </para>
<screen>&lt;chrooted config:type="boolean"
&gt;true&lt;/chrooted&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false".
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          interpreter
         </para>
        </entry>
        <entry>
         <para>
          The interpreter that must be used for the script. Supported
          options are shell and perl. If you are in a chrooted=true
          condition, you can also use python if installed.
         </para>
<screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is shell.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;myPreScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is the type of the script (chroot-scripts in
          this case). If you have more than one script, you should set the
          filename to a reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback
         </para>
        </entry>
        <entry>
         <para>
          If this boolean is "true", stdout and stderr of the script will be
          shown in a pop-up, which the user has to confirm via the OK button.
          If stdout and stderr are empty, no pop-up is shown and therefore no
          confirmation is needed.
         </para>
<screen>&lt;feedback config:type="boolean"
&gt;true&lt;/feedback&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false". This option was added with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback_type
         </para>
        </entry>
        <entry>
         <para>
          This can be "message", "warning" or "error". Set the timeout for
          these pop-ups in the &lt;report&gt; section.
         </para>
<screen>&lt;feedback_type&gt;warning&lt;/feedback_type&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if missing, an always blocking pop-up is used. This
          option was introduced with openSUSE 11.2 (not SLES11).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          debug
         </para>
        </entry>
        <entry>
         <para>
          If this is true, every single line of a shell script is logged.
          Perl scripts are run with warnings turned on.
         </para>
<screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "true". This option was added with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          notification
         </para>
        </entry>
        <entry>
         <para>
          This text will be shown in a pop-up for the time the script is
          running in the background.
         </para>
<screen>&lt;notification&gt;Please wait while script is running...&lt;/notification&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if not configured, no notification pop-up will be shown.
          This option was added with openSUSE 11.3/SLES11 SP2 (not SLES10).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. You can
          change the default behavior by setting this boolean to "true".
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false" (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="post-install-scripts">
    <title>Post-Install Scripts</title>
    <para>
     These scripts are executed after AutoYaST has completed the system
     configuration and after it has booted the system for the first time.
    </para>
    <para>
     It is possible to execute post scripts in an earlier phase while the
     installation network is still up and before AutoYaST configures the
     system. To run network-enabled post scripts, the boolean property
     <emphasis>network_needed</emphasis> has to be set to "true".
    </para>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;post-scripts config:type="list"&gt;&lt;script&gt;
     ... &lt;/script&gt;&lt;/post-scripts&gt;...&lt;/scripts&gt; tags.
    </para>
    <table>
     <title>Post Script XML Representation</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myPostScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML
          profile, use the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing the chroot script" &gt;
/tmp/chroot_out.txt 
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          network_needed
         </para>
        </entry>
<!-- FIXME: double check that. I'm very unsure if this is correct -->
        <entry>
         <para>
          This value can be "true" or "false". On "false" the script will
          run after the YaST modules like the user configuration and
          everything else are done. The network is configured but not up and
          running yet. With this value set to "true", the script runs before
          all YaST modules are configured. So there is no local user and no
          network is configured but the installation network is still up and
          running (if you did a network installation).
         </para>
<screen>&lt;network_needed config:type="boolean"
&gt;true&lt;/network_needed&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false".
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          interpreter
         </para>
        </entry>
        <entry>
         <para>
          The interpreter that must be used for the script. Supported
          options are shell, perl and python if installed.
         </para>
<screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is shell.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;myPostScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is the type of the script (post-scripts in this
          case). If you have more than one script, set the filename to a
          reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback
         </para>
        </entry>
        <entry>
         <para>
          If this boolean is "true", stdout and stderr of the script will be
          shown in a pop-up, which the user has to confirm via the OK button.
          If stdout and stderr are empty, no pop-up is shown and therefore no
          confirmation is needed.
         </para>
<screen>&lt;feedback config:type="boolean"
&gt;true&lt;/feedback&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false". This option was added with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          feedback_type
         </para>
        </entry>
        <entry>
         <para>
          This can be "message", "warning" or "error". Set the timeout for
          these pop-ups in the &lt;report&gt; section.
         </para>
<screen>&lt;feedback_type&gt;warning&lt;/feedback_type&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if missing, an always blocking pop-up is used. This
          option was added with openSUSE 11.2 (not SLES11).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          debug
         </para>
        </entry>
        <entry>
         <para>
          If this is "true", every single line of a shell script is logged.
          Perl scripts are run with warnings turned on.
         </para>
<screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "true". This option was added with SL
          10.1/SLES10.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          notification
         </para>
        </entry>
        <entry>
         <para>
          This text will be shown in a pop-up for the time the script is
          running in the background.
         </para>
<screen>&lt;notification&gt;Please wait while script is running...&lt;/notification&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, if not configured, no notification pop-up will be shown.
          This option was introduced with openSUSE 11.3/SLES11 SP2 (not
          SLES10).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. Change this
          default behavior by setting this boolean to "true".
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false" (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="init-scripts">
    <title>Init Scripts</title>
    <para>
     These scripts are executed when YaST has finished, during the initial
     boot process after the network has been initialized. These final
     scripts are executed using a special <emphasis>init.d</emphasis> script
     executed only once.
    </para>
    <para>
     Init scripts are configured using the tag
     <emphasis>init-scripts</emphasis> and are run using the special purpose
     <emphasis>init.d</emphasis> script
     <filename>/etc/init.d/autoyast</filename>.
    </para>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;init-scripts config:type="list"&gt;&lt;script&gt;
     ... &lt;/script&gt;&lt;/init-scripts&gt;...&lt;/scripts&gt; tags
    </para>
    <table>
     <title>Init script XML representation</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myInitScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML
          profile, use the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing the init script" &gt;
/tmp/init_out.txt 
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;mynitScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is the type of the script (init-scripts in this
          case). If you have more than one script, set the filename to a
          reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. Change this
          default behavior by setting this boolean to "true".
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is "false" (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    <para>
     When added to the control file manually, scripts have to be included in
     a <emphasis>CDATA</emphasis> element to avoid confusion with the file
     syntax and other tags defined in the control file.
    </para>
   </sect2>

   <sect2 id="script-examples">
    <title>Script Example</title>
    <example>
     <title>Post Script Configuration</title>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
        &lt;scripts&gt;
            &lt;chroot-scripts config:type="list"&gt;
                &lt;script&gt;
                    &lt;chrooted config:type="boolean"&gt;true&lt;/chrooted&gt;
                    &lt;filename&gt;chroot.sh&lt;/filename&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Testing chroot (chrooted) scripts"
ls
]]&gt;                    
                    &lt;/source&gt;
                &lt;/script&gt;
                &lt;script&gt;
                    &lt;filename&gt;chroot.sh&lt;/filename&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Testing chroot scripts"
df
cd /mnt
ls
]]&gt;                    
                    &lt;/source&gt;
                &lt;/script&gt;
            &lt;/chroot-scripts&gt;
            &lt;post-scripts config:type="list"&gt;
                &lt;script&gt;
                    &lt;filename&gt;post.sh&lt;/filename&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;source&gt;&lt;![CDATA[
#!/bin/sh

echo "Running Post-install script"
/etc/init.d/portmap start
mount -a 192.168.1.1:/local /mnt
cp /mnt/test.sh /tmp
umount /mnt
]]&gt;
                &lt;/source&gt;
                &lt;/script&gt;
                &lt;script&gt;
                    &lt;filename&gt;post.pl&lt;/filename&gt;
                    &lt;interpreter&gt;perl&lt;/interpreter&gt;
                    &lt;source&gt;&lt;![CDATA[
#!/usr/bin/perl
print "Running Post-install script";

]]&gt;
                    &lt;/source&gt;
                &lt;/script&gt;
            &lt;/post-scripts&gt;
            &lt;pre-scripts config:type="list"&gt;
                &lt;script&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;location&gt;http://192.168.1.1/profiles/scripts/prescripts.sh&lt;/location&gt;
                &lt;/script&gt;
                &lt;script&gt;
                    &lt;filename&gt;pre.sh&lt;/filename&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Running pre-install script"
]]&gt;
                    &lt;/source&gt;
                &lt;/script&gt;
            &lt;/pre-scripts&gt;
            &lt;postpartitioning-scripts config:type="list"&gt;
                &lt;script&gt;
                    &lt;filename&gt;postpart.sh&lt;/filename&gt;
                    &lt;interpreter&gt;shell&lt;/interpreter&gt;
                    &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
                    &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
                    &lt;source&gt;&lt;![CDATA[
touch /mnt/testfile
echo Hi
]]&gt;
                    &lt;/source&gt;
                &lt;/script&gt;
            &lt;/postpartitioning-scripts&gt;
        &lt;/scripts&gt;
&lt;/profile&gt;
</screen>
    </example>
    <para>
     After installation is finished, the scripts and the output logs can be
     found in the directory <filename>/var/adm/autoinstall</filename>. The
     scripts are located in the subdirectory <filename>scripts</filename>
     and the output logs in the <filename>log</filename> directory.
    </para>
    <para>
     The log is the output when executing the shell scripts using the
     following command:
    </para>
<screen>/bin/sh -x &lt;script_name&gt; 2&amp;&gt; /var/adm/autoinstall/logs/&lt;script_name&gt;.log</screen>
   </sect2>
  </sect1>
  <sect1 id="createprofile-sysconfig">
   <title>System Variables (Sysconfig)</title>

   <para>
    Using the sysconfig resource, it is possible to define configuration
    variables in the sysconfig repository
    (<filename>/etc/sysconfig</filename>) directly. Sysconfig variables,
    offer the possibility to fine-tune many system components and
    environment variables exactly to your needs.
   </para>

<!--
    <para>
      Refer to the handbook<remark>emap 2011-11-06: Add proper reference or at
      least the name of the manual.</remark>
      <remark>ke 2011-11-09: this is not completely documented in our books.</remark>
      for more details about the many
      configuration options available in <filename>/etc/sysconfig</filename>.
    </para>
-->

   <para>
    The following example shows how a variable can be set using the
    sysconfig resource.
   </para>

   <para>
    To configure a variable in a sysconfig file, the following syntax can be
    used:
   </para>

   <example>
    <title>Sysconfig Configuration</title>
<screen>

  &lt;sysconfig config:type="list" &gt;
   &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;XNTPD_INITIAL_NTPDATE&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/xntp&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;ntp.host.com&lt;/sysconfig_value&gt;
   &lt;/sysconfig_entry&gt;
   &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;HTTP_PROXY&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/proxy&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;proxy.host.com:3128&lt;/sysconfig_value&gt;
   &lt;/sysconfig_entry&gt;
   &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;FTP_PROXY&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/proxy&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;proxy.host.com:3128&lt;/sysconfig_value&gt;
   &lt;/sysconfig_entry&gt;
  &lt;/sysconfig&gt;
	    
	  </screen>
    <para>
     Both relative and absolute pathes can be provided. If no absolute path
     is given, it is treated as a sysconfig file under the
     <filename>/etc/sysconfig</filename> directory.
    </para>
   </example>
  </sect1>
  <sect1 id="createprofile-completeconf">
   <title>Adding Complete Configurations</title>

   <para>
    For many applications and services you might have prepared a
    configuration file which should be copied to the appropriate location in
    the installed system, for example if you are installing a Web server and
    have a <emphasis>ready to go</emphasis> server configuration file
    (<filename>httpd.conf</filename>).
   </para>

   <para>
    Using this resource, you can embed the file into the control file by
    specifying the final path on the installed system. YaST will copy this
    file to the specified location.
   </para>

   <para>
    This feature requires the autoyast2 package to be installed. If the
    package is missing, AutoYaST will silently ignore the
    <emphasis>files</emphasis> section. Since openSUSE 11.1 and SLES11,
    AutoYaST will install the package automatically if it is missing.
   </para>

   <para>
    Since openSUSE 11.1 and SLES11, you can specify the
    <emphasis>file_location</emphasis> where the file should be retrieved
    from. For an HTTP server this would look like:
    <emphasis>&lt;file_location&gt;http://my.server.site/issue&lt;/file_location&gt;</emphasis>.
   </para>

   <para>
    Since openSUSE 11.2 (not SLES11), you can create directories by
    specifying a <emphasis>file_path</emphasis> that ends with a slash.
   </para>

   <example>
    <title>Dumping files into the installed system</title>
<screen>

  &lt;files config:type="list"&gt;
      &lt;file&gt;
        &lt;file_path&gt;/etc/httpd/httpd.conf&lt;/file_path&gt;
        &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

       &lt;/file_contents&gt;
     &lt;/file&gt;
  &lt;/files&gt;

	</screen>
<screen>

  &lt;files config:type="list"&gt;
      &lt;file&gt;
        &lt;file_path&gt;/mydir/a/b/c/&lt;/file_path&gt; &lt;!-- create directory (since openSUSE 11.2) --&gt;
     &lt;/file&gt;
  &lt;/files&gt;

	</screen>
   </example>

   <para>
    A more advanced example is shown below. This configuration will create a
    file using the content supplied in <emphasis>file_contents</emphasis>
    and change the permissions and ownership of the file. After the file has
    been copied to the system, a script is executed, which can be used to
    manipulate the file and prepare it for the environment of the client.
   </para>

   <example>
    <title>Dumping files into the installed system</title>
<screen>

  &lt;files config:type="list"&gt;
      &lt;file&gt;
        &lt;file_path&gt;/etc/someconf.conf&lt;/file_path&gt;
        &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

       &lt;/file_contents&gt;
        &lt;file_owner&gt;nashif.users&lt;/file_owner&gt;
        &lt;file_permissions&gt;444&lt;/file_permissions&gt;
        &lt;file_script&gt;
          &lt;interpreter&gt;shell&lt;/interpreter&gt;
          &lt;source&gt;

&lt;![CDATA[
#!/bin/sh

echo "Testing file scripts" &gt;&gt; /etc/someconf.conf
df
cd /mnt
ls
]]&gt;

          &lt;/source&gt;
        &lt;/file_script&gt;
     &lt;/file&gt;
  &lt;/files&gt;

	</screen>
   </example>
  </sect1>
  <sect1 id="CreateProfile-Ask">
   <title>Ask the User for Values during Installation</title>

   <para>
    This feature is only available since SUSE Linux 10.1 and SLES10.
   </para>

   <para>
    You have the option to let the user decide the values of specific parts
    of the profile during the installation. If you use this feature, a pop-up
    will ask the user to enter a specific part of the profile during
    installation. If you want a full auto installation, but the user should
    set the password of the local account, you can do this via the
    <emphasis>ask</emphasis> directive in the profile.
   </para>

   <para>
    The following elements must be between the &lt;ask-list
    config:type="list"&gt;&lt;ask&gt; ... &lt;/ask&gt;&lt;/ask-list&gt; tags
    in the &lt;general&gt; section.
   </para>

   <table>
    <title>XML representation</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Element
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
       <entry>
        <para>
         Comment
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         question
        </para>
       </entry>
       <entry>
        <para>
         The question you want to ask the user.
        </para>
<screen>&lt;question&gt;Enter the LDAP server&lt;/question&gt;</screen>
       </entry>
       <entry>
        <para>
         The default value is the path to the element (the path often looks
         strange, so we recommend entering a question).
        </para>
       <remark>emap 2011-11-04: not sure I understand this.</remark>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         default
        </para>
       </entry>
       <entry>
        <para>
         Set a pre-selection for the user. A textentry will be filled out
         with this value. A check box will be "true" or "false" and a
         selection will have this default "value" pre-selected.
        </para>
<screen>&lt;default&gt;dc=suse,dc=de&lt;/default&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         help
        </para>
       </entry>
       <entry>
        <para>
         An optional helptext that is shown on the left side of the
         question.
        </para>
<screen>&lt;help&gt;Enter the LDAP server address.&lt;/help&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         title
        </para>
       </entry>
       <entry>
        <para>
         An optional title that is shown above the questions.
        </para>
<screen>&lt;title&gt;LDAP server&lt;/title&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         type
        </para>
       </entry>
       <entry>
        <para>
         The type of the element you want to change. Possible values are
         "symbol", "boolean", "string" and "integer". The file system in the
         partition section is a symbol, while the "encrypted" element in the
         user configuration is a boolean. You can see the type of that
         element if you look in your profile at the config:type="...."
         attribute. Since openSUSE 11.2 and SLES11 SP2 you can use
         "static_text" as type too. A static_text is just a text that does
         not require any user input and can be used to show information if
         it's not wanted in the help text.
        </para>
<screen>&lt;type&gt;symbol&lt;/type&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. The default is string. If type is "symbol", you must
         provide the selection element too (see below).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         password
        </para>
       </entry>
       <entry>
        <para>
         If this boolean is set to "true", a password dialog pops up instead
         of a simple text entry. Setting this to "true" only makes sense if
         "type" is string.
        </para>
<screen>&lt;password config:type="boolean"&gt;true&lt;/password&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. The default is "false".
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         path (deprecated since openSUSE 11.0 and SLES11 - use pathlist)
        </para>
       </entry>
       <entry>
        <para>
         deprecated
        </para>
<screen>deprecated</screen>
       </entry>
       <entry>
        <para>
         deprecated
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         pathlist (available since openSUSE 11.0 and SLES11 - replaces
         <emphasis>path</emphasis>)
        </para>
       </entry>
       <entry>
        <para>
         A list of <emphasis>path</emphasis> elements. A path is a comma
         separated list of elements that describes the path to the element
         you want to change. For example, the ldap server element can be
         found in the profile in the &lt;ldap&gt;&lt;ldap_server&gt;
         section. So if you want to change that value, you have to set the
         path to "ldap,ldap_server". If you want to change the password of
         the first user in the profile, you have to set the path to
         "users,0,user_password". The "0" indicates the first user in the
         &lt;users config:type="list"&gt; list of users in the profile.
        </para>
<screen>&lt;pathlist config:type="list"
&gt;&lt;path&gt;networking,dns,hostname&lt;/path&gt;
&lt;path&gt;...&lt;/path&gt;</screen>
       </entry>
       <entry>
        <para>
         This information is optional but you should at least provide
         <emphasis>path</emphasis> or <emphasis>file</emphasis>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         file (available since SLES10 SP1 and openSUSE 10.2)
        </para>
       </entry>
       <entry>
        <para>
         You can store the answer to a question in a file, to use it in one
         of your scripts later. If you ask during stage=inital and you want
         to use the answer in stage2, then you have to copy the answer-file
         in a chroot script that is running as chrooted=false. Use the
         commnad: "cp /tmp/my_answer /mnt/tmp/". The reason is that /tmp in
         stage1 is just in the RAM disk and will get lost after the reboot,
         but the installed system is already mounted at /mnt/.
        </para>
<screen>&lt;file&gt;/tmp/answer_hostname&lt;/file&gt;</screen>
       </entry>
       <entry>
        <para>
         This information is optional, but you should at least provide
         <emphasis>path</emphasis> or <emphasis>file</emphasis>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         password
        </para>
       </entry>
       <entry>
        <para>
         If this boolean is set to "true", a password dialog pops up instead
         of a simple text entry. Setting this to "true" only makes sense if
         "type" is string.
        </para>
<screen>&lt;password config:type="boolean"&gt;true&lt;/password&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. The default is "false".
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         stage
        </para>
       </entry>
       <entry>
        <para>
         Stage configures the installation stage in which the question pops
         up. You can set this value to "cont" or "initial". "initial" means
         the pop-up comes up very early in the installation, shortly after
         the pre-script has run. "cont" means, that the dialog with the
         question comes after the first reboot when the system boots for the
         very first time. Questions you answer during the "inital" stage
         will write their answer into the profile on the hard disk. You
         should know that if you enter cleartext passwords during "initial".
         Of course it does not make sense to ask for the file system to use
         during the "cont" phase. The hard disk is already partitioned at
         that stage and the question will have no effect.
        </para>
<screen>&lt;stage&gt;cont&lt;/stage&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. The default is "initial".
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         selection
        </para>
       </entry>
       <entry>
        <para>
         The selection element contains a list of &lt;entry&gt; elements.
         Each entry represents a possible option for the user to choose. The
         user cannot enter a value in a textfield, but he can choose from a
         list of values.
        </para>
<screen>&lt;selection config:type="list"&gt;
  &lt;entry&gt;
    &lt;value&gt;
        reiser
    &lt;/value&gt;
    &lt;label&gt;
        Reiser Filesystem
    &lt;/label&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;value&gt;
        ext3
    &lt;/value&gt;
    &lt;label&gt;
        Extended3 Filesystem
    &lt;/label&gt;
  &lt;/entry&gt;
&lt;/selection&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional for type=string, not possible for type=boolean and
         mandatory for type=symbol.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         dialog (available since openSUSE 10.3 and SLES10 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can ask more than one question per dialog. To do so, specifiy
         the dialog-id with an integer. All questions with the same
         dialog-id belong to the same dialog. The dialogs are sorted by the
         id too.
        </para>
<screen>&lt;dialog config:type="integer"&gt;3&lt;/dialog&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         element (available since openSUSE 10.3 and SLES10 SP2)
        </para>
       </entry>
       <entry>
        <para>
         you can have more than one question per dialog. To make that
         possible you have to specifiy the element-id with an integer. The
         questions in a dialog are sorted by id.
        </para>
<screen>&lt;element config:type="integer"&gt;1&lt;/element&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional (see dialog).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         width (available since openSUSE 12.3 and SLES11 SP3)
        </para>
       </entry>
       <entry>
        <para>
         You can increase the default width of dialog. If there are multiple
         width specifications per dialog, the largest one is used. The number is
         roughly equivalent to the number of characters.
        </para>
<screen>&lt;width config:type="integer"&gt;50&lt;/width&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         height (available since openSUSE 12.3 and SLES11 SP3)
        </para>
       </entry>
       <entry>
        <para>
         You can increase default height of dialog. If there are multiple
         height specifications per dialog, largest one is used. The number
         is roughly equivalent to number of lines.
        </para>
<screen>&lt;height config:type="integer"&gt;15&lt;/height&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         frametitle (available since openSUSE 10.3 and SLES10 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can have more than one question per dialog. Each question on a
         dialog has a frame that can have a frame title, a small caption for
         each question. You can put multiple elements into one frame. They
         have to have the same frame title.
        </para>
<screen>&lt;frametitle&gt;User data&lt;/frametitle&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. Default is no frame title.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         script (available since openSUSE 10.3, not in SLES10 SP1)
        </para>
       </entry>
       <entry>
        <para>
         Since 10.3, you can run scripts after a question has been answered
         (see the table below for detailed instructions about scripts).
        </para>
<screen>&lt;script&gt;...&lt;/script&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional (default is no script).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         ok_label (available since openSUSE 11.2 and SLES11 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can change the label on the "Ok" button. The last element that
         specifies the label for a dialog wins.
        </para>
<screen>&lt;ok_label&gt;Finish&lt;/ok_label&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         back_label (available since openSUSE 11.2 and SLES11 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can change the label on the "Back" button. The last element
         that specifies the label for a dialog wins.
        </para>
<screen>&lt;back_label&gt;change values&lt;/back_label&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         timeout (available since openSUSE 11.2 and SLES11 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can specify an integer here that is used as timeout in seconds.
         If the user does not answer the question before the timeout, the
         default value is taken as answer. When the user touches or changes
         any widget in the dialog, the timeout is turned off and the dialog
         has to be confirmed via the ok-button.
        </para>
<screen>&lt;timeout config:type="integer"&gt;30&lt;/timeout&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. A missing value is interpreted as 0, which means that
         there is no timeout.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         default_value_script (available since openSUSE 11.2 and SLES11 SP2)
        </para>
       </entry>
       <entry>
        <para>
         You can run scripts to set the default value for a question (see
         the table below for detailed instructions about default value
         scripts). This feature is useful if you can "calculate" a useful
         default value, especially in combination with the "timeout" option.
        </para>
<screen>&lt;default_value_script&gt;...&lt;/default_value_script&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. Default is no script.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>

   <para>
    The following elements must be between the &lt;ask-list
    config:type="list"&gt;&lt;ask&gt;&lt;default_value_script&gt;...&lt;/default_value_script&gt;...&lt;/ask&gt;&lt;/ask-list&gt;
    tags in the &lt;general&gt; section. This is available since 11.2 and
    SLES11-SP2.
   </para>

   <table>
    <title>XML representation</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Element
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
       <entry>
        <para>
         Comment
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         source
        </para>
       </entry>
       <entry>
        <para>
         The source code of the script. Whatever you <command>echo</command>
         to STDOUT will be used as default value for the ask-dialog. If your
         script has an exit code other than 0, the normal default element is
         used. Take care you use <command>echo -n</command> to suppress the
         <literal>\n</literal> and that you echo reasonable values and not
         "okay" for a boolean
        </para>
<screen>&lt;source&gt;...&lt;/source&gt;</screen>
       </entry>
       <entry>
        <para>
         This value is required, otherwise nothing would be executed.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         interpreter
        </para>
       </entry>
       <entry>
        <para>
         The interpreter to use.
        </para>
<screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
       </entry>
       <entry>
        <para>
         The default is shell. You can also set "/bin/myinterpreter" as
         value.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>

   <para>
    The following elements must be between the &lt;ask-list
    config:type="list"&gt;&lt;ask&gt;&lt;script&gt;...&lt;/script&gt;...&lt;/ask&gt;&lt;/ask-list&gt;
    tags in the &lt;general&gt; section. Available since 10.3 (not SLES10
    SP1).
   </para>

   <table>
    <title>XML representation</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Element
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
       <entry>
        <para>
         Comment
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         filename
        </para>
       </entry>
       <entry>
        <para>
         The filename of the script.
        </para>
<screen>&lt;filename&gt;my_ask_script.sh&lt;/filename&gt;</screen>
       </entry>
       <entry>
        <para>
         The default is ask_script.sh
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         source
        </para>
       </entry>
       <entry>
        <para>
         The source code of the script. Together with "rerun_on_error"
         activated, you check the value that was entered for sanity (since
         11.0 only). Your script can create a file "/tmp/next_dialog" with a
         dialog id specifying the next dialog AutoYaST will raise. A value
         of -1 terminates the ask sequence. If that file is not created,
         AutoYaST will run the dialogs in the normal order (since 11.0
         only).
        </para>
<screen>&lt;source&gt;...&lt;/source&gt;</screen>
       </entry>
       <entry>
        <para>
         This value is required, otherwise nothing would be executed.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         environment
        </para>
       </entry>
       <entry>
        <para>
         A boolean that passes the "value" of the answer to the question as
         an environment variable to the script. The variable is named "VAL".
        </para>
<screen>&lt;environment config:type="boolean"&gt;true&lt;/environment&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional. Default is "false".
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         feedback
        </para>
       </entry>
       <entry>
        <para>
         A boolean that turns on feedback for the script execution. STDOUT
         will be displayed in a pop-up window that must be confirmed after
         the script execution.
        </para>
<screen>&lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional, default is "false".
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         debug
        </para>
       </entry>
       <entry>
        <para>
         A boolean that turns on debugging for the script execution.
        </para>
<screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional, default is "true". This value needs "feedback" to be
         turned on too.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         rerun_on_error
        </para>
       </entry>
       <entry>
        <para>
         A boolean that keeps the dialog open until the script has an exit
         code of 0 (zero). So you can parse and check the answers the user
         gave in the script and display an error with the "feedback" option.
        </para>
<screen>&lt;rerun_on_error config:type="boolean"&gt;true&lt;/rerun_on_error&gt;</screen>
       </entry>
       <entry>
        <para>
         Optional, default is "false". This value should be used together
         with the feedback option.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>

   <para>
    Below you can see an example of the usage of the "ask" feature.
   </para>

<screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
      &lt;ask&gt;
          &lt;!-- deprecated since openSUSE 11.0; use pathlist instead
          &lt;path&gt;ldap,ldap_server&lt;/path&gt;
          --&gt;
          &lt;pathlist config:type="list"&gt;
              &lt;path&gt;ldap,ldap_server&lt;/path&gt;
          &lt;/pathlist&gt;
          &lt;stage&gt;cont&lt;/stage&gt;
          &lt;help&gt;choose your server depending on your department&lt;/help&gt;
          &lt;selection config:type="list"&gt;
              &lt;entry&gt;
                      &lt;value&gt;ldap1.mydom.de&lt;/value&gt;
                      &lt;label&gt;LDAP for development&lt;/label&gt;
              &lt;/entry&gt;
              &lt;entry&gt;
                      &lt;value&gt;ldap2.mydom.de&lt;/value&gt;
                      &lt;label&gt;LDAP for sales&lt;/label&gt;
              &lt;/entry&gt;
          &lt;/selection&gt;
          &lt;default&gt;ldap2.mydom.de&lt;/default&gt;
          &lt;default_value_script&gt;
              &lt;source&gt; &lt;![CDATA[
echo -n "ldap1.mydom.de"
]]&gt;
              &lt;/source&gt;
          &lt;/default_value_script&gt;
      &lt;/ask&gt;
      &lt;ask&gt;
          &lt;!-- deprecated since openSUSE 11.0; use pathlist instead
          &lt;path&gt;networking,dns,hostname&lt;/path&gt;
          --&gt;
          &lt;pathlist config:type="list"&gt;
              &lt;path&gt;networking,dns,hostname&lt;/path&gt;
          &lt;/pathlist&gt;
          &lt;question&gt;Enter Hostname&lt;/question&gt;
          &lt;stage&gt;initial&lt;/stage&gt;
          &lt;default&gt;enter your hostname here&lt;/default&gt;
      &lt;/ask&gt;
      &lt;ask&gt;
          &lt;!-- deprecated since openSUSE 11.0; use pathlist instead
          &lt;path&gt;partitioning,0,partitions,0,filesystem&lt;/path&gt;
          --&gt;
          &lt;pathlist config:type="list"&gt;
              &lt;path&gt;partitioning,0,partitions,0,filesystem&lt;/path&gt;
          &lt;/pathlist&gt;
          &lt;question&gt;Filesystem&lt;/question&gt;
          &lt;type&gt;symbol&lt;/type&gt;
          &lt;selection config:type="list"&gt;
              &lt;entry&gt;
                      &lt;value config:type="symbol"&gt;reiser&lt;/value&gt;
                      &lt;label&gt;default Filesystem (recommended)&lt;/label&gt;
              &lt;/entry&gt;
              &lt;entry&gt;
                      &lt;value config:type="symbol"&gt;ext3&lt;/value&gt;
                      &lt;label&gt;Fallback Filesystem&lt;/label&gt;
              &lt;/entry&gt;
          &lt;/selection&gt;

      &lt;/ask&gt;
  &lt;/ask-list&gt;
  ...
&lt;/general&gt;</screen>

   <para>
    The following example is a nice way to choose between AutoYaST profiles.
    AutoYaST will read the <filename>modified.xml</filename> file again
    after the ask-dialogs are done. This way you can fetch a complete new
    profile.
   </para>

<screen>&lt;ask&gt;
        &lt;selection config:type="list"&gt;
            &lt;entry&gt;
                    &lt;value&gt;part1.xml&lt;/value&gt;
                    &lt;label&gt;Simple partitioning&lt;/label&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                    &lt;value&gt;part2.xml&lt;/value&gt;
                    &lt;label&gt;encrypted /tmp&lt;/label&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                    &lt;value&gt;part3.xml&lt;/value&gt;
                    &lt;label&gt;LVM&lt;/label&gt;
            &lt;/entry&gt;
        &lt;/selection&gt;
        &lt;title&gt;XML Profile&lt;/title&gt;
        &lt;question&gt;Choose a profile&lt;/question&gt;
        &lt;stage&gt;initial&lt;/stage&gt;
        &lt;default&gt;part1.xml&lt;/default&gt;
        &lt;script&gt;
            &lt;filename&gt;fetch.sh&lt;/filename&gt;
            &lt;environment config:type="boolean"&gt;true&lt;/environment&gt;
            &lt;source&gt;&lt;![CDATA[
wget http://10.10.0.162/$VAL -O /tmp/profile/modified.xml 2&gt;/dev/null
]]&gt;
            &lt;/source&gt;
            &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
            &lt;feedback config:type="boolean"&gt;false&lt;/feedback&gt;
        &lt;/script&gt;
      &lt;/ask&gt;</screen>

   <para>
    you can verify the answer of a question with a script like this:
   </para>

<screen>&lt;ask&gt;
          &lt;script&gt;
            &lt;filename&gt;my.sh&lt;/filename&gt;
            &lt;rerun_on_error config:type="boolean"&gt;true&lt;/rerun_on_error&gt;
            &lt;environment config:type="boolean"&gt;true&lt;/environment&gt;
            &lt;source&gt;&lt;![CDATA[
if [ "$VAL" = "myhost" ]; then
    echo "Illegal Hostname!";
    exit 1;
fi
exit 0
]]&gt;
            &lt;/source&gt;
            &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
            &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
          &lt;/script&gt;
          &lt;dialog config:type="integer"&gt;0&lt;/dialog&gt;
          &lt;element config:type="integer"&gt;0&lt;/element&gt;
          &lt;!-- deprecated since openSUSE 11.0; use pathlist instead
          &lt;path&gt;networking,dns,hostname&lt;/path&gt;
          --&gt;
          &lt;pathlist config:type="list"&gt;
              &lt;path&gt;networking,dns,hostname&lt;/path&gt;
          &lt;/pathlist&gt;
          &lt;question&gt;Enter Hostname&lt;/question&gt;
          &lt;default&gt;enter your hostname here&lt;/default&gt;
      &lt;/ask&gt;</screen>
  </sect1>
<!-- {{{ Kdump -->
  <sect1 id="CreateProfile-kdump">
   <title>Kernel Dumps</title>

   <note>
    <title>Availability</title>
    <remark>emap 2011-11-06: Add title, maybe: Availability?</remark>
    <remark>ke 2011-11-09: done.  "Availability" sounds good.</remark>
    <para>
     This feature is only available since SLES 11 (not openSUSE 11.1). It is
     not available on the <emphasis>zSeries</emphasis>
     (<emphasis>s390x</emphasis>) architecture.
    </para>
   </note>

   <para>
    With kdump the system is able to create crashdump files if the whole
    system (i.e., the kernel) crashes. Crash dump files contain the memory
    contents while the system crashed. Such core files can be analyzed later
    by support or a (kernel) developer to find the reason for the system
    crash. Kdump is mostly useful for servers where you cannot easily
    reproduce such crashes but it is important to get the problem fixed.
   </para>

   <para>
    The only downside: enabling kdump costs you between 64 MiB and 128 MiB
    of system RAM (on "normal" sized systems), reserved for kdump in case
    the system crashes and the dump needs to be generated.
   </para>

   <para>
    This section only describes how to set up kdump with AutoYaST. It does
    not describe how kdump works. For details, refer to the kdump(7) manual
    page, contained in the <emphasis>kdump</emphasis> package.
   </para>

   <para>
    The following example shows a general kdump configuration.
   </para>

   <example>
    <title>Kdump configuration</title>
<screen>
&lt;kdump&gt;
  &lt;!-- memory reservation --&gt;
  &lt;add_crash_kernel config:type="boolean"&gt;true&lt;/add_crash_kernel&gt;
  &lt;crash_kernel&gt;256M-:64M&lt;/crash_kernel&gt;

  &lt;general&gt;
    &lt;!-- dump target settings --&gt;
    &lt;KDUMP_SAVEDIR&gt;ftp://stravinsky.suse.de/incoming/dumps&lt;/KDUMP_SAVEDIR&gt;
    &lt;KDUMP_COPY_KERNEL&gt;true&lt;/KDUMP_COPY_KERNEL&gt;
    &lt;KDUMP_FREE_DISK_SIZE&gt;64&lt;/KDUMP_FREE_DISK_SIZE&gt;
    &lt;KDUMP_KEEP_OLD_DUMPS&gt;5&lt;/KDUMP_KEEP_OLD_DUMPS&gt;

    &lt;!-- filtering and compression --&gt;
    &lt;KDUMP_DUMPFORMAT&gt;compressed&lt;/KDUMP_DUMPFORMAT&gt;
    &lt;KDUMP_DUMPLEVEL&gt;1&lt;/KDUMP_DUMPLEVEL&gt;

    &lt;!-- notification --&gt;
    &lt;KDUMP_NOTIFICATION_TO&gt;bwalle@suse.de&lt;/KDUMP_NOTIFICATION_TO&gt;
    &lt;KDUMP_NOTIFICATION_CC&gt;&lt;/KDUMP_NOTIFICATION_CC&gt;
    &lt;KDUMP_SMTP_SERVER&gt;mail.suse.de&lt;/KDUMP_SMTP_SERVER&gt;
    &lt;KDUMP_SMTP_USER&gt;&lt;/KDUMP_SMTP_USER&gt;
    &lt;KDUMP_SMTP_PASSWORD&gt;&lt;/KDUMP_SMTP_PASSWORD&gt;

    &lt;!-- kdump kernel --&gt;
    &lt;KDUMP_KERNELVER&gt;&lt;/KDUMP_KERNELVER&gt;
    &lt;KDUMP_COMMANDLINE&gt;&lt;/KDUMP_COMMANDLINE&gt;
    &lt;KDUMP_COMMANDLINE_APPEND&gt;&lt;/KDUMP_COMMANDLINE_APPEND&gt;

    &lt;!-- expert settings --&gt;
    &lt;KDUMP_IMMEDIATE_REBOOT&gt;yes&lt;/KDUMP_IMMEDIATE_REBOOT&gt;
    &lt;KDUMP_VERBOSE&gt;15&lt;/KDUMP_VERBOSE&gt;
    &lt;KEXEC_OPTIONS&gt;&lt;/KEXEC_OPTIONS&gt;
  &lt;/general&gt;
&lt;/kdump&gt; </screen>
   </example>

<!-- {{{ Memory Reservation -->

   <sect2 id="CreateProfile-kdump-reservation">
    <title>Memory Reservation</title>
    <para>
     The first step is to reserve memory for kdump at boot-up. Because the
     memory must be reserved very early during the boot process, the
     configuration is done via a kernel command line parameter called
     <literal>crashkernel</literal>. The reserved memory will be used to
     load a second kernel which will be executed without rebooting if the
     first kernel crashes. This second kernel has a special initrd, which
     contains all programs necessary to save the dump over the network or to
     disk, send a notification e-mail, and finally reboot.
    </para>
    <para>
     Enable or disable that the <literal>crashkernel</literal> parameter is
     written for the default boot kernel with the
     <literal>add_crash_kernel</literal> tag. You can specify the value of
     the <literal>crashkernel</literal> parameter using the
     <literal>crash_kernel</literal> tag.
     <remark>emap 2011-11-06: Does this para make sense? Seems a bit obscure.</remark>
    </para>
    <para>
     To reserve memory for kdump, specify the <emphasis>amount</emphasis>
     (such as <literal>64M</literal> to reserve 64 MiB of memory from the
     RAM) and the <emphasis>offset</emphasis>. The syntax is
     <literal>crashkernel=AMOUNT@OFFSET</literal>. The kernel can
     auto-detect the right offset (with the exception of the Xen hypervisor,
     where you have to specify <emphasis>16M</emphasis> as offset). Simply
     specify
     <literal>&lt;crash_kernel&gt;crashkernel=64M&lt;/crash_kernel&gt;</literal>
     and the right thing will happen.
    </para>
    <para>
     For the <emphasis>amount</emphasis> of memory, the following values are
     recommended:
    </para>
    <table>
     <title>Recommended values for the reserved memory amount</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Platform
         </para>
        </entry>
        <entry>
         <para>
          Recommended values
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          i386 and x86-64
         </para>
        </entry>
        <entry>
         <para>
          <literal>64M</literal> for small machines (about 2 GiB of RAM, 4
          cores) and <literal>128M</literal> for larger machines
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          PPC64
         </para>
        </entry>
        <entry>
         <para>
          <literal>128M</literal> for small machines and
          <literal>256M</literal> for larger machines
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          IA64
         </para>
        </entry>
        <entry>
         <para>
          <literal>256M</literal> for small machines,
          <literal>512M</literal> for medium machines and
          <literal>1G</literal> and more for really large machines (mostly
          SGI Altix systems)
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    <para>
     You can also use the <emphasis>extended command line syntax</emphasis>
     to specify the amount of reserved memory depending on the System RAM.
     That is useful if you share one AutoYaST profile for multiple
     installations or if you often remove or install memory on one machine.
     The syntax is:
    </para>
<screen>BEGIN_RANGE_1-END_RANGE_1:AMOUNT_1,BEGIN_RANGE_2-END_RANGE_2:AMOUNT_2@OFFSET</screen>
    <para>
     <literal>BEGIN_RANGE_1</literal> is the start of the first memory range
     (for example: <literal>0M</literal>) and <literal>END_RANGE_1</literal>
     is the end of the first memory range (can be empty in case "infinity"
     should be assumed) and so on. For example
     <literal>256M-2G:64M,2G-:128M</literal> means to reserve 64 MiB of
     crashkernel memory if the system has between 256 MiB and 2 GiB RAM
     and to reserve 128 MiB of crashkernel memory if the system has more
     than 2 GiB RAM.
    </para>
    <para>
     The following table shows the settings necessary to reserve memory:
    </para>
    <table>
     <title>XML Representation of the Memory Reservation Settings</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          add_crash_kernel
         </para>
        </entry>
        <entry>
         <para>
          Set to "true" if memory should be reserved and kdump enabled.
         </para>
<screen>&lt;add_crash_kernel config:type="boolean"&gt;true&lt;/add_crash_kernel&gt;</screen>
        </entry>
        <entry>
         <para>
          required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          crash_kernel
         </para>
        </entry>
        <entry>
         <para>
          Use the syntax of the crashkernel command line as discussed above.
         </para>
<screen>&lt;crash_kernel&gt;256M:64M&lt;/crash_kernel&gt;</screen>
        </entry>
        <entry>
         <para>
          required
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

<!-- }}} -->

<!-- {{{ Dump Saving -->

   <sect2 id="CreateProfile-kdump-saving">
    <title>Dump Saving</title>
    <para>
     <remark role="fixme">Add a short description</remark>
    </para>
<!-- {{{ Target -->
    <sect3 id="CreateProfile-kdump-saving-target">
     <title>Target</title>
     <para>
      The element <literal>KDUMP_SAVEDIR</literal> specifies the URL to
      where the dump is saved. The following methods are possible:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>file</literal> to save to the local disk,
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>ftp</literal> to save to an FTP server (without
        encryption),
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>sftp</literal> to save to an SSH2 SFTP server,
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>nfs</literal> to save to an NFS location and
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>cifs</literal> to save the dump to a CIFS/SMP export from
        Samba or Microsoft Windows.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      For details see the kdump(5) manual page. Two examples are:
      <literal>file:///var/crash</literal> (which is the default location
      according to FHS) and
      <literal>ftp://user:password@host:port/incoming/dumps</literal>. A
      subdirectory, with the time stamp contained in the name, will be
      created and the dumps saved there.
     </para>
     <para>
      When the dump is saved to the local disk,
      <literal>KDUMP_KEEP_OLD_DUMPS</literal> can be used to delete old
      dumps automatically. Set it to the number of old dumps that should be
      kept. If the target partition would end up with less free disk space
      than specified in <literal>KDUMP_FREE_DISK_SIZE</literal>, the dump is
      not saved.
      <remark>emap 2011-11-06: Replaced 'copied' with
          'saved'.</remark>
     </para>
     <para>
      If you want to save the whole kernel and the debug information (if
      installed) to the same directory, set
      <literal>KDUMP_COPY_KERNEL</literal> to <literal>true</literal>.
      You'll have everything you need to analyze the dump in one directory
      (except kernel modules and their debugging information).
     </para>
    </sect3>
<!-- }}} -->
<!-- {{{ Filtering and Compression -->
    <sect3 id="CreateProfile-kdump-saving-compression">
     <title>Filtering and Compression</title>
     <para>
      The kernel dump is uncompressed and unfiltered. It can get as large as
      your system RAM. To get smaller files, compress the dump file
      afterwards. The dump has to be decompressed before opening.
<!--, so the disk space needs to
          be there in any case-->
      <remark>emap 2011-11-06: Can we delete this? If the disk space is really smaller than the RAM, it's probably not a smart idea to save the dump on the disk.</remark>
     </para>
     <para>
      To use page compression, which compresses every page and allows
      dynamic decompression with the crash(8) debugging tool, set
      <literal>KDUMP_DUMPFORMAT</literal> to <literal>compressed</literal>
      (default).
     </para>
     <para>
      You may not want to save all memory pages, for example those filled
      with zeroes. To filter the dump, set the
      <literal>KDUMP_DUMPLEVEL</literal>. 0 produces a full dump and 31 is
      the smallest dump. The manual pages kdump(5) and makedumpfile(8) list
      for each value which pages will be saved.
     </para>
    </sect3>
<!-- }}} -->
<!-- {{{ Table -->
    <sect3 id="CreateProfile-kdump-saving-summary">
     <title>Summary</title>
     <table>
      <title>XML Representation of the Dump Target Settings</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           Element
          </para>
         </entry>
         <entry>
          <para>
           Description
          </para>
         </entry>
         <entry>
          <para>
           Comment
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           KDUMP_SAVEDIR
          </para>
         </entry>
         <entry>
          <para>
           An URL that specifies the target to which the dump and related
           files will be saved.
          </para>
<screen>&lt;KDUMP_SAVEDRIR
&gt;file:///var/crash/&lt;/KDUMP_SAVEDIR&gt;</screen>
         </entry>
         <entry>
          <para>
           required
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           KDUMP_COPY_KERNEL
          </para>
         </entry>
         <entry>
          <para>
           Set to "true", if not only the dump should be saved to
           <literal>KDUMP_SAVEDIR</literal> but also the kernel and its
           debugging information (if installed).
          </para>
<screen>&lt;KDUMP_COPY_KERNEL
&gt;false&lt;/KDUMP_COPY_KERNEL&gt;</screen>
         </entry>
         <entry>
          <para>
           optional
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           KDUMP_FREE_DISK_SIZE
          </para>
         </entry>
         <entry>
          <para>
           Disk space in megabytes that must remain free after saving the
           dump. If not enough space is available to write the dump and keep
           the required disk space free, the dump will not be saved.
          </para>
<screen>&lt;KDUMP_FREE_DISK_SIZE
&gt;64&lt;/KDUMP_FREE_DISK_SIZE&gt;</screen>
         </entry>
         <entry>
          <para>
           optional
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           KDUMP_KEEP_OLD_DUMPS
          </para>
         </entry>
         <entry>
          <para>
           The number of dumps that are kept (i.e., not deleted) if
           <literal>KDUMP_SAVEDIR</literal> points to a local directory.
           Specify 0 if you do not want any dumps to be automatically
           deleted, specify -1 if all dumps except the current one should be
           deleted.
          </para>
<screen>&lt;KDUMP_KEEP_OLD_DUMPS
&gt;4&lt;/KDUMP_KEEP_OLD_DUMPS&gt;</screen>
         </entry>
         <entry>
          <para>
           optional
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </sect3>
<!-- }}} -->
   </sect2>

<!-- }}} -->

<!-- {{{ Email Notification -->

   <sect2 id="CreateProfile-kdump-notification">
    <title>E-Mail Notification</title>
    <para>
     Configure e-mail notification if you want to be informed when a machine
     crashes and a dump is saved.
    </para>
    <para>
     Because kdump runs in the initrd, a local mail server cannot send the
     notification e-mail. An SMTP server needs to be specified (see below).
     <remark>emap 2011-11-06: Removed major section that didn't make sense. Please check if my changes here are correct.</remark>
    </para>
    <para>
     You have to provide exactly one address in
     <literal>KDUMP_NOTIFICATION_TO</literal>. More addresses can be
     specified in in <literal>KDUMP_NOTIFICATION_CC</literal>. Only use
     e-mail addresses in both cases, not a real name.
    </para>
    <para>
     Specify <literal>KDUMP_SMTP_SERVER</literal> and (if the server needs
     authentication) <literal>KDUMP_SMTP_USER</literal> and
     <literal>KDUMP_SMTP_PASSWORD</literal>. Support for TSL or SSL is not
     available but may be added in the future.
    </para>
<!-- {{{ Table: XML representation of the e-mail notification settings -->
    <table>
     <title>XML Representation of the E-Mail Notification Settings</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          KDUMP_NOTIFICATION_TO
         </para>
        </entry>
        <entry>
         <para>
          Exactly one e-mail address to which the e-mail should be sent.
          Additional recipients can be specified in
          <literal>KDUMP_NOTIFICATION_CC</literal>.
         </para>
<screen>&lt;KDUMP_NOTIFICATION_TO
&gt;tux@example.com&lt;/KDUMP_NOTIFICATION_TO&gt;</screen>
         <remark>emap 2011-11-06: Do we really want to use an actual e-mail address here?</remark>
         <remark>ke 2011-11-09: no, use example.com</remark>
        </entry>
        <entry>
         <para>
          optional (notification disabled if empty)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_NOTIFICATION_CC
         </para>
        </entry>
        <entry>
         <para>
          Zero, one or more recipients that are in the cc line of the
          notification e-mail.
         </para>
<screen>&lt;KDUMP_NOTIFICATION_CC
&gt;spam@suse.de devnull@suse.de&lt;/KDUMP_NOTIFICATION_CC&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_SMTP_SERVER
         </para>
        </entry>
        <entry>
         <para>
          Host name of the SMTP server used for mail delivery. SMTP
          authentication is supported (see
          <literal>KDUMP_SMTP_USER</literal> and
          <literal>KDUMP_SMTP_PASSWORD</literal>) but TSL and SSL are
          <emphasis>not</emphasis>.
         </para>
<screen>&lt;KDUMP_SMTP_SERVER
&gt;email.suse.de&lt;/KDUMP_SMTP_SERVER&gt;</screen>
        </entry>
        <entry>
         <para>
          optional (notification disabled if empty)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_SMTP_USER
         </para>
        </entry>
        <entry>
         <para>
          User name used together with
          <literal>KDUMP_SMTP_PASSWORD</literal> for SMTP authentication.
         </para>
<screen>&lt;KDUMP_SMTP_USER
&gt;bwalle&lt;/KDUMP_SMTP_USER&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_SMTP_PASSWORD
         </para>
        </entry>
        <entry>
         <para>
          Password used together with <literal>KDUMP_SMTP_USER</literal> for
          SMTP authentication.
         </para>
<screen>&lt;KDUMP_SMTP_PASSWORD
&gt;geheim&lt;/KDUMP_SMTP_PASSWORD&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
<!-- }}} -->
   </sect2>

<!-- }}} -->

<!-- {{{ Kdump kernel settings -->

   <sect2 id="CreateProfile-kdump-kernel">
    <title>Kdump Kernel Settings</title>
    <para>
     As already mentioned, a special kernel is booted to save the dump. If
     you don't want to use the auto-detection mechanism to find out which
     kernel is used (see the kdump(5) manual page that describes the
     algorithm which is used to find the kernel), you can specify the
     version of a custom kernel in <literal>KDUMP_KERNELVER</literal>. If
     you set it to <literal>foo</literal>, then the kernel located in
     <filename>/boot/vmlinuz-foo</filename> or
     <filename>/boot/vmlinux-foo</filename> (in that order on platforms that
     have a <filename>vmlinuz</filename> file) will be used.
    </para>
    <para>
     You can specify the command line used to boot the kdump kernel.
     Normally the boot command line is used minus some settings that make no
     sense with kdump (like the <literal>crashkernel</literal> parameter)
     plus some settings needed by kdump (see the manual page kdump(5)). If
     you just want some additional parameters like a overwritten console
     setting then use <literal>KDUMP_COMMANDLINE_APPEND</literal>. If you
     know what you're doing and you want to specify the whole command line,
     set <literal>KDUMP_COMMANDLINE</literal>.
    </para>
<!-- {{{ Table: XML representation of the kernel settings -->
    <table>
     <title>XML Representation of the Kernel Settings</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          KDUMP_KERNELVER
         </para>
        </entry>
        <entry>
         <para>
          Version string for the kernel used for kdump. Leave it empty to
          use the auto-detection mechanism (strongly recommended).
         </para>
<screen>&lt;KDUMP_KERNELVER
&gt;2.6.27-default&lt;/KDUMP_KERNELVER&gt;</screen>
        </entry>
        <entry>
         <para>
          optional (auto-detection if empty)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_COMMANDLINE_APPEND
         </para>
        </entry>
        <entry>
         <para>
          Additional command line parameters for the kdump kernel.
         </para>
<screen>&lt;KDUMP_COMMANDLINE_APPEND
&gt;console=ttyS0,57600&lt;/KDUMP_COMMANDLINE_APPEND&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_COMMANDLINE
         </para>
        </entry>
        <entry>
         <para>
          Overwrite the automatically generated kdump command line. Use with
          care. In most cases, <literal>KDUMP_COMMANDLINE_APPEND</literal>
          should suffice.
         </para>
<screen>&lt;KDUMP_COMMANDLINE_APPEND
&gt;root=/dev/sda5 maxcpus=1 irqpoll&lt;/KDUMP_COMMANDLINE&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
<!-- (e-mail notification disabled if empty)-->
          <remark>emap 2011-11-06: I don't think the e-mail stuff belongs here.</remark>
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
<!-- }}} -->
   </sect2>

<!-- }}} -->

<!-- {{{ Expert settings -->

   <sect2 id="CreateProfile-kdump-expert">
    <title>Expert Settings</title>
<!-- {{{ Table: XML representation of the expert settings -->
    <table>
     <title>XML Representation of the Expert Settings</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          KDUMP_IMMEDIATE_REBOOT
         </para>
        </entry>
        <entry>
         <para>
          <literal>true</literal> if the system should be rebooted
          automatically after the dump has been saved,
          <literal>false</literal> otherwise. The default is to reboot the
          system automatically.
         </para>
<screen>&lt;KDUMP_IMMEDIATE_REBOOT
&gt;true&lt;/KDUMP_IMMEDIATE_REBOOT&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KDUMP_VERBOSE
         </para>
        </entry>
        <entry>
         <para>
          Bitmask that specifies how verbose the kdump process should be.
          Read kdump(5) for details.
         </para>
<screen>&lt;KDUMP_VERBOSE&gt;3&lt;/KDUMP_VERBOSE&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          KEXEC_OPTIONS
         </para>
        </entry>
        <entry>
         <para>
          Additional options that are passed to kexec when loading the kdump
          kernel. Normally empty.
         </para>
<screen>&lt;KEXEC_OPTIONS&gt;--noio&lt;/KEXEC_OPTIONS&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
<!-- }}} -->
   </sect2>

<!-- }}} -->
  </sect1>
<!-- }}} -->
  <sect1 id="CreateProfile-Hardware">
   <title>Miscellaneous Hardware and System Components</title>

   <para>
    In addition to the core component configuration, like network
    authentication and security, AutoYaST offers a wide range of hardware
    and system configuration options, the same as available by default on
    any system installed manually and in an interactive way. For example, it
    is possible to configure printers, sound devices, TV cards and any other
    hardware components which have a module within YaST.
   </para>

   <para>
    Any new configuration options added to YaST will be automatically
    available in AutoYaST.
   </para>

   <sect2 id="CreateProfile-Hardware-Printer">
    <title>Printer</title>
    <para>
     AutoYaST support for printing is limited to basic settings defining how
     the CUPS printing system is used on a client for printing via the
     network.
    </para>
    <para>
     There is no AutoYaST support for setting up local print queues. Modern
     printers are usually connected via USB. CUPS accesses USB printers by a
     model-specific device URI like
     <literal>usb://ACME/FunPrinter?serial=1a2b3c</literal>. Usually it is not
     possible to predict the correct USB device URI in advance, because it is
     determined by the CUPS backend <literal>usb</literal> during
     runtime. Therefore it is not possible to set up local print queues with
     AutoYaST.
    </para>
    <para>
     Basics on how CUPS is used on a client workstation to print via network:
    </para>
    <para>
     On client workstations application programs submit print jobs to the CUPS
     daemon process
     (<systemitem>cupsd</systemitem>). <systemitem>cupsd</systemitem> forwards
     the print jobs to a CUPS print server in the network where the print jobs
     are processed. The server sends the printer specific data to the printer
     device.
    </para>
    <para>
     If there is only a single CUPS print server in the network, there is no
     need to have a CUPS daemon running on each client workstation.  Instead
     it is simpler to specify the CUPS server in
     <filename>/etc/cups/client.conf</filename> and access it directly (only
     one CUPS server entry can be set).  In this case application programs
     that run on client workstations submit print jobs directly to the
     specified CUPS print server.
    </para>
    <para>
     <xref linkend="printer-conf"/> shows a <literal>printer</literal>
     configuration section. The <literal>cupsd_conf_content</literal> entry
     contains the whole verbatim content of the <systemitem
     class="daemon">cupsd</systemitem> configuration file
     <filename>/etc/cups/cupsd.conf</filename>. The
     <literal>client_conf_content</literal> entry contains the whole verbatim
     content of <filename>/etc/cups/client.conf</filename>. The
     <literal>printer</literal> section contains the <systemitem
     class="daemon">cupsd</systemitem> configuration but it does not specify
     whether or not the cupsd should run. The <literal>runlevel</literal>
     section specifies which system services should run.
    </para>
    <example id="printer-conf">
     <title>Printer configuration</title>
     <screen>  &lt;printer&gt;
    &lt;client_conf_content&gt;
      &lt;file_contents&gt;&lt;![CDATA[
... verbatim content of /etc/cups/client.conf ...
]]&gt;&lt;/file_contents&gt;
    &lt;/client_conf_content&gt;
    &lt;cupsd_conf_content&gt;
      &lt;file_contents&gt;&lt;![CDATA[
... verbatim content of /etc/cups/cupsd.conf ...
]]&gt;&lt;/file_contents&gt;
    &lt;/cupsd_conf_content&gt;
  &lt;/printer&gt;</screen>
    </example>
   </sect2>

   <sect2 id="CreateProfile-Hardware-Sound">
    <title>Sound devices</title>
    <para>
     An example of the sound configuration created using the configuration
     system is shown below.
     <remark>emap 2011-11-06: Should system read section? A little cryptic.</remark>
    </para>
    <example>
     <title>Sound configuration</title>
<screen>

....
    &lt;sound&gt;
      &lt;autoinstall config:type="boolean"&gt;true&lt;/autoinstall&gt;
      &lt;modules_conf config:type="list"&gt;
        &lt;module_conf&gt;
          &lt;alias&gt;snd-card-0&lt;/alias&gt;
          &lt;model&gt;M5451, ALI&lt;/model&gt;
          &lt;module&gt;snd-ali5451&lt;/module&gt;
          &lt;options&gt;
            &lt;snd_enable&gt;1&lt;/snd_enable&gt;
            &lt;snd_index&gt;0&lt;/snd_index&gt;
            &lt;snd_pcm_channels&gt;32&lt;/snd_pcm_channels&gt;
          &lt;/options&gt;         
        &lt;/module_conf&gt;
      &lt;/modules_conf&gt;
      &lt;volume_settings config:type="list"&gt;
        &lt;listentry&gt;
          &lt;Master config:type="integer"&gt;75&lt;/Master&gt;
        &lt;/listentry&gt;
      &lt;/volume_settings&gt;
    &lt;/sound&gt;

....

	  </screen>
    </example>
   </sect2>
  </sect1>
 </chapter>
<!--
  Local Variables:
  mode: xml
  sgml-parent-document: ("autoyast.xml" "book" "chaper")
  End:
  -->
 <chapter id="Bootmanagement">
  <title>Network-based Installation</title>
  <para>
   AutoYaST provides a method to automatically and identically install
   groups of systems. The first step when preparing a AutoYaST installation
   is to decide how you want to install the target systems. The following
   scenario is a good example for how to set up and perform automated
   installations:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     You need to install SuSE Linux on 50 new systems.
    </para>
   </listitem>
   <listitem>
    <para>
     The development department owns 30 out of the 50 new dual processor and
     SCSI systems, and these systems must be installed as clients with
     development software.
    </para>
   </listitem>
   <listitem>
    <para>
     The sales department owns 20 out of the 50 new, uni-processor IDE based
     systems and its systems must be installed as clients with end user
     software and office tools.
    </para>
    <remark>emap 2011-11-07: What about the remaining new systems? Will they be needed in this example? If not better let R&amp;D buy 30 new machines and Sales 20 new ones with different hardware. Um, reading to the end of this file, I wonder if we need this example at all? It's not being used to explain anything. It rather gets in the way. We don't even explain how the different hardware is handled.</remark>
   </listitem>
  </itemizedlist>
  <para>
   Prerequisites:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     a boot server on the same Ethernet segment,
    </para>
   </listitem>
   <listitem>
    <para>
     an installation server with the SuSE Linux OS,
    </para>
    <remark>emap 2011-11-07: Rather with the installation sources? </remark>
   </listitem>
   <listitem>
    <para>
     an AutoYaST configuration server that defines rules and profiles.
     <remark>emap 2011-11-07: This is the first mention of a config server. Is it really needed?</remark>
    </para>
   </listitem>
  </itemizedlist>
<!-- FIXME: Add info about boot server and installation server -->
  <sect1>
   <title>Configuration Server</title>

   <para>
    A configuration repository holds the control files for multiple
    machines. The control files can have any file names, which have to be
    specified at the boot time of a target client. To avoid supplying the
    profile name for every client, you can define the directory of the
    control files. If a directory is specified, then the target client tries
    to load a file with a name matching its IP address in HEX mode. This has
    the advantage that you will be dealing with consistent file names rather
    than IPs as file names which might lead to some confusion.
    <remark>emap 2011-11-07: Sounds like no dedicated server is needed, only a repository.</remark>
   </para>

   <para>
    The configuration repository is the same directory you specify when
    using the configuration system for creating control files.
   </para>

   <sect2>
    <title><phrase role="acronym">HTTP</phrase> Repository</title>
    <para>
     To be able to use the <phrase role="acronym">HTTP</phrase> protocol to
     retrieve control files while auto-installing, you need a working
     <phrase role="acronym">HTTP</phrase> server on the server side. Install
     <emphasis>Apache</emphasis> or your favorite Web server and enable it
     using YaST. Normally the Web server root directory resides in
     <filename>/srv/www/htdocs</filename> so you need to create a
     subdirectory which will serve your configuration repository.
    </para>
   </sect2>

   <sect2>
    <title><phrase role="acronym">NFS</phrase> Repository</title>
    <para>
     Create a directory and export it via
     <phrase role="acronym">NFS</phrase> to the target clients. This
     directory may the same location where you have copied the CDs. (i.e.
     <filename>/usr/local/SuSE</filename>).
     <remark>emap 2011-11-07: Change CDs to installation source/repository?</remark>
    </para>
   </sect2>

   <sect2>
    <title><phrase role="acronym">TFTP</phrase> Repository</title>
    <para>
     By default the <phrase role="acronym">TFTP</phrase> directory is
     available under <filename>/tftpboot</filename> which can also contain
     boot images if you are booting over network. Do not forget to enable
     TFTP in the Inetd configuration file
     (<filename>/etc/inetd.conf</filename>). <emphasis>Inetd</emphasis>
     configuration can be done via YaST.
    </para>
   </sect2>
  </sect1>
 </chapter>
<!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast2.xml" "book" "chapter")
       End:
      -->
 <chapter id="rulesandclass">
  <title>Rules and Classes</title>
  <para/>
  <sect1 id="rules">
   <title>Rules-based Automatic Installation</title>

   <para>
    Rules offer the possibility to configure a system depending on system
    attributes by merging multiple control files during installation. The
    rules-based installation is controlled by a rules file.
   </para>

   <para>
    The rules file is an XML file containing rules for each group of systems
    (or single systems) that you want to automatically install. A set of
    rules distinguish a group of systems based on one or more system
    attributes. After passing all rules, each group of systems is linked to
    a profile. Both the rules file and the profiles must be located in a
    pre-defined and accessible location.
   </para>

   <para>
    The rules file is retrieved only if no specific control file
    <remark>emap 2011-11-07: Should this read 'profile'?</remark>
    is supplied using the <emphasis>autoyast</emphasis> keyword. For
    example, if the following is used, the rules file will not be evaluated:
   </para>

<screen>autoyast=http://10.10.0.1/profile/myprofile.xml
autoyast=http://10.10.0.1/profile/rules/rules.xml</screen>

   <para>
    Instead use:
   </para>

<screen>autoyast=http://10.10.0.1/profile/</screen>

   <para>
    which will load http://10.10.0.1/profile/rules/rules.xml (the slash at
    the end of the directory name is important).
   </para>

   <figure id="rules-fig1">
    <title>Rules</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="rules.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="rules.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>
    If more than one rule applies, the final profile for each group is
    generated on the fly using a merge script. The merging process is based
    on the order of the rules and later rules override configuration data in
    earlier rules. Note that the names of the top sections in the merged xml
    files need to be in alphabetical order for the merge to succeed.
   </para>

   <para>
    The use of a rules file is optional. If the rules file is not found,
    system installation proceeds in the classic way by only using the
    supplied profile or by searching for the profile depending on the
    <emphasis>MAC</emphasis> or the <emphasis>IP</emphasis> address of the
    system.
   </para>

<!--
    <para>
      In the previous scenario, you would create a rules file with two different
      rules, one rule for the development and another rule for the sales
      department. For each rule, you could use different system parameters to
      distinguish the groups from one another: the development department has SMP
      and SCI  based systems and the sales group has IDE based systems. Each rule
      would also contain a link to an appropriate profile. For example, in the
      rule for the development department, you would add a link to the profile, called
      <filename>devel.xml</filename>, that you created for this department. And, in the rule
      for the sales department, you would add a link to the profile, called
      <filename>sales.xml</filename>, that you created for the sales department.
    </para>
-->

   <remark>emap 2011-11-07: If the example is dropped here we better drop it in NetworkInstall.xml as well. </remark>

   <sect2 id="rulesfile">
    <title>Rules File Explained</title>
    <example>
     <title>Simple Rules File</title>
     <para>
      The following simple example illustrates how the rules file is used to
      retrieve the configuration for a client with known hardware.
     </para>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE autoinstall&gt;
&lt;autoinstall xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;rules config:type="list"&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/hdc 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;result&gt;
            &lt;profile&gt;machine1.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/hda 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;result&gt;
            &lt;profile&gt;machine2.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
&lt;/autoinstall&gt;</screen>
    </example>
    <para>
     The last example defines two rules and provides a different profile for
     every rule. The rule used in this case is
     <emphasis>disksize</emphasis>. After parsing the rules file, YaST
     attempts to match the target system with the rules in the
     <filename>rules.xml</filename> file. A rule match occurs when the
     target system matches all system attributes defined in the rule. As
     soon as the system matches a rule, the respective resource is added to
     the stack of profiles AutoYaST will use to create the final profile.
     The <emphasis>continue</emphasis> property tells AutoYaST whether it
     should continue with other rules after a match has been found.
    </para>
    <para>
     If the first rule does not match, the next rule in the list is examined
     until a match is found.
    </para>
    <para>
     Using the <emphasis>disksize</emphasis> attribute, you can provide
     different configurations for systems with hard drives of different
     sizes. The first rule checks if the device
     <emphasis>/dev/hdc</emphasis> is available and if it is greater than 1
     GB in size using the <emphasis>match</emphasis> property.
    </para>
    <para>
     A rule must have at least one attribute to be matched. If you need to
     check more attributes, i.e. memory or architectures, you can add more
     attributes in the rule resource as shown in the next example.
    </para>
    <example>
     <title>Simple Rules File</title>
     <para>
      The following example illustrates how the rules file is used to
      retrieve the configuration for a client with known hardware.
     </para>
<screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE autoinstall&gt; 
&lt;autoinstall xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;rules config:type="list"&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/hdc 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;memsize&gt;	    
            &lt;match&gt;1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/memsize&gt;
       &lt;result&gt;
            &lt;profile&gt;machine1.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/hda 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;memsize&gt;	    
            &lt;match&gt;256&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/memsize&gt;
       &lt;result&gt;
            &lt;profile&gt;machine2.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
&lt;/autoinstall&gt;</screen>
    </example>
    <para>
     The rules directory must be located in the same directory specified via
     the <emphasis>autoyast</emphasis> keyword at boot time. If the client
     was booted using<emphasis>
     autoyast=http://10.10.0.1/profiles/</emphasis>,
     <phrase role="acronym">AutoYaST</phrase> will search for the rules file
     in <emphasis>http://10.10.0.1/profiles/rules/rules.xml</emphasis>.
    </para>
   </sect2>

   <sect2 id="customrules">
    <title>Custom Rules</title>
    <para>
     If the attributes AutoYaST provides for rules are not enough for your
     purposes, use custom rules. Custom rules are more or less a shell
     script you have to write.
     <remark>emap 2011-11-07: Is it a shell script or not?</remark>
     Its output to STDOUT specifies which AutoYaST profile should be used.
     STDERR will be ignored.
    </para>
    <para>
     Here is an example for the use of custom rules:
    </para>
<screen>&lt;rule&gt;
    &lt;custom1&gt;
        &lt;script&gt;
if grep -i intel /proc/cpuinfo &gt; /dev/null; then
echo -n "intel"
else
echo -n "non_intel"
fi;
        &lt;/script&gt;
        &lt;match&gt;*&lt;/match&gt;
        &lt;match_type&gt;exact&lt;/match_type&gt;
    &lt;/custom1&gt;
    &lt;result&gt;
         &lt;profile&gt;@custom1@.xml&lt;/profile&gt;
         &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
    &lt;/result&gt;
&lt;/rule&gt;</screen>
    <para>
     The script in this rule can echo either "intel" or "non_intel" to
     STDOUT (the output of the grep command must be directed to /dev/null in
     this case). The output of the rule script will be filled between the
     two '@' characters, to determine the filename of the profile to fetch.
     AutoYaST will read the output and fetch a file with the name
     "intel.xml" or "non_intel.xml". This file can contain the AutoYaST
     profile part for the software selection, for example, in case you want
     a different software selection on intel hardware than on others.
    </para>
    <para>
     The number of custom rules is limited to five. So you can use custom1
     to custom5.
    </para>
   </sect2>

   <sect2 id="matchtypes">
    <title>Match Types for Rules</title>
    <para>
     You can use five different match_types:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       exact (default),
      </para>
     </listitem>
     <listitem>
      <para>
       greater,
      </para>
     </listitem>
     <listitem>
      <para>
       lower,
      </para>
     </listitem>
     <listitem>
      <para>
       range,
      </para>
     </listitem>
     <listitem>
      <para>
       regex (available since 10.1 and SLES10), a simple "=~" operator like
       in Bash.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     "greater" and "lower" can be used for memsize or totaldisk for example.
     They can match only with rules that return an integer value. A range is
     only possible for integer values too and has the form of
     "value1-value2", for example "512-1024". "regex" can be used to match
     substrings like "ntel" will match "Intel", "intel" and "intelligent".
    </para>
   </sect2>

   <sect2 id="rulescombination">
    <title>Combine Attributes</title>
    <para>
     Multiple attributes can be combined via a logical operator. It is
     possible to let a rule match if disksize is greater than 1GB or memsize
     is exactly 512MB.
    </para>
    <para>
     You can do this with the "operator" element in the rules.xml file. Here
     is an example:
    </para>
<screen>&lt;rule&gt;
   &lt;disksize&gt;
        &lt;match&gt;/dev/hda 1000&lt;/match&gt;
        &lt;match_type&gt;greater&lt;/match_type&gt;
   &lt;/disksize&gt;
   &lt;memsize&gt;	    
        &lt;match&gt;256&lt;/match&gt;
        &lt;match_type&gt;greater&lt;/match_type&gt;
   &lt;/memsize&gt;
   &lt;result&gt;
        &lt;profile&gt;machine2.xml&lt;/profile&gt;
        &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
   &lt;/result&gt;
   &lt;operator&gt;or&lt;/operator&gt;
&lt;/rule&gt;</screen>
    <para>
     Just "and" and "or" are possible operators and the default operator is
     "and".
    </para>
   </sect2>

   <sect2 id="rulesstructure">
    <title>Rules File Structure</title>
    <para>
     The <filename>rules.xml</filename> file must:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       have at least one rule,
      </para>
     </listitem>
     <listitem>
      <para>
       have the name <filename>rules.xml</filename>,
      </para>
     </listitem>
     <listitem>
      <para>
       be located in the directory <emphasis>rules</emphasis> in the profile
       repository,
      </para>
     </listitem>
     <listitem>
      <para>
       and have at least one attribute to match in the rule.
      </para>
     </listitem>
    </itemizedlist>
   </sect2>

   <sect2 id="ruleattributes">
    <title>Predefined System Attributes</title>
    <para>
     The following table lists the predefined system attributes you can
     match in the rules file.
    </para>
    <para>
     If you are unsure about a value on your system, start an
     auto-installation with "confirm" set to "true". When the proposal shows
     up, switch to the console via CTRL+ALT+F2 and run
     <command>/usr/lib/YaST2/bin/y2base ayast_probe ncurses</command>. The
     text box displaying the detected values can be scrolled.
    </para>
    <table>
     <title>System Attributes</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          hostaddress
         </para>
        </entry>
        <entry>
         <para>
          IP address of the host
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          hostname
         </para>
        </entry>
        <entry>
         <para>
          The name of the host
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          domain
         </para>
        </entry>
        <entry>
         <para>
          Domain name of host
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          installed_product
         </para>
        </entry>
        <entry>
         <para>
          The name of the product to be installed.
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          installed_product_version
         </para>
        </entry>
        <entry>
         <para>
          The version of the product to be installed.
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          network
         </para>
        </entry>
        <entry>
         <para>
          network address of host
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          mac
         </para>
        </entry>
        <entry>
         <para>
          MAC address of host
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly. (MAC addresses should
          have the form <emphasis>0080c8f6484c</emphasis>).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          linux
         </para>
        </entry>
        <entry>
         <para>
          Number of installed Linux partitions on the system
          <remark>emap 2011-11-07: already installed or to be installed?</remark>
         </para>
        </entry>
        <entry>
         <para>
          This attribute can be 0 or more.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          others
         </para>
        </entry>
        <entry>
         <para>
          Number of installed non-Linux partitions on the system
         </para>
        </entry>
        <entry>
         <para>
          This attribute can be 0 or more.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          xserver
         </para>
        </entry>
        <entry>
         <para>
          X Server needed for graphic adapter
         </para>
        </entry>
        <entry>
         <para>
          This attribute must always match exactly.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          memsize
         </para>
        </entry>
        <entry>
         <para>
          Memory available on host in MBytes
         </para>
        </entry>
        <entry>
         <para>
          All match types are available.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          totaldisk
         </para>
        </entry>
        <entry>
         <para>
          Total disk space available on host in MBytes
         </para>
        </entry>
        <entry>
         <para>
          All match types are available.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          haspcmcia
         </para>
        </entry>
        <entry>
         <para>
          System has PCMCIA (i.e Laptops)
         </para>
        </entry>
        <entry>
         <para>
          Exact match required, 1 for available PCMCIA or 0 for none.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          hostid
         </para>
        </entry>
        <entry>
         <para>
          Hex representation of IP address
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          arch
         </para>
        </entry>
        <entry>
         <para>
          Architecture of host
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          karch
         </para>
        </entry>
        <entry>
         <para>
          Kernel Architecture of host (i.e. SMP kernel, Athlon Kernel)
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          disksize
         </para>
        </entry>
        <entry>
         <para>
          Drive device and size
         </para>
        </entry>
        <entry>
         <para>
          All match types are available.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          product
         </para>
        </entry>
        <entry>
         <para>
          The hardware product name as specified in SMBIOS
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          product_vendor
         </para>
        </entry>
        <entry>
         <para>
          The hardware vendor as specified in SMBIOS
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          board
         </para>
        </entry>
        <entry>
         <para>
          The system board name as specified in SMBIOS
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          board_vendor
         </para>
        </entry>
        <entry>
         <para>
          The system board vendor as specified in SMBIOS
         </para>
        </entry>
        <entry>
         <para>
          Exact match required
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          custom1-5
         </para>
        </entry>
        <entry>
         <para>
          Custom rules using shell scripts
         </para>
        </entry>
        <entry>
         <para>
          All match types are available.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="rules-dialogs">
    <title>Rules with Dialogs</title>
    <para>
     Since openSUSE 11.3 (not SLES11 SP1) you can use dialog pop-ups with
     check boxes to select rules you want matched.
    </para>
    <para>
     The following elements must be between the &lt;rules
     config:type="list"&gt;&lt;rule&gt;&lt;dialog&gt; ...
     &lt;/dialog&gt;&lt;/rule&gt;&lt;/rules&gt; tags in the rules.xml file.
    </para>
    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Attribute
         </para>
        </entry>
        <entry>
         <para>
          Values
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          dialog_nr
         </para>
        </entry>
        <entry>
         <para>
          All rules with the same dialog_nr are presented in the same pop-up
          dialog. The same dialog_nr can appear in multiple rules.
         </para>
<screen>&lt;dialog_nr config:type="integer"&gt;3&lt;/dialog_nr&gt;</screen>
        </entry>
        <entry>
         <para>
          This element is optional and the default for a missing dialog_nr
          is always "0". If you want to use one pop-up for all rules, you don't
          need to specify the dialog_nr.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          element
         </para>
        </entry>
        <entry>
         <para>
          Each element
          <remark>emap 2011-11-07: Rather each rule needs a unique element id?</remark>
          needs a unique id. Even if you have more than one dialog, you must
          not use the same id twice like an id "1" on dialog 1 and and id
          "1" on dialog 2. That's different than with &lt;ask&gt; dialogs,
          where you can have the same &lt;element&gt; id on multiple
          dialogs.
          <remark>emap 2011-11-07: Do we need to explain the ask-dialog here? It's distracting.</remark>
         </para>
<screen>&lt;element config:type="integer"&gt;3&lt;/element&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If left out, AutoYaST adds its own ids internally. Then
          you cannot specify conflicting rules (see below).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          title
         </para>
        </entry>
        <entry>
         <para>
          Caption of the pop-up dialog
         </para>
<screen>&lt;title&gt;Desktop Selection&lt;/title&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          question
         </para>
        </entry>
        <entry>
         <para>
          Question shown in the pop-up behind the check box.
         </para>
<screen>&lt;question&gt;KDE Desktop&lt;/question&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. If you don't configure a text here, the name of the XML
          file that is triggered by this rule will be shown instead.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          timeout
         </para>
        </entry>
        <entry>
         <para>
          Timeout in seconds after which the dialog will automatically
          "press" the okay button. Useful for a non-blocking installation in
          combination with rules dialogs.
         </para>
<screen>&lt;timeout config:type="integer"&gt;30&lt;/timeout&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional. A missing timeout will stop the installation process
          until the dialog is confirmed by the user.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          conflicts
         </para>
        </entry>
        <entry>
         <para>
          A list of element ids (rules) that conflict with this rule. If
          this rule matches or is selected by the user, all conflicting
          rules are deselected and disabled in the pop-up. Take care that you
          do not create deadlocks.
         </para>
<screen>&lt;conflicts config:type="list"&gt;
  &lt;element config:type="integer"&gt;1&lt;/element&gt;
  &lt;element config:type="integer"&gt;5&lt;/element&gt;
  ...
&lt;/conflicts&gt;</screen>
        </entry>
        <entry>
         <para>
          optional
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
    <para>
     Here is an example of how to use dialogs with rules:
    </para>
<screen>&lt;rules config:type="list"&gt;
    &lt;rule&gt;
        &lt;custom1&gt;
            &lt;script&gt;
echo -n 100
            &lt;/script&gt;
           &lt;match&gt;100&lt;/match&gt;
           &lt;match_type&gt;exact&lt;/match_type&gt;
        &lt;/custom1&gt;
        &lt;result&gt;
            &lt;profile&gt;rules/kde.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
        &lt;/result&gt;
        &lt;dialog&gt;
            &lt;element config:type="integer"&gt;0&lt;/element&gt;
            &lt;question&gt;KDE Desktop&lt;/question&gt;
            &lt;title&gt;Desktop Selection&lt;/title&gt;
            &lt;conflicts config:type="list"&gt;
                &lt;element config:type="integer"&gt;1&lt;/element&gt;
            &lt;/conflicts&gt;
            &lt;dialog_nr config:type="integer"&gt;0&lt;/dialog_nr&gt;
        &lt;/dialog&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
        &lt;custom1&gt;
            &lt;script&gt;
echo -n 100
            &lt;/script&gt;
           &lt;match&gt;101&lt;/match&gt;
           &lt;match_type&gt;exact&lt;/match_type&gt;
        &lt;/custom1&gt;
        &lt;result&gt;
            &lt;profile&gt;rules/gnome.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
        &lt;/result&gt;
        &lt;dialog&gt;
            &lt;element config:type="integer"&gt;1&lt;/element&gt;
            &lt;dialog_nr config:type="integer"&gt;0&lt;/dialog_nr&gt;
            &lt;question&gt;Gnome Desktop&lt;/question&gt;
            &lt;conflicts config:type="list"&gt;
                &lt;element config:type="integer"&gt;0&lt;/element&gt;
            &lt;/conflicts&gt;
        &lt;/dialog&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
        &lt;custom1&gt;
            &lt;script&gt;
echo -n 100
            &lt;/script&gt;
           &lt;match&gt;100&lt;/match&gt;
           &lt;match_type&gt;exact&lt;/match_type&gt;
        &lt;/custom1&gt;
        &lt;result&gt;
            &lt;profile&gt;rules/all_the_rest.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
</screen>
   </sect2>
  </sect1>
  <sect1 id="classes">
   <title>Classes</title>

   <para>
    Classes represent configurations for groups of target systems. Unlike
    rules, classes have to be configured in the control file. Then classes
    can be assigned to target systems.
   </para>

   <para>
    Here is an example of a class definition:
   </para>

<screen>&lt;classes config:type="list"&gt;
    &lt;class&gt;
        &lt;class_name&gt;TrainingRoom&lt;/class_name&gt;
        &lt;configuration&gt;Software.xml&lt;/configuration&gt;
    &lt;/class&gt;
&lt;/classes&gt;</screen>

   <para>
    The file Software.xml must be in the directory "classes/TrainingRoom/"
    then. It will get fetched from the same place the AutoYaST profile and
    rules were fetched from.
    <remark>emap 2011-11-07: Doesn't make much sense. Does
     this mean the directory "classes/TrainingRoom" containing Software.xml
     needs to be in the same location as the ay profile and rules? </remark>
   </para>

   <para>
    If you have multiple profiles and those profiles share parts, better use
    classes for common parts.
<!--You just have to change the class and all profiles using that class are fixed too.-->
    <remark>emap 2011-11-07: Sentence doesn't make sense.</remark>
    You can also use XIncludes.
   </para>

   <para>
    Using the configuration management system,
    <remark>emap 2011-11-07: Is this the same as the configuration system?</remark>
    you can define a set of classes. A class definition consists of the
    following variables:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <remark>emap 2011-11-07: Should the following variables really be upper case?</remark>
      Name: class name
     </para>
    </listitem>
    <listitem>
     <para>
      Descriptions:
      <remark>emap 2011-11-07: Really plural or rather: Description?</remark>
      class description
     </para>
    </listitem>
    <listitem>
     <para>
      Order: order (or priority) of the class in the stack of migration
      <remark>emap 2011-11-07: What migration?</remark>
     </para>
    </listitem>
   </itemizedlist>

   <figure>
    <title>Defining Classes</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="cms-class-definitions.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="cms-class-definitions.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>
    You can create as many classes as you need, however it is recommended to
    keep the set of classes as small as possible to keep the configuration
    system concise. For example, the following sets of classes can be used:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      site: classes describing a physical location or site,
     </para>
    </listitem>
    <listitem>
     <para>
      machine: classes describing a type of machine,
     </para>
    </listitem>
    <listitem>
     <para>
      role: classes describing the function of the machine,
     </para>
    </listitem>
    <listitem>
     <para>
      group: classes describing a department or a group within a site or a
      location.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    A file
    <remark>emap 2011-11-07: What kind of file would that be? A class
      file?</remark>
    saved in a class directory can have the same syntax and format as a
    regular control file but represents a subset of the configuration. For
    example, to create a new control file for a special computer with a
    specific network interface, only the control file resource which
    controls the configuration of the network is needed. Having multiple
    network types, you can merge the one needed for a special type of
    hardware with other class files and create a new control file which
    suits the system being installed.
    <remark>emap 2011-11-07: Not very clear.</remark>
   </para>
  </sect1>
  <sect1 id="mixinfrulesclasses">
   <title>Mixing Rules and Classes</title>

   <para>
    It is possible to mix rules and classes during an auto-installation
    session. For example you can identify a system using rules which contain
    class definitions in them. The process is described in the figure
    <quote><xref linkend="rulesflow"/></quote>.
   </para>

   <para>
    After retrieving the rules and merging them, the generated control file
    is parsed and checked for class definitions. If classes are defined,
    then the class files are retrieved from the original repository and a
    new merge process is initiated.
   </para>
  </sect1>
  <sect1 id="merging">
   <title>The Merging of Rules and Classes</title>

   <para>
    With classes and with rules, multiple XML files get merged into one
    resulting XML file. This process of merging is often confusing for
    people, because it behaves different than one would expect. First of all
    it is important to note that the names of the top sections in the merged
    XML files need to be in alphabetical order for the merge to succeed.
   </para>

   <para>
    For example, the following two XML parts should be merged:
   </para>

<screen>&lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
        &lt;partitions config:type="list"&gt;
            &lt;partition&gt;
                &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
                &lt;format config:type="boolean"&gt;true&lt;/format&gt;
                &lt;mount&gt;swap&lt;/mount&gt;
                &lt;partition_id config:type="integer"&gt;130&lt;/partition_id&gt;
                &lt;size&gt;2000mb&lt;/size&gt;
            &lt;/partition&gt;
            &lt;partition&gt;
                &lt;filesystem config:type="symbol"&gt;xfs&lt;/filesystem&gt;
                &lt;partition_type&gt;primary&lt;/partition_type&gt;
                &lt;size&gt;4Gb&lt;/size&gt;
                &lt;mount&gt;/data&lt;/mount&gt;
            &lt;/partition&gt;
        &lt;/partitions&gt;
    &lt;/drive&gt;
&lt;/partitioning&gt;</screen>

<screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;initialize config:type="boolean"&gt;false&lt;/initialize&gt;
    &lt;partitions config:type="list"&gt;
         &lt;partition&gt;
           &lt;format config:type="boolean"&gt;true&lt;/format&gt;
           &lt;filesystem config:type="symbol"&gt;xfs&lt;/filesystem&gt;
           &lt;mount&gt;/&lt;/mount&gt;
           &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
           &lt;partition_type&gt;primary&lt;/partition_type&gt;
           &lt;size&gt;max&lt;/size&gt;
         &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>

   <para>
    You might expect the profile to contain 3 partitions. This is not the
    case. You'll end up with two partitions and the first partition is a
    mixup of the swap and the root partition. Settings configured in both
    partitions, like <emphasis>mount</emphasis> or
    <emphasis>size</emphasis>, will be used from the second file. Settings
    that only exist in the first or second partition, will be copied to the
    merged partition too.
    <remark>emap 2011-11-07: A little confusing, why not put the merged file here.</remark>
   </para>

   <para>
    In this example, you do not want a second <emphasis>drive</emphasis>.
    The two drives should be merged into one. With regard to partitions,
    three separate ones should be defined.
   </para>

   <note>
    <title>Workaround for SLES9/SL 10.0 and earlier</title>
    <para>
     The following workaround only works for SLES9/SL 10.0 and earlier
     versions.
    </para>
   </note>

   <para>
    The following method is not officially supported by AutoYaST. For each
    partition in one file, add an attribute to the partition:
   </para>

<screen>&lt;partition dontmerge="1"&gt;
...
&lt;/partitions&gt;</screen>

   <para>
    Because of the new attribute, the merge script will not detect the
    partitions as the same element type. If you have more files, you may
    need to add more attributes like <emphasis>dontmerge="2"</emphasis>,
    etc.
   </para>

   <note>
    <title>Solution for SLES 10/SL 10.1 and later</title>
    <para>
     The following method solves the merging problem for SLES10, SUSE Linux
     10.1 and later versions.
    </para>
   </note>

   <para>
    Use the <emphasis>dont_merge</emphasis> element in the rules or class
    file:
   </para>

<screen>&lt;classes config:type="list"&gt;
    &lt;class&gt;
        &lt;class_name&gt;swap&lt;/class_name&gt;
        &lt;configuration&gt;largeswap.xml&lt;/configuration&gt;
        &lt;dont_merge config:type="list"&gt;
            &lt;element&gt;partition&lt;/element&gt;
        &lt;/dont_merge&gt;
    &lt;/class&gt;
&lt;/classes&gt;</screen>

<screen>&lt;rule&gt;
    &lt;board_vendor&gt;
        &lt;match&gt;ntel&lt;/match&gt;
        &lt;match_type&gt;regex&lt;/match_type&gt;
    &lt;/board_vendor&gt;
    &lt;result&gt;
        &lt;profile&gt;classes/largeswap.xml&lt;/profile&gt;
        &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
        &lt;dont_merge config:type="list"&gt;
          &lt;element&gt;partition&lt;/element&gt;
        &lt;/dont_merge&gt;
    &lt;/result&gt;
    &lt;board_vendor&gt;
        &lt;match&gt;PowerEdge [12]850&lt;/match&gt;
        &lt;match_type&gt;regex&lt;/match_type&gt;
    &lt;/board_vendor&gt;
    &lt;result&gt;
        &lt;profile&gt;classes/smallswap.xml&lt;/profile&gt;
        &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
        &lt;dont_merge config:type="list"&gt;
          &lt;element&gt;partition&lt;/element&gt;
        &lt;/dont_merge&gt;
    &lt;/result&gt;
&lt;/rule&gt;</screen>
  </sect1>
 </chapter>
<!--
    Local Variables:
    mode: xml
    sgml-parent-document: ("autoyast2.xml" "book" "chapter")
    End:
-->
 <chapter id="Invoking">
  <title>The Auto-Installation Process</title>
  <para/>
  <sect1 id="Installation-process">
   <title>Introduction</title>

   <para>
    After the system has booted into an automatic installation and the
    control file has been retrieved, YaST configures the system according to
    the information provided in the control file. All configuration settings
    are summarized in a window that is shown by default and should be
    deactivated if a fully automatic installation is needed.
   </para>

   <para>
    By the time YaST displays the summary of the configuration, YaST has
    only probed hardware and prepared the system for auto-installation.
    Nothing has been changed in the system yet. In case of any error, you
    can still abort the process.
   </para>

   <para>
    A system should be automatically installable without the need to have
    any graphic adaptor or monitor. Having a monitor attached to the client
    machine is nevertheless recommended so you can supervise the process and
    to get feedback in case of errors. Choose between the graphical (Qt or
    GTK)
    <remark>emap 2011-11-07: Should this read 'graphical' or 'X11'?</remark>
    <remark>ke 2011-11-09: I added gtk.</remark>
    and the text-based Ncurses interfaces. For headless clients, system
    messages can be monitored using the serial console.
   </para>

   <sect2 id="Installation-Interface-X11">
    <title>X11 Interface (graphical)</title>
    <para>
     This is the default interface while auto-installing. No special
     variables are required to activate it.
    </para>
   </sect2>

   <sect2 id="Installation-Interface-SerialConsole">
    <title>Serial console</title>
    <para>
     Start installing a system using the serial console by adding the
     keyword "console" (i.e. console=ttyS0) to the command line of the
     kernel. This starts linuxrc in console mode and later YaST in serial
     console mode.
    </para>
   </sect2>

   <sect2 id="Installation-Interface-Ncurses">
    <title>Text-based YaST Installation</title>
    <para>
     This option can also be activated on the command line. This will start
     YaST2 in <emphasis>Ncurses</emphasis> mode. To start YaST in text mode,
     add <emphasis>textmode=1</emphasis> on the command line.
    </para>
    <para>
     Starting YaST in text mode is recommended when installing a client with
     less than 64 MB or when X11 is not being configured at all, especially
     on headless machines.
    </para>
   </sect2>
  </sect1>
  <sect1 id="bootmedium">
   <title>Choosing the Right Boot Medium</title>

   <para>
    There are different methods for booting the client. The computer can
    boot from its network interface card (NIC) to receive the boot images
    via <phrase role="acronym">DHCP</phrase> or TFTP. Alternatively a
    suitable kernel and initrd image can be loaded from a floppy or a
    bootable CD-ROM.
   </para>

   <sect2>
    <title>Booting from a floppy</title>
    <para>
     For testing/rescue purposes or because the NIC does not have a PROM or
     PXE you can build a boot floppy to use with AutoYaST. Using a floppy to
     initiate an auto-install process is limited due to the size of the data
     a floppy can hold. However, it is still possible to use floppies when
     auto-installing a single, disconnected machine.
    </para>
    <para>
     Floppies can also store the control file, especially when using the
     original <emphasis>SuSE</emphasis> CD-ROMs for a single, disconnected
     machine. Via the kernel command line, you can specify the location of
     the control file on the floppy.
    </para>
    <remark>emap 2011-11-07: Would people still use floppies these days? I'd expect USB sticks to be a lot more common.</remark>
    <para>
     Even without specifying any command line options, it is still possible
     to initiate the auto-install process by placing a control file on a
     floppy with the pre-defined file name
     <filename>autoinst.xml</filename>. YaST will check for
     <filename>autoinst.xml</filename> upon start-up and if it was found it
     will switch from interactive to automated installation.
    </para>
   </sect2>

   <sect2>
    <title>Booting from CD-ROM</title>
    <para>
     You can use the original <emphasis>SuSE</emphasis> CD-ROMs in
     combination with other media. For example, the control file can be
     provided via a floppy or a specified location on the network.
    </para>
    <para>
     Alternatively, create a customized CD-ROM that holds only the package
     you need
     <remark>emap 2011-11-07: Why not name the
	package?</remark>
     and the control file. If you need to change the configuration, you'll
     have to create a new CD-ROM.
    </para>
   </sect2>

   <sect2>
    <title>Booting via PXE over the network</title>
    <para>
     Booting via PXE requires a DHCP and a TFTP server in your network. The
     computer will boot then without a physical media like a boot floppy or
     CDROM.
    </para>
    <para>
     Here is an example of a
     <filename>/srv/tftp/pxelinux.cfg/default</filename> file:
    </para>
    <remark>emap 2011-11-07: Update the example to SLES11?</remark>
<screen>default SLES9

# install SLES9
label SLES9
  kernel linux_sles9
    append initrd=initrd_sles9 vga=0x0314 install=.... autoyast=... language=de_DE

# boot harddisc
label hd·
  LOCALBOOT 0</screen>
    <para>
     We recommended you add the vga=... parameter with a valid value for
     graphical installations, to trigger an installation with the frame
     buffer device instead of the vesa driver or ncurses mode.
    </para>
    <para>
     Here is as an example of a <filename>/etc/dhcp.conf</filename> file:
    </para>
<screen>option domain-name-servers 192.168.66.1;
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none; ddns-updates off;
log-facility local7;
option grub-menufile code 150 = text;
option grub-menufile "(nd)/menu.lst";·
subnet 192.168.66.0 netmask 255.255.255.0 {
        range 192.168.66.100 192.168.66.200;
        # PXE related stuff ...
        #
        # "next-server" defines the TFTP server which will·
        # serve the pxelinux image to the PXE clients.
        next-server 192.168.66.1;
        allow booting;
        allow bootp;
        option routers 192.168.66.1; # default gateway

        #
        # "filename" specifies the pxelinux image on the TFTP server·
        # which will be served to the PXE clients.
        # The configured TFTP server on 192.168.100.1 runs in a·
        # "change-root jail" to /srv/tftpboot
        filename "pxelinux.0";
}</screen>
    <para>
     A problem you might run into if you do installation via PXE is that the
     installation will run into an endless loop, because after the first
     reboot, the machine is doing PXE boot again and restarts the
     installation instead of booting from hard disk for the second stage of
     the installation.
    </para>
    <para>
     This problem can be solved in different ways. One way is to use an http
     server to provide the AutoYaST profile. And, instead of a static
     profile, run a CGI script on the Web server that provides the profile
     and changes the TFTP server configuration for your target host. Then
     the next PXE boot of the machine will be from hard disk by default.
    </para>
    <para>
     Another way is to use AutoYaST to upload a new PXE boot configuration
     for the target host via the profile:
    </para>
<screen>&lt;pxe&gt;
       &lt;pxe_localboot config:type="boolean"&gt;true&lt;/pxe_localboot&gt;
       &lt;pxelinux-config&gt;
DEFAULT linux
  LABEL linux
  localboot 0


       &lt;/pxelinux-config&gt;
       &lt;tftp-server&gt;192.168.66.1&lt;/tftp-server&gt;
       &lt;pxelinux-dir&gt;/pxelinux.cfg&lt;/pxelinux-dir&gt;
       &lt;filename&gt;__MAC__&lt;/filename&gt;   &lt;!-- since openSUSE 11.2, not SLES11 --&gt;
     &lt;/pxe&gt;
</screen>
    <para>
     This entry will upload a new configuration for the target host to the
     TFTP server shortly before the first reboot happens. In most
     installations the TFTP daemon runs as user "nobody". You have to make
     sure this user has write permissions to the
     <filename>pxelinux.cfg</filename> directory. So if your machine has the
     IP address "192.168.66.195", a file <filename>C0A842C3</filename> will
     be uploaded. When the machine reboots and receives the same IP address
     via DHCP, the new configuration will be used, telling the target host
     to boot from hard disk.
    </para>
    <para>
     If you want to do another auto-installation on the same machine, you
     have to remove the file from the TFTP server.
    </para>
    <para>
     Since openSUSE 11.2 (not SLES11), you can also configure the filename
     that will be uploaded. If you use the "magic" __MAC__ filename, the
     filename will be the mac address of your machine like this
     "01-08-00-27-79-49-ee". If the filename setting is missing, the IP
     address will be used for the filename.
    </para>
   </sect2>
  </sect1>
  <sect1 id="invoking-autoinst">
   <title>Invoking the Auto-Installation Process</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2>
    <title>Command Line Options</title>
    <para>
     Adding the command line variable <emphasis>autoyast</emphasis> causes
     <emphasis>linuxrc</emphasis> to start in automated mode.
     <command>linuxrc</command> searches for a configuration file,
     <remark>emap 2011-11-07: Is this the profile? Better elaborate on this config file.</remark>
     which should be distinguished from the main control file in the
     following places:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       in the root directory of the initial RAM disk used for booting the
       system,
      </para>
     </listitem>
     <listitem>
      <para>
       in the root directory of the floppy.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     The configuration file used by <command>linuxrc</command> can have the
     following keywords (for a detailed description of how
     <command>linuxrc</command> works and other keywords, see
     <xref linkend="appendix-linuxrc"/>):
    </para>
    <table>
     <title>Keywords for <command>linuxrc</command></title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Keyword
         </para>
        </entry>
        <entry>
         <para>
          Value
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          netdevice
         </para>
        </entry>
        <entry>
         <para>
          Network device to use for network setup (for
          <phrase role="acronym">BOOTP</phrase> and
          <phrase role="acronym">DHCP</phrase> requests)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          server
         </para>
        </entry>
        <entry>
         <para>
          Server (NFS) to contact for source directory
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          serverdir
         </para>
        </entry>
        <entry>
         <para>
          Directory on NFS Server
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          hostip
         </para>
        </entry>
        <entry>
         <para>
          When empty, client sends <phrase role="acronym">BOOTP</phrase>
          request, otherwise client is configured with entered IP
          configuration.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          netmask
         </para>
        </entry>
        <entry>
         <para>
          Netmask
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          gateway
         </para>
        </entry>
        <entry>
         <para>
          Gateway
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          nameserver
         </para>
        </entry>
        <entry>
         <para>
          Name server
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          insmod
         </para>
        </entry>
        <entry>
         <para>
          Kernel modules to load
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast
         </para>
        </entry>
        <entry>
         <para>
          Location of the the control file for automatic installation, i.e.
          <emphasis>autoyast=http://192.168.2.1/profiles/</emphasis>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          install
         </para>
        </entry>
        <entry>
         <para>
          Location of the installation directory, i.e.
          <emphasis>install=nfs://192.168.2.1/CDs/</emphasis>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          instmode
         </para>
        </entry>
        <entry>
         <para>
          Installation mode, i.e. nfs, http etc. (not needed if
          <emphasis>install</emphasis> is set)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          y2confirm
         </para>
        </entry>
        <entry>
         <para>
          Even with &lt;confirm&gt;no&lt;/confirm&gt; in the profile, the
          confirm proposal comes up (available since SUSE Linux
          10.1/SLES10).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    
    <para>
     These variables and keywords will bring the system up to the point
     where YaST can take over with the main control file. Currently, the
     source medium is automatically discovered, which in some cases makes it
     possible to initiate the auto-install process without giving any
     instructions to <command>linuxrc</command>.
    </para>
    <para>
     The traditional <command>linuxrc</command> configuration file
     (<filename>info</filename>) has the function of giving the client
     enough information about the installation server and the location of
     the sources. In most cases, this file is not needed; it is however
     needed in special network environments where
     <phrase role="acronym">DHCP</phrase> and
     <phrase role="acronym">BOOTP</phrase> are not used or when special
     kernel modules have to be loaded.
    </para>
    <para>
     All linuxrc keywords can be passed to <command>linuxrc</command> using
     the kernel command line. The command line can also be set when creating
     network bootable images or it can be passed to the kernel using a
     specially configured <phrase role="acronym">DHCP</phrase> server in
     combination with Etherboot or <phrase role="acronym">PXE</phrase>.
     <remark>emap 2011-11-07:Obscure paragraph. What is set in the command line? And what is the 'it' that can be passed to the kernel? Probably not the command line itself.</remark>
    </para>
    <para>
     The command line variable <emphasis>autoyast</emphasis> can be used in
     the format described in table
     <quote><xref linkend="commandLineAutoYaST"/></quote>
    </para>
    <table id="commandLineAutoYaST">
     <title>Command Line Variables for AutoYaST</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Command line variable
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          autoyast=default
         </para>
        </entry>
        <entry>
         <para>
          Default auto-installation option.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=file://&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Looks for control file in specified path (relative to source root
          directory, i.e. <emphasis>file:///autoinst.xml</emphasis> if in
          the top directory of a CD-ROM and you did an installation from
          CD).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=device://&lt;device&gt;/&lt;file&gt;
         </para>
        </entry>
        <entry>
         <para>
          Looks for control file on a storage device (only device name
          needed without full path, i.e. /dev/sda1 is wrong, use only sda1
          instead). Since openSUSE 11.2 (not SLES11) you can omit specifying
          the device and trigger AutoYaST to search all devices
          (autoyast=device:///my.xml).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=floppy://&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Looks for control file on a floppy (useful when booting from CD).
          Since SLES10 SP1 and later the fallback is looking on USB devices.
          <remark>emap 2011-11-07: Ah, here are USB devices. I think we could use more about this instead of floppies.</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=nfs://&lt;server&gt;/&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Looks for control file on &lt;server&gt;
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=http://[user:password@]&lt;server&gt;/&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Retrieves the control file from a Web server using the HTTP
          protocol.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=https://[user:password@]&lt;server&gt;/&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Retrieves the control file from a Web server using HTTPS
          (encrypted connection) protocol (possible since SL 10.1 and
          SLES10).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=tftp://&lt;server&gt;/&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Retrieve the control file via TFTP.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=ftp://[user:password@]&lt;server&gt;/&lt;path&gt;
         </para>
        </entry>
        <entry>
         <para>
          Retrieve the control file via FTP.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=usb://&lt;path&gt; (since SLES10 SP1)
         </para>
        </entry>
        <entry>
         <para>
          Retrieve the control file from USB devices (AutoYaST will search
          all connected USB devices).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=relurl://&lt;path&gt; (since openSUSE 11.0)
         </para>
        </entry>
        <entry>
         <para>
          Retrieve the control file from the installation source
          (install=....).
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=slp (since openSUSE 11.2, not SLES 11)
         </para>
        </entry>
        <entry>
         <para>
          Query the location of the profile from an SLP server
          (service:autoyast:...). Since openSUSE 11.3 you can add a
          "description=" attribute so you can "translate" the URL into
          something more readable.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=cifs://&lt;server&gt;/&lt;path&gt; (since openSUSE 11.2,
          not SLES 11)
         </para>
        </entry>
        <entry>
         <para>
          Looks for control file on &lt;server&gt; with CIFS
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autoyast=label://&lt;label&gt;/&lt;path&gt; (since openSUSE 11.3,
          not SLES 11)
         </para>
        </entry>
        <entry>
         <para>
          Searches for control file on a device with the specified label
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    <para>
     Several scenarios for auto-installation are possible using different
     types of infrastructure and source media. The simplest way is to use
     the source media from <emphasis>SuSE</emphasis>. In that case you have
     either a DVD with all <emphasis>SuSE</emphasis> packages or a set of
     CD-ROMs. To initiate the auto-installation process however, the
     auto-installation command line variable should be entered at system
     boot-up and the control file should be accessible to YaST. The
     following list of scenarios explains how the control file can be
     supplied as well as the setup needed for the auto-installation process
     to succeed.
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Using original CD-ROMs from <emphasis>SuSE</emphasis>:
      </para>
      <para>
       To use the original CD-ROMs, you need a media with the control file.
       The control file can reside in the following locations:
      </para>
      <orderedlist>
       <listitem>
        <para>
         <emphasis>Floppy</emphasis>: Control file accessible via the
         <emphasis>autoyast=floppy</emphasis> option. YaST also searches
         upon start-up for a file named <filename>autoinst.xml</filename>. If
         such a file is found, YaST2 will switch into auto-installation mode
         even if no special command line variables were supplied. (See
         <quote><xref linkend="autoinstall-singlesystem"/></quote>.)
        </para>
       </listitem>
       <listitem>
        <para>
         <emphasis>Network</emphasis>: Control file accessible via the
         <emphasis>autoyast=nfs://..</emphasis>,
         <emphasis>autoyast=ftp://..</emphasis>,
         <emphasis>autoyast=http://..</emphasis> or
         <emphasis>autoyast=tftp://..</emphasis> options.
        </para>
       </listitem>
      </orderedlist>
     </listitem>
     <listitem>
      <para>
       Using 'self-made' CD-ROMs:
      </para>
      <para>
       In this case, you can include the control file on the CD-ROM for easy
       access (using the <emphasis>autoyast=file://</emphasis> option) or
       use one of the above mentioned methods used with the original
       <emphasis>SuSE</emphasis> CD-ROMs.
      </para>
      <para>
       When using CD-ROMs for auto-installation, it is necessary to instruct
       the installer to use the CD-ROM for installation and not try to find
       the installation files on the network. This can be accomplished by
       adding the <emphasis>instmode=cd</emphasis> option to the kernel
       command line (this can be done by adding the option to the
       isolinux.cfg file on the CD).
       <remark>emap 2011-11-07: A bit strange since an installation via network would have to be set up, first.</remark>
      </para>
     </listitem>
     <listitem>
      <para>
       Using NFS and Floppy, Network or CD-ROM for system boot-up.
       <remark>emap 2011-11-07: Isn't this listitem already covered above? </remark>
      </para>
      <para>
       This option is the most important one due to the fact that
       installations of PC farms are normally done using NFS servers and
       other network services like <phrase role="acronym">BOOTP</phrase> and
       <phrase role="acronym">DHCP</phrase>. The control file can reside in
       the following places:
      </para>
      <orderedlist>
       <listitem>
        <para>
         <emphasis>Floppy/CD-ROM</emphasis>: Control file accessible via the
         <emphasis>autoyast=file://..</emphasis> option.
        </para>
       </listitem>
       <listitem>
        <para>
         <emphasis>Network</emphasis>: Control file accessible via the
         <emphasis>autoyast=http://..</emphasis>,
         <emphasis>autoyast=ftp://..</emphasis>,
         <emphasis>autoyast=nfs://..</emphasis> or
         <emphasis>autoyast=tftp://..</emphasis> options.
        </para>
       </listitem>
      </orderedlist>
     </listitem>
    </itemizedlist>
    <note>
     <title>Disabling Network and DHCP</title>
     <para>
      To disable the network during installations where it is not needed or
      unavailable, for example when auto-installing from CD-ROMs, use the
      linuxrc option <emphasis>netsetup</emphasis> to set the network
      configuration behavior. To disable network setup use
      <emphasis>netsetup=0</emphasis>.
     </para>
    </note>
    <para>
     If <emphasis>autoyast=default</emphasis> is defined, YaST will look for
     a file named <filename>autoinst.xml</filename> in the following three
     places:
    </para>
    <orderedlist>
     <listitem>
      <para>
       the root directory of the floppy disk,
      </para>
     </listitem>
     <listitem>
      <para>
       the root directory of the installation medium,
      </para>
     </listitem>
     <listitem>
      <para>
       the root directory of the initial RAM disk used to boot the system.
      </para>
     </listitem>
    </orderedlist>
    <para>
     With all AutoYaST invocation options, excluding
     <emphasis>default</emphasis>, it is possible to specify the location of
     the control file in the following ways:
    </para>
<!-- numeration="arabic" -->
    <orderedlist>
     <listitem>
      <para>
       Specify the exact location of the control file:
      </para>
<screen>autoyast=http://192.168.1.1/control-files/client01.xml</screen>
     </listitem>
     <listitem>
      <para>
       Specify a directory where several control files are located:
      </para>
<screen>autoyast=http://192.168.1.1/control-files/</screen>
      <para>
       In this case the relevant control file is retrieved using the hex
       digit representation of the IP as described below.
      </para>
     </listitem>
    </orderedlist>
    <para>
     If only the path prefix variable is defined, YaST will fetch the
     control file from the specified location in the following way:
    </para>
<!-- numeration="arabic" -->
    <orderedlist>
     <listitem>
      <para>
       First, it will search for the control file using its own IP address
       in upper case hexadecimal, e.g. <emphasis>192.0.2.91 -&gt;
       C000025B</emphasis>.
      </para>
     </listitem>
     <listitem>
      <para>
       If this file is not found, YaST will remove one hex digit and try
       again. This action is repeated until the file with the correct name
       is found. Ultimately, it will try looking for a file with the MAC
       address of the client as the file name (mac should have the following
       syntax: <emphasis>0080C8F6484C</emphasis>) and if not found a file
       named <filename>default</filename> (in lower case).
      </para>
     </listitem>
    </orderedlist>
    <para>
     As an example, for 192.0.2.91, the HTTP client will try:
    </para>
<!-- role="literallayout" -->
<screen>      
C000025B
C000025
C00002
C0000
C000
C00
C0
C
0080C8F6484C
default
    </screen>
    <para>
     in that order.
    </para>
    <para>
     To determine the hex representation of the IP address of the client,
     use the utility called <command>/usr/bin/gethostip</command> available
     with the <emphasis>syslinux</emphasis> package.
    </para>
    <example>
     <title>Determine HEX code for an IP address</title>
<screen># /usr/bin/gethostip 10.10.0.1
10.10.0.1 10.10.0.1 0A0A0001</screen>
    </example>
   </sect2>

   <sect2 id="autoinstall-singlesystem">
    <title>Auto-installing a Single System</title>
    <para>
     The easiest way to auto-install a system without any network connection
     is to use the original <emphasis>SuSE</emphasis> CD-ROMs and a floppy
     disk. You do not need to set up an installation server nor the network
     environment.
    </para>
    <para>
     Create the control file and name it <filename>autoinst.xml</filename>.
     Copy the file <filename>autoinst.xml</filename> to a floppy by either
     mounting the floppy or by using the <emphasis>mtools</emphasis>.
    </para>
<screen>mcopy autoinst.xml a:</screen>
    <remark>emap 2011-11-07: This section should be merged with the previous one on auto-install with the original CDs and floppy, with all redundant information dropped.</remark>
   </sect2>

   <sect2>
    <title>Combining linuxrc <emphasis>info</emphasis> file with YaST control file</title>
    <para>
     If you choose to pass information to <emphasis>linuxrc</emphasis> using
     the <emphasis>info</emphasis> file, it is possible to integrate the
     keywords in the XML control file. In this case the file has to be
     accessible to linuxrc and has to be named <emphasis>info</emphasis>.
    </para>
    <para>
     Linuxrc will look for a string (<emphasis>start_linuxrc_conf</emphasis>
     in the control file which represents the beginning of the file. If it
     is found, it will parse the content starting from that string and will
     finish when the string <emphasis>end_linuxrc_conf</emphasis> is found.
     The options are stored in the control file in the following way:
    </para>
    <example>
     <title>Linuxrc options in the control file</title>
<screen>....
  &lt;install&gt;
....
    &lt;init&gt;
      &lt;info_file&gt;
&lt;![CDATA[
#
# Don't remove the following line:
# start_linuxrc_conf
#
install: nfs://192.168.1.1/CDs/full-i386
textmode: 1
autoyast: file:///info

# end_linuxrc_conf
# Do not remove the above comment
#
]]&gt;

      &lt;/info_file&gt;
    &lt;/init&gt;
......
  &lt;/install&gt;
....
</screen>
    </example>
    <para>
     Note that the "autoyast" keyword must point to the same file. If it is
     on a floppy, then the protocol <emphasis>floppy</emphasis> has to be
     used. If the <emphasis>info</emphasis> file is stored in the initial
     RAM disk, the <emphasis>file</emphasis> option has to be used.
    </para>
   </sect2>
  </sect1>
  <sect1 id="System-Configuration">
   <title>System Configuration</title>

   <para>
    The system configuration during auto-installation is the most important
    part of the whole process. Customizing a system according to your
    environment and needs is what makes an auto-installation system
    attractive, not the installation part.
    <remark>emap 2011-11-07: Last sentence doesn't make sense. A system can be customized just as well via an interactive YaST installation.</remark>
   </para>

   <para>
    As you have seen in the previous chapters, almost anything can be
    configured automatically on the target system. In addition to the
    pre-defined directives, you can always use post-scripts to change other
    things in the system. Additionally you can change any system variables,
    and if required, copy complete configuration files into the target
    system.
   </para>

   <sect2>
    <title>Post-Install and System Configuration</title>
    <para>
     The post-installation and system configuration are initiated directly
     after the last package is installed on the target system and continue
     after the system has booted for the first time.
    </para>
    <para>
     Before the system is booted for the first time, AutoYaST writes all
     data collected during installation and writes the boot loader in the
     specified location. In addition to these regular tasks, AutoYaST
     executes the <emphasis>chroot-scripts</emphasis> as specified in the
     control file. Note that these scripts are executed while the system is
     not yet mounted.
    </para>
    <para>
     If a different kernel than the default is installed, a hard reboot will
     be required. A hard reboot can also be forced during auto-installation,
     independent of the installed kernel. Use the
     <emphasis>reboot</emphasis> property of the
     <emphasis>general</emphasis> resource (see
     <link linkend="CreateProfile-General">General Options</link>).
    </para>
   </sect2>

   <sect2>
    <title>System Customization</title>
    <para>
     Most of the system customization is done in the second stage of the
     installation. If you require customizations that cannot be done using
     AutoYaST resources, use post-install scripts for further modifications.
    </para>
    <para>
     You can define an unlimited number of custom scripts in the control
     file, either by editing the control file or by using the configuration
     system.
    </para>
   </sect2>
  </sect1>
 </chapter>
<!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast.xml" "book" "chapter")
       End:
      -->
 <appendix id="handlingrules">
  <title>Handling Rules</title>
  <para>
   The following figure illustrates how rules are handled and the processes
   of retrieval and merge.
  </para>
  <figure id="rulesflow">
   <title>Rules Retrieval Process</title>
   <mediaobject>
    <imageobject role="html">
     <imagedata fileref="RulesFlow.png"/>
    </imageobject>
    <imageobject role="fo">
     <imagedata fileref="RulesFlow.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </appendix>
 <appendix id="appendix-linuxrc">
  <title>Advanced Linuxrc Options</title>
  <para>
   Linuxrc is a program used for setting up the kernel for installation
   purposes. It allows the user to load modules, start an installed system,
   a rescue system or an installation via YaST.
  </para>
  <para>
   Linuxrc is designed to be as small as possible. Therefore, all needed
   programs are linked directly into one binary. So there is no need for
   shared libraries in the initdisk.
  </para>
  <note>
   <para>
    If you run Linuxrc on an installed system, it will work slightly
    differently so as not to destroy your installation. As a consequence you
    cannot test all features this way.
   </para>
  </note>
  <sect1>
   <title>Passing parameters to Linuxrc</title>

   <para>
    Unless Linuxrc is in manual mode, it will look for an
    <filename>info</filename> file in these locations: first
    <filename>/info</filename> on the floppy disk and if that does not
    exist, for <filename>/info</filename> in the initrd. After that it
    parses the kernel command line for parameters. You may change the
    <filename>info</filename> file Linuxrc reads by setting the
    <filename>info</filename> command line parameter. If you do not want
    Linuxrc to read the kernel command line (e.g. because you need to
    specify a kernel parameter that Linuxrc recognizes as well), use
    <emphasis>linuxrc=nocmdline</emphasis>.
   </para>

   <note>
    <title>Change since SUSE Linux 10.2</title>
    <para>
     The <filename>info</filename> file is no longer implicitly read. You
     have to make it explicit, like 'info=floppy:/info'.
    </para>
    <remark>emap 2011-11-07: That means the opening para is only valid for older version. Better modify.</remark>
   </note>

   <para>
    Linuxrc will always look for and parse a file
    <filename>/linuxrc.config</filename>. Use this file to change default
    values if you need to. In general, it is better to use the
    <filename>info</filename> file instead. Note that
    <filename>/linuxrc.config</filename> is read before any
    <filename>info</filename> file, even in manual mode.
   </para>
  </sect1>
  <sect1 id="info-file-format">
   <title><filename>info</filename> file format</title>

   <para>
    Lines starting with '<emphasis>#</emphasis>' are comments, valid entries
    are of the form:
   </para>

<screen>key: value</screen>

   <para>
    Note that <emphasis>value</emphasis> extends to the end of the line and
    therefore may contain spaces. <emphasis>key</emphasis> is matched case
    insensitive.
   </para>

   <para>
    You can use the same key-value pairs on the kernel command line using
    the syntax <literal>key=value</literal>. Lines that do not have the form
    described above are ignored.
   </para>

   <para>
    The table below lists Valid keys. The given values are only examples.
   </para>

   <table>
    <title>Advanced <command>linuxrc</command> keywords</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         Keyword/Value
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Language: de_DE
        </para>
       </entry>
       <entry>
        <para>
         set the language
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Keytable: de-lat1-nd
        </para>
       </entry>
       <entry>
        <para>
         load this keytable
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Display: Color|Mono|Alt
        </para>
       </entry>
       <entry>
        <para>
         set the menu color scheme
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Install: nfs://server/install/8.0-i386
        </para>
       </entry>
       <entry>
        <para>
         install via NFS from <emphasis>server</emphasis> (note: you can
         give username, password etc. in the URL, too)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         InstMode: cd|hd|nfs|smb|ftp|http|tftp
        </para>
       </entry>
       <entry>
        <para>
         set installation mode
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         HostIP: 10.10.0.2
        </para>
       </entry>
       <entry>
        <para>
         the client ip address
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Netmask: 255.255.0.0
        </para>
       </entry>
       <entry>
        <para>
         network mask
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Gateway: 10.10.0.1
        </para>
       </entry>
       <entry>
        <para>
         gateway
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Server: 10.10.0.1
        </para>
       </entry>
       <entry>
        <para>
         installation server address
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Nameserver: 10.10.0.1
        </para>
       </entry>
       <entry>
        <para>
         nameserver
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Proxy: 10.10.0.1
        </para>
       </entry>
       <entry>
        <para>
         proxy (either ftp or http)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         ProxyPort: 10.10.0.1
        </para>
       </entry>
       <entry>
        <para>
         proxy port
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Partition: hda1
        </para>
       </entry>
       <entry>
        <para>
         partition with install sources for hard disk install
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Serverdir: /install/8.0-i386
        </para>
       </entry>
       <entry>
        <para>
         base directory of the installation sources
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Netdevice: eth0
        </para>
       </entry>
       <entry>
        <para>
         network interface to use
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         BOOTPWait: 5
        </para>
       </entry>
       <entry>
        <para>
         sleep 5 seconds between network activation and starting bootp
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         BOOTPTimeout: 10
        </para>
       </entry>
       <entry>
        <para>
         10 seconds timeout for BOOTP requests
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         DHCPTimeout: 60
        </para>
       </entry>
       <entry>
        <para>
         60 seconds timeout for DHCP requests
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         TFTPTimeout: 10
        </para>
       </entry>
       <entry>
        <para>
         10 seconds timeout for TFTP connection
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         ForceRootimage: 0|1
        </para>
       </entry>
       <entry>
        <para>
         load the installation system into RAM disk
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Textmode: 0|1
        </para>
       </entry>
       <entry>
        <para>
         start YaST in text mode
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Username: name
        </para>
       </entry>
       <entry>
        <para>
         set username (e.g. for FTP install)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Password: password
        </para>
       </entry>
       <entry>
        <para>
         set password (e.g. for FTP install)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         WorkDomain: domain
        </para>
       </entry>
       <entry>
        <para>
         set work domain for SMB install
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         ForceInsmod: 0|1
        </para>
       </entry>
       <entry>
        <para>
         use '<emphasis>-f</emphasis>' option when running
         <emphasis>insmod</emphasis>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         DHCP: 0|1
        </para>
       </entry>
       <entry>
        <para>
         start DHCP daemon <emphasis>now</emphasis>, but see
         <emphasis>UseDHCP</emphasis>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         UseDHCP: 0|1
        </para>
       </entry>
       <entry>
        <para>
         use DHCP instead of BOOTP (DHCP is default)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         vlan: <replaceable>VLANID</replaceable>
        </para>
       </entry>
       <entry>
        <para>
         set a <replaceable>VLANID</replaceable> to enable 802.1q tagged VLAN
	 support
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         MemLimit: 10000
        </para>
       </entry>
       <entry>
        <para>
         ask for swap if free memory drops below 10000 kB
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         MemYaST: 20000
        </para>
       </entry>
       <entry>
        <para>
         run YaST in text mode if free memory is below 20000 kB
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         MemYaSTText: 10000
        </para>
       </entry>
       <entry>
        <para>
         ask for swap before starting YaST if free memory is below 10000 kB
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         MemModules: 20000
        </para>
       </entry>
       <entry>
        <para>
         delete all modules before starting YaST if free memory is below
         20000 kB
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         MemLoadImage: 50000
        </para>
       </entry>
       <entry>
        <para>
         load installation system into RAM disk if free memory is above 50000
         kB
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Manual: 0|1
        </para>
       </entry>
       <entry>
        <para>
         start Linuxrc in manual mode
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         NoPCMCIA: 0|1
        </para>
       </entry>
       <entry>
        <para>
         do not start card manager
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Domain: zap.de
        </para>
       </entry>
       <entry>
        <para>
         set domain name (used for name server lookups)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         RootImage: /suse/images/root
        </para>
       </entry>
       <entry>
        <para>
         installation system image
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         RescueImage: /suse/images/rescue
        </para>
       </entry>
       <entry>
        <para>
         rescue system image
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         InstallDir: /suse/inst-sys
        </para>
       </entry>
       <entry>
        <para>
         installation system
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Rescue: 1|nfs://server/dir
        </para>
       </entry>
       <entry>
        <para>
         load rescue system; the URL variant specifies the location of the
         rescue image explicitly
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         AutoYaST: ftp://autoyastfile
        </para>
       </entry>
       <entry>
        <para>
         location of autoinstall file; activates autoinstall mode
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         VNC: 0|1
        </para>
       </entry>
       <entry>
        <para>
         setup VNC server
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         VNCPassword: password
        </para>
       </entry>
       <entry>
        <para>
         sets VNC server password
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         UseSSH: 0|1
        </para>
       </entry>
       <entry>
        <para>
         setup SSH server
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         SSHPassword: password
        </para>
       </entry>
       <entry>
        <para>
         sets SSH server password (this will not be the final root
         password!)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         AddSwap: 0|3|/dev/hda5
        </para>
       </entry>
       <entry>
        <para>
         if 0, never ask for swap; if the argument is a positive number
         <emphasis>n</emphasis>, activate the <emphasis>n</emphasis>'th swap
         partition; if the argument is a partition name, activate this swap
         partition
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Exec: command
        </para>
       </entry>
       <entry>
        <para>
         run <emphasis>command</emphasis>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         USBWait: 4
        </para>
       </entry>
       <entry>
        <para>
         wait 4 seconds after loading USB modules
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Insmod: module params
        </para>
       </entry>
       <entry>
        <para>
         load this module
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Loghost: 10.10.0.22
        </para>
       </entry>
       <entry>
        <para>
         Enable remove logging via syslog
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         y2confirm
        </para>
       </entry>
       <entry>
        <para>
         overrides the confirm parameter in a profile and requests
         confirmation of installation proposal (available since SUSE Linux
         10.1/SLES10)
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>
  <sect1>
   <title>Advanced Network Setup</title>

   <para>
    The <emphasis>netsetup</emphasis> keyword allows advanced network
    configurations and enables dialogs to setup the network where required.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      netsetup=1
     </para>
     <para>
      the normal network setup questions
     </para>
    </listitem>
    <listitem>
     <para>
      netsetup=xxx,yyy
     </para>
     <para>
      only xxx and yyy
     </para>
    </listitem>
    <listitem>
     <para>
      netsetup=+xxx,-yyy
     </para>
     <para>
      default, additionally xxx, but not yyy
     </para>
    </listitem>
   </itemizedlist>

   <para>
    <emphasis>netsetup</emphasis> can have the following values: dhcp,
    hostip, gateway, netmask, nameserver. nameserverN asks for N nameservers
    (max. 4).
   </para>

   <para>
    For example, the following can be entered on the command line:
   </para>

<screen>netsetup=-dhcp,+nameserver3</screen>
  </sect1>
 </appendix>
</book>
