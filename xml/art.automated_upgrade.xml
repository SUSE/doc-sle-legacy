<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>
<!DOCTYPE article PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
                      "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<?provo dirname="autoupgrade/"?>
<article id="art.update.auto" lang="en">
 <?suse-quickstart columns="no" color="novell" version="2"?>
<!--
    version="1" color="suse" columns="2"
-->
 <title>Automated Upgrade from &sls; 10 SP3 to 11 SP1</title>
 <subtitle>&productname; &productnumber;</subtitle>
 <articleinfo>
  <productnumber>&productnumber;</productnumber><productname>&productname;</productname>
 </articleinfo>
 <abstract>
  <para>
  The following procedure is a way to do a mass upgrade unattended from
  &sls;&nbsp;10 SP3 to &sls;&nbsp;11 SP1.  Several preparation steps are needed
  to create a suitable AutoYaST profile.  AutoYaST finally will execute
  the upgrade process.
 </para>
 </abstract>
 <sect1 id="sec.update.auto.prep">
  <title>Preparing and Applying the Driver Update Disk (DUD)</title>

  <para>
   The <systemitem>unattended_upgrade_dud</systemitem> package contains
   the Driver Update Disk (DUD); when installed, find it at
   <filename>/var/adm/unattended_migration.dud</filename>. This file
   contains all changes, which are needed for the unattended upgrade
   workflow. Install the <systemitem>unattended_upgrade_dud</systemitem>
   package to get access to the DUD. You do not need to install it on
   all the machines, which you intend to upgrade.
  </para>
  
  <para>You can use the DUD as follows, alternatively:</para>

  <sect2 id="update.auto.prep.mod">
     <title>
      Modify Contents of the Installation Source (Repository)</title>

       <para>
        Applicable on: &x86;, x86_64, &zseries;
       </para>
       <para>
        Append the DUD to the end of the installation
        <systemitem>initrd</systemitem>. The installation
        <systemitem>initrd</systemitem> is located at
        <filename>/boot/<replaceable>architecture</replaceable>/loader/initrd</filename>
        on the first DVD.  Either use an ISO editor to update the ISO
        image or modify the <systemitem>initrd</systemitem> in your
        network installation environment. To adapt the
        <systemitem>initrd</systemitem>, run (use the correct path for
        your installation <systemitem>initrd</systemitem>):
       </para>

       <screen
           >cat /var/adm/unattended_migration.dud >><replaceable>/path/to/your/installation/initrd</replaceable></screen>

       <warning>
        <title>Modified <systemitem>initrd</systemitem> Runs Unattended
        Upgrade Automatically</title>
        <para>Such an updated installation
        <systemitem>initrd</systemitem> will automatically run the
        unattended upgrade and will not be capable of doing any other
        method of upgrade or (auto)installation.
       </para>
       </warning>
  </sect2>

     <sect2 id="update.auto.prep.kpara">
      <title>Provide an Additional Kernel Parameter</title>

       <para>
        Applicable on: &x86;, x86_64, &ppc;, &ipf; &zseries;
       </para>
       <para>
        This way, there is no need to modify the installation source at
        all.  You just must add an additional kernel parameter, which
        will point linuxrc to the DUD.  At the boot prompt or in PXE
        boot menu add (replace the URI with correct one in your network
        infrastructure):
       </para>
       <screen
>dud=<replaceable>ftp://host/directory/dud.dud</replaceable></screen>

       <para>
        On &zseries;, you must add the parameters to the PARM file; proceed
        the same way as you do when performing an &ay;-driven
        installation.
       </para>

       <note>
        <para>
         You may be asked to confirm the DUD, if it is comming from an
         unsafe installation source (repository).  You can add the
         <literal>insecure=1</literal> boot parameter to the
         installation kernel to disable all cryptographical checking
         normally done by Linuxrc.  For more information about Linuxrc,
         see <ulink url="http://en.opensuse.org/SDB:Linuxrc"/>.
        </para>
       </note>
     </sect2>

<!--
     <sect2 id="update.auto.prep.parm">
      <title>Update the PARM File</title>

       <para>Applicable on: &zseries;</para>
       <para>
        Update the PARM file for installation booting in a way that it
        establishes up the network connection and applies the DUD.
       </para>
     </sect2>
-->
 </sect1>

 <sect1>
  <title>GRUB Menu Section for Booting into the Upgrade</title>
  <para>
An alternate way to boot the system is to create an additional section
in the GRUB menu (similar for other architectures), which starts the
installation.  The following example assumes that there is a separate
<filename>/boot</filename> partition, which is referred in GRUB as
<literal>(hd0,0)</literal>:
  </para>

  <screen
>title Upgrade
    root (hd0,0)
    kernel /upgrade/vmlinuz install=<replaceable>inst_source_url</replaceable> vga=0x314
    initrd /upgrade/initrd
  </screen>

  <para>The above example assumes that the installation kernel and the
  updated <systemitem>initrd</systemitem> (see <xref
  linkend="update.auto.prep.mod"/>) are located in the
  <filename>/boot/upgrade</filename> directory. If the
  <systemitem>initrd</systemitem> is not updated, just append the
  <literal>dud=</literal> parameter.  On &zseries;, you must add the
  parameters to the PARM file&mdash;proceed the same way as you do
  when performing an &ay;-driven installation.
  </para>
 </sect1>

 <sect1 id="sec.update.auto.prep_autoyast">
  <title>Preparing the &ay; Profile</title>
  <para>
The &ay; profile for the automated upgrade uses the same file format as
the &ay; installation.  <phrase os="sled;sles">For more information
about &ay;, see 
the Deployment Guide and the
&ay; Guide<!-- <ulink
url="http://www.suse.de/~ug/autoyast_doc/index.html"/>-->.</phrase>
  </para>

  <para>However, for obvious reasons, there are some parts of the system
  (e.g., partitioning) that do not make sense to be configured during the
  upgrade.  On the other hand, it is useful to set upgrade-specific
  options by means of the &ay; profile.
  </para>

  <sect2>
   <title>Upgrade</title>
   <para>The upgrade options define the behavior of the dependency
   solver during upgrade:
   </para>

   <screen><![CDATA[<upgrade>
  <only_installed_packages
    config:type="boolean">false</only_installed_packages>
  <stop_on_solver_conflict
    config:type="boolean">true</stop_on_solver_conflict>
</upgrade>]]></screen>

   <variablelist>
    <varlistentry>
    <term><literal>only_installed_packages</literal></term>
    <listitem>
     <para>Set to <literal>true</literal> for package-based upgrades
     (recommended for upgrading to the next service pack of the same
     product) or <literal>false</literal> for pattern-based upgrades
     (recommended for an upgrade between versions of a product,
     e.g. from SLES10 to SLES11).</para>
    </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>stop_on_solver_conflict</literal></term>
     <listitem>
      <para>Defines whether to show the proposal in case of failure to
      resolve package dependencies interactively (recommended to be set
      to <literal>true</literal>, but this could result in an
      interactive process, during which the user must to resolve the
      conflicts manually.</para>
     </listitem>
    </varlistentry>
   </variablelist>

  </sect2>

  <sect2>
   <title>Software Selection</title>
   <para>The software selection options define, which components to
   select or deselect in addition to the results of the resolver:</para>

   <screen><![CDATA[<software>
  <packages config:type="list">
    <package>autoyast2-installation</package>
    <package>apparmor-profile-editor</package>
  </packages>
  <patterns config:type="list">
    <pattern>base</pattern>
  </patterns>
  <remove-packages config:type="list"/>
  <remove-patterns config:type="list"/>
</software>]]></screen>

   <para>It is especially important to set packages or patterns for
   being selected or deselected in order to resolve package conflicts
   and thus to avoid the need for interactive intervention.  Once the
   upgrade is done, the newly created
   <filename>autoupg_updated.xml</filename> file contains these packages
   and patterns plus those that were selected or deselected for any
   other reason.</para>
  </sect2>

  <sect2>
   <title>Backup Before Upgrade</title>

   <para>The backup before upgrade options match these features in the
   upgrade proposal.</para>

     <screen><![CDATA[<backup>
  <sysconfig config:type="boolean">true</sysconfig>
  <modified config:type="boolean">true</modified>
  <remove_old config:type="boolean">false</remove_old>
</backup>]]></screen>

     <variablelist>
      <varlistentry>
       <term><literal>sysconfig</literal></term>
       <listitem>
        <para>defines whether to backup sysconfig before
        upgrading.</para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><literal>modified</literal></term>
       <listitem>
        <para>defines whether to backup the modified configuration files
        before upgrading.</para>
       </listitem>
      </varlistentry>


      <varlistentry>
       <term><literal>remove_old</literal></term>
       <listitem>
        <para>defines whether to remove old backups from previous
        upgrades.</para>
       </listitem>
      </varlistentry>
     </variablelist>

  </sect2>

  <sect2>
   <title>Networking</title>

   <para>
    To assure that the network configuration is kept during upgrade, the
    following needs to be added to the &ay; profile:
   </para>

   <screen><![CDATA[<networking>
  <keep_install_network
    config:type="boolean">true</keep_install_network>
  <start_immediately
    config:type="boolean">true</start_immediately>
</networking>]]></screen>

   <para>If your system contains an add-on, which needs to be upgraded,
always include the add-on information as in the example.  After the
upgrade the system needs to be registered in order to activate the
update repositories.
<!-- FIXME: point ty ay docs? -->
See the example of the registration part in
attached autoupg.xml.</para>
  </sect2>

 </sect1>

 <sect1>
  <title>Running the Automated Upgrade</title>

  <para>
   To start the automated upgrade, you must boot the installation media
   with the DUD applied and pass the &ay; profile to it. There are two
   ways to pass the profile to the system:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Pass the profile to the kernel command line the same way as for the
     AutoYaST installation (use the
     <literal>autoyast=<replaceable>url</replaceable></literal>
     parameter.  For &zseries;, this is the only possibility.
    </para>
   </listitem>

   <listitem>
    <para>
     Before you start the upgrade, copy the profile to
     <filename>/root/autoupg.xml</filename>.  Then there is no need for
     any additional kernel parameter.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The latter approach allows you to have a single installation kernel
   command line for even different machines&mdash;just copy the
   appropriate profile into its file system.
  </para>

  <para>
   As long as you have only one &sls; system installed on your machine,
   there are no package conflicts and you did not set the profile to
   stop on the upgrade proposal, the complete process will be
   non-interactive. In case you enter the upgrade proposal, you can
   modify its settings for the upgrade.
  </para>

  <para>
   After the upgrade finishes, &yast; writes the
   <filename>/root/autoupg-updated.xml</filename> file, which contains
   the profile with applied software selection changes done in the
   proposal. This is especially useful in case of mass upgrades of
   machines with the same package selection.  This way, conflict
   resolutions from one machine can easily be applied on other machines,
   which consequently will get these conflicts resolved automatically
   and the upgrade itself will be non-interactive.
  </para>

  <para>
   If there are more &sls; systems installed on the machine, you will
   always be asked, which one to upgrade&mdash;there is no way to select it
   in advance.
  </para>
 </sect1>

 <sect1>
  <title>Second Stage of the Upgrade</title>

  <para>
   The automated upgrade by default does not perform configuration
   changes during the second stage of the upgrade. The only exception is
   network configuration, which needs to be set to be preserved in the
   AutoYaST upgrade profile.
  </para>

  <para>
   If configuration adjustment of some system areas is needed after the
   upgrade (e.g., configuring a new service), add the relevant sections
   to the &ay; profile for the upgrade and the configuration of the
   selected system areas will be saved during the upgrade.
  </para>

  <warning>
   <title>&ay; Supplied Configuration Replaces Exisiting Configuration</title> 
   <para>
    Be warned that existing configuration of that system area will be
    replaced and thus destroyed by the &ay; configuration.
   </para>
  </warning>

  <para>
   Normally, the only configuration adjustment, which should be present
   in the &ay; profile, is the registration of the system with
   Subscription Management Tool (SMT) or Novell Customer Center
   (NCC). If this is missing, the system will not get the update
   repository and updates will not be possible&mdash;unless configured
   later again.
  </para>
 </sect1>

 <sect1>
  <title>Limitations and Hints</title>

  <para></para>

  <sect2>
   <title>&nm; and Registration</title>

  <para>
   In case of using &nm; for managing network devices and network
   connections, network connection is not available during the second
   stage of the upgrade. This prevents the system from performing the
   registration.
  </para>
  </sect2>

  <sect2>
   <title>Cleaning Up Upgrade Setting</title>

   <para>If you do any changes in your system in order to trigger the
   upgrade process (e.g., adding a new section to the boot loader menu),
   you probably want to remove it after the upgrade is done.</para>

   <para>
    <!-- was:
    http://www.suse.de/~ug/autoyast_doc/createprofile.scripts.html -->
    You can do it automatically with a post-installation script.  Find
    an example in the &ay; documentation at <ulink
    url="http://www.suse.com/doc/sles11/book_autoyast/data/createprofile_scripts.html"/>.
    A sample script for cleaning up GRUB's <filename>menu.lst</filename> is
    included in the sample <filename>autoupg.xml</filename> file. Make
    sure that the script matches your particular setup and that it does
    not remove more than you actually want!
   </para>
  </sect2>

  <sect2>
   <title>For More Information</title>

   <itemizedlist>
    <listitem>
     <para>
      Update Media How-To:
      <ulink url="http://ftp.suse.com/pub/people/hvogel/Update-Media-HOWTO/index.html"/>
     </para>
    </listitem>

    <listitem>
     <para>
      Linuxrc Documentation:
      <ulink url="http://en.opensuse.org/SDB:Linuxrc"/>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

 </sect1>

</article>
