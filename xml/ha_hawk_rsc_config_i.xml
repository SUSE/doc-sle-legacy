<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE sect1
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:id="sec-ha-config-hawk-rsc">
 <title>Configuring Cluster Resources</title>
 <para>
  As a cluster administrator, you need to create cluster resources for every
  resource or application you run on servers in your cluster. Cluster resources
  can include Web sites, mail servers, databases, file systems, virtual
  machines, and any other server-based applications or services you want to
  make available to users at all times.
 </para>
 <para>
  For an overview of the resource types you can create, refer to
  <xref linkend="sec-ha-config-basics-resources-types"/>. Apart from the basic
  specification of a resource (ID, class, provider, and type), you can add or
  modify the following parameters during or after creation of a resource:
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    <literal>Instance attributes (parameters)</literal> determine which
    instance of a service the resource controls. For more information, refer to
    <xref linkend="sec-ha-config-basics-inst-attr"/>.
   </para>
   <para>
    When creating a resource, &hawk; automatically shows any required
    parameters. Edit them to get a valid resource configuration.
   </para>
  </listitem>
  <listitem>
   <para>
    <literal>Meta attributes</literal> tell the CRM how to treat a specific
    resource. For more information, refer to
    <xref linkend="sec-ha-config-basics-meta-attr"/>.
   </para>
   <para>
    When creating a resource, &hawk; automatically lists the important meta
    attributes for that resource (for example, the
    <literal>target-role</literal> attribute that defines the initial state of
    a resource. By default, it is set to <literal>Stopped</literal>, so the
    resource will not start immediately).
   </para>
  </listitem>
  <listitem>
   <para>
    <literal>Operations</literal> are needed for resource monitoring. For more
    information, refer to <xref linkend="sec-ha-config-basics-operations"/>.
   </para>
   <para>
    When creating a resource, &hawk; displays the most important resource
    operations (<literal>monitor</literal>, <literal>start</literal>, and
    <literal>stop</literal>).
   </para>
  </listitem>
 </itemizedlist>
<?dbfo-need height="20em"?>
 <section xml:id="sec-ha-config-hawk-wizard">
  <title>Configuring Resources with the Setup Wizard</title>
  <para>
   The &hasi; comes with a predefined set of templates for some frequently used
   cluster scenarios, for example, setting up a highly available NFS server.
   Find the predefined templates in the
   <systemitem class="resource">hawk-templates</systemitem> package. You can
   also define your own wizard templates. For detailed information, refer to
   <link xlink:href="https://github.com/ClusterLabs/hawk/blob/sle-11-sp4/doc/wizard.txt"/>.
  </para>
  <procedure xml:id="pro-ha-config-hawk-wizard">
   <title>Using the Setup Wizard</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Setup Wizard</guimenu>. The
     <guimenu>Cluster Setup Wizard</guimenu> lists the available resource
     templates. If you click an entry, &hawk; displays a short help text about
     the template.
    </para>
   </step>
   <step>
    <para>
     Select the resource set you want to configure and click
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Follow the instructions on the screen. If you need information about an
     option, click it to display a short help text in &hawk;.
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>&hawk;&mdash;Setup Wizard</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-wizard.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-wizard.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>
 <section xml:id="sec-ha-config-hawk-primitives">
  <title>Creating Simple Cluster Resources</title>
  <para>
   To create the most basic type of resource, proceed as follows:
  </para>
  <procedure xml:id="pro-ha-config-hawk-primitives">
   <title>Adding Primitive Resources</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources. It lists any resources that are already defined.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Primitive</guimenu> category and click the plus icon.
    </para>
   </step>
   <step>
    <para>
     Specify the resource:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Enter a unique <guimenu>Resource ID</guimenu>.
      </para>
     </step>
     <step xml:id="step-ha-config-hawk-primitives-start">
      <para>
       From the <guimenu>Class</guimenu> list, select the resource agent class
       you want to use for the resource: <guimenu>lsb</guimenu>,
       <guimenu>ocf</guimenu>, <guimenu>service</guimenu>, or
       <guimenu>stonith</guimenu>. For more information, see
       <xref linkend="sec-ha-config-basics-raclasses"/>.
      </para>
     </step>
     <step>
      <para>
       If you selected <guimenu>ocf</guimenu> as class, specify the
       <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
       specification allows multiple vendors to supply the same resource agent.
      </para>
     </step>
     <step>
      <para>
       From the <guimenu>Type</guimenu> list, select the resource agent you
       want to use (for example, <guimenu>IPaddr</guimenu> or
       <guimenu>Filesystem</guimenu>). A short description for this resource
       agent is displayed.
      </para>
      <para>
       The selection you get in the <guimenu>Type</guimenu> list depends on the
       <guimenu>Class</guimenu> (and for OCF resources also on the
       <guimenu>Provider</guimenu>) you have chosen.
      </para>
     </step>
    </substeps>
   </step>
   <step xml:id="step-ha-config-hawk-parameters">
    <para>
     &hawk; automatically shows any required parameters for the resource plus
     an empty drop-down list that you can use to specify an additional
     parameter.
    </para>
    <para>
     To define <guimenu>Parameters</guimenu> (instance attributes) for the
     resource:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Enter values for each required parameter. A short help text is displayed
       as soon as you click the text box next to a parameter.
      </para>
     </step>
     <step>
      <para>
       To completely remove a parameter, click the minus icon next to the
       parameter.
      </para>
     </step>
     <step>
      <para>
       To add another parameter, click the empty drop-down list, select a
       parameter and enter a value for it.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     &hawk; automatically shows the most important resource
     <guimenu>Operations</guimenu> and proposes default values. If you do not
     modify any settings here, &hawk; will add the proposed operations and
     their default values as soon as you confirm your changes.
    </para>
    <para>
     For details on how to modify, add or remove operations, refer to
     <xref linkend="pro-ha-config-hawk-operations"/>.
    </para>
   </step>
   <step xml:id="step-ha-config-hawk-meta-attr">
    <para>
     &hawk; automatically lists the most important meta attributes for the
     resource, for example <literal>target-role</literal>.
    </para>
    <para>
     To modify or add <guimenu>Meta Attributes</guimenu>:
    </para>
    <substeps performance="required">
     <step>
      <para>
       To set a (different) value for an attribute, select one from the
       drop-down box next to the attribute or edit the value in the input
       field.
      </para>
     </step>
     <step>
      <para>
       To completely remove a meta attribute, click the minus icon next to it.
      </para>
     </step>
     <step>
      <para>
       To add another meta attribute, click the empty drop-down box and select
       an attribute. The default value for the attribute is displayed. If
       needed, change it as described above.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Click <guimenu>Create Resource</guimenu> to finish the configuration. A
     message at the top of the screen shows if the resource was successfully
     created or not.
    </para>
   </step>
  </procedure>
  <figure>
   <title>&hawk;&mdash;Primitive Resource</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-primitive-basic.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-primitive-basic.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
<!--tserong 2011-11-08:** missing functionality: one created, you can go back and 
   edit resource params, but can't rename them or change their class:provider:type (will 
   be added in future) ** taroth 2013-03-21: still not possible-->
 </section>
 <section xml:id="sec-ha-config-hawk-stonith">
  <title>Creating &stonith; Resources</title>
  <important>
   <title>No Support Without &stonith;</title>
   <para>
    A cluster without &stonith; is not supported.
   </para>
  </important>
  <para>
   By default, the global cluster option <literal>stonith-enabled</literal> is
   set to <literal>true</literal>: If no &stonith; resources have been defined,
   the cluster will refuse to start any resources. Configure one or more
   &stonith; resources to complete the &stonith; setup. While they are
   configured similar to other resources, the behavior of &stonith; resources
   is different in some respects. For details refer to
   <xref linkend="sec-ha-fencing-config"/>.
  </para>
  <procedure xml:id="pro-ha-config-hawk-stonith">
   <title>Adding a &stonith; Resource</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources and lists all defined resources.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Primitive</guimenu> category and click the plus icon.
    </para>
   </step>
   <step>
    <para>
     Specify the resource:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Enter a unique <guimenu>Resource ID</guimenu>.
      </para>
     </step>
     <step>
      <para>
       From the <guimenu>Class</guimenu> list, select the resource agent class
       <guimenu>stonith</guimenu>.
      </para>
     </step>
     <step>
      <para>
       From the <guimenu>Type</guimenu> list, select the &stonith; plug-in for
       controlling your &stonith; device. A short description for this plug-in
       is displayed.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     &hawk; automatically shows the required <guimenu>Parameters</guimenu> for
     the resource. Enter values for each parameter.
    </para>
   </step>
   <step>
    <para>
     &hawk; displays the most important resource <guimenu>Operations</guimenu>
     and proposes default values. If you do not modify any settings here,
     &hawk; will add the proposed operations and their default values as soon
     as you confirm.
    </para>
   </step>
   <step>
    <para>
     Adopt the default <guimenu>Meta Attributes</guimenu> settings if there is
     no reason to change them.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes to create the &stonith; resource.
    </para>
   </step>
  </procedure>
  <para>
   To complete your fencing configuration, add constraints, use clones or both.
   For more details, refer to <xref linkend="cha-ha-fencing"/>.
  </para>
 </section>
 <section xml:id="sec-ha-config-hawk-templates">
  <title>Using Resource Templates</title>
  <para>
   If you want to create lots of resources with similar configurations,
   defining a resource template is the easiest way. After being defined, it can
   be referenced in primitives or in certain types of constraints. For detailed
   information about function and use of resource templates, refer to
   <xref linkend="sec-ha-config-basics-constraints-templates"/>.
  </para>
  <procedure xml:id="pro-ha-config-hawk-templates-create">
   <title>Creating Resource Templates</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources plus a <guimenu>Template</guimenu> category.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Template</guimenu> category and click the plus icon.
    </para>
   </step>
   <step>
    <para>
     Enter a <guimenu>Template ID</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Specify the resource template as you would specify a primitive. Follow
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>,
     starting with
     <xref linkend="step-ha-config-hawk-primitives-start" xrefstyle="select:label"/>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create Resource</guimenu> to finish the configuration. A
     message at the top of the screen shows if the resource template was
     successfully created.
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>&hawk;&mdash;Resource Template</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-rsc-template.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-rsc-template.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <procedure xml:id="pro-ha-config-hawk-templates-use">
   <title>Referencing Resource Templates</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     To reference the newly created resource template in a primitive, follow
     these steps:
    </para>
    <substeps performance="required">
     <step>
      <para>
       In the left navigation bar, select <guimenu>Resources</guimenu>. The
       <guimenu>Resources</guimenu> screen shows categories for all types of
       resources. It lists all defined resources.
      </para>
     </step>
     <step>
      <para>
       Select the <guimenu>Primitive</guimenu> category and click the plus
       icon.
      </para>
     </step>
     <step>
      <para>
       Enter a unique <guimenu>Resource ID</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Activate <guimenu>Use Template</guimenu> and, from the drop-down list,
       select the template to reference.
      </para>
     </step>
     <step>
      <para>
       If needed, specify further <guimenu>Parameters</guimenu>,
       <guimenu>Operations</guimenu>, or <guimenu>Meta Attributes</guimenu> as
       described in <xref linkend="pro-ha-config-hawk-primitives"/>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     To reference the newly created resource template in colocational or order
     constraints, proceed as described in
     <xref linkend="pro-ha-config-hawk-constraints-collocation-order"/>.
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-config-hawk-constraints">
  <title>Configuring Resource Constraints</title>
  <para>
   After you have configured all resources, specify how the cluster should
   handle them correctly. Resource constraints let you specify on which cluster
   nodes resources can run, in which order resources will be loaded, and what
   other resources a specific resource depends on.
  </para>
  <para>
   For an overview of available types of constraints, refer to
   <xref linkend="sec-ha-config-basics-constraints-types"/>. When defining
   constraints, you also need to specify scores. For more information on scores
   and their implications in the cluster, see
   <xref linkend="sec-ha-config-basics-constraints-scores"/>.
  </para>
  <para>
   Learn how to create the different types of constraints in the following
   procedures.
  </para>
<!-- tserong 2011-11-08: ** missing functionality: in future I want to autogenerate constraint 
   IDs.  They're mostly uninteresting to humans anyway **-->
<?dbfo-need height="20em"?>
  <procedure xml:id="pro-ha-config-hawk-constraints-location">
   <title>Adding or Modifying Location Constraints</title>
   <para>
    For location constraints, specify a constraint ID, resource, score and
    node:
   </para>
<!--taroth 2011-11-14: todo: find out which constraints can also be defined
     via rules (Show Rule Editor) and explain how to do so-->
   <step xml:id="step-ha-config-hawk-constraints-start">
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Constraints</guimenu>. The
     <guimenu>Constraints</guimenu> screen shows categories for all types of
     constraints. It lists all defined constraints.
    </para>
   </step>
   <step>
    <para>
     To add a new <guimenu>Location</guimenu> constraint, click the plus icon
     in the respective category.
    </para>
    <para>
     To modify an existing constraint, click the wrench icon next to the
     constraint and select <guimenu>Edit Constraint</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter a unique <guimenu>Constraint ID</guimenu>. When modifying existing
     constraints, the ID is already defined.
    </para>
   </step>
   <step xml:id="step-ha-config-hawk-constraints-stop">
    <para>
     Select the <guimenu>Resource</guimenu> for which to define the constraint.
     The list shows the IDs of all resources that have been configured for the
     cluster.
    </para>
   </step>
   <step>
    <para>
     Set the <guimenu>Score</guimenu> for the constraint. Positive values
     indicate the resource can run on the <guimenu>Node</guimenu> you specify
     in the next step. Negative values mean it should not run on that node.
     Setting the score to <literal>INFINITY</literal> forces the resource to
     run on the node. Setting it to <literal>-INFINITY</literal> means the
     resources must not run on the node.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Node</guimenu> for the constraint.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create Constraint</guimenu> to finish the configuration. A
     message at the top of the screen shows if the constraint was successfully
     created.
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>&hawk;&mdash;Location Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <procedure xml:id="pro-ha-config-hawk-constraints-collocation-order">
   <title>Adding or Modifying Colocational or Order Constraints</title>
   <para>
    For both types of constraints specify a constraint ID and a score, then add
    resources to a dependency chain:
   </para>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Constraints</guimenu>. The
     <guimenu>Constraints</guimenu> screen shows categories for all types of
     constraints and lists all defined constraints.
    </para>
   </step>
   <step>
    <para>
     To add a new <guimenu>Colocation</guimenu> or <guimenu>Order</guimenu>
     constraint, click the plus icon in the respective category.
    </para>
    <para>
     To modify an existing constraint, click the wrench icon next to the
     constraint and select <guimenu>Edit Constraint</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter a unique <guimenu>Constraint ID</guimenu>. When modifying existing
     constraints, the ID is already defined.
    </para>
   </step>
   <step>
    <para>
     Define a <guimenu>Score</guimenu>.
    </para>
    <para>
     For colocation constraints, the score determines the location relationship
     between the resources. Positive values indicate the resources should run
     on the same node. Negative values indicate the resources should not run on
     the same node. Setting the score to <literal>INFINITY</literal> forces the
     resources to run on the same node. Setting it to
     <literal>-INFINITY</literal> means the resources must not run on the same
     node. The score will be combined with other factors to decide where to put
     the resource.
    </para>
    <para>
     For order constraints, the constraint is mandatory if the score is greater
     than zero, otherwise it is only a suggestion. The default value is
     <literal>INFINITY</literal>.
    </para>
   </step>
   <step>
    <para>
     For order constraints, you can usually keep the option
     <guimenu>Symmetrical</guimenu> enabled. This specifies that resources are
     stopped in reverse order.
    </para>
   </step>
   <step>
    <para>
     To define the resources for the constraint, follow these steps:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Select a resource from the list <guimenu>Add resource to
       constraint</guimenu>. The list shows the IDs of all resources and all
       resource templates configured for the cluster.
      </para>
     </step>
     <step>
      <para>
       To add the selected resource, click the plus icon next to the list. A
       new list appears beneath. Select the next resource from the list. As
       both colocation and order constraints define a dependency between
       resources, you need at least two resources.
      </para>
     </step>
     <step>
      <para>
       Select one of the remaining resources from the list <guimenu>Add
       resource to constraint</guimenu>. Click the plus icon to add the
       resource.
      </para>
      <para>
       Now you have two resources in a dependency chain.
      </para>
      <para>
       If you have defined an order constraint, the topmost resource will start
       first, then the second etc. Usually the resources will be stopped in
       reverse order.
      </para>
      <para>
       However, if you have defined a colocation constraint, the arrow icons
       between the resources reflect their dependency, but
       <emphasis>not</emphasis> their start order. As the topmost resource
       depends on the next resource and so on, the cluster will first decide
       where to put the last resource, then place the depending ones based on
       that decision. If the constraint cannot be satisﬁed, the cluster may
       decide not to allow the dependent resource to run.
      </para>
     </step>
     <step>
      <para>
       Add as many resources as needed for your colocation or order constraint.
      </para>
     </step>
     <step>
      <para>
       If you want to swap the order of two resources, click the double arrow
       at the right hand side of the resources to swap the resources in the
       dependency chain.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     If needed, specify further parameters for each resource, like the role
     (<literal>Master</literal>, <literal>Slave</literal>,
     <literal>Started</literal>, or <literal>Stopped</literal>).
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create Constraint</guimenu> to finish the configuration. A
     message at the top of the screen shows if the constraint was successfully
     created.
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>&hawk;&mdash;Colocation Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-colloc-constraint.png" width="90%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-colloc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   As an alternative format for defining colocation or ordering constraints,
   you can use resource sets. They have the same ordering semantics as groups.
  </para>
  <procedure xml:id="pro-ha-config-hawk-constraints-sets">
   <title>Using Resource Sets for Colocation or Order Constraints</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     Define colocation or order constraints as described in
     <xref linkend="pro-ha-config-hawk-constraints-collocation-order"/>.
    </para>
   </step>
   <step>
    <para>
     When you have added the resources to the dependency chain, you can put
     them into a resource set by clicking the chain icon at the right hand
     side. A resource set is visualized by a frame around the resources
     belonging to a set.
    </para>
   </step>
   <step>
    <para>
     You can also add multiple resources to a resource set or create multiple
     resource sets.
    </para>
   </step>
   <step>
    <para>
     To extract a resource from a resource set, click the scissors icon above
     the respective resource.
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
    <para>
     The resource will be removed from the set and put back into the dependency
     chain at its original place.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes to finish the constraint configuration.
    </para>
   </step>
  </procedure>
  <para>
   For more information on configuring constraints and detailed background
   information about the basic concepts of ordering and colocation, refer to
   the documentation available at &clusterlabs-doc;:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     &paceex;, chapter <citetitle>Resource Constraints</citetitle>
    </para>
   </listitem>
   <listitem>
    <para>
     <citetitle>Colocation Explained</citetitle>
    </para>
   </listitem>
   <listitem>
    <para>
     <citetitle>Ordering Explained</citetitle>
    </para>
   </listitem>
  </itemizedlist>
  <procedure xml:id="pro-ha-config-hawk-constraints-remove">
   <title>Removing Constraints</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Constraints</guimenu>. The
     <guimenu>Constraints</guimenu> screen shows categories for all types of
     constraints and lists all defined constraints.
    </para>
   </step>
   <step>
    <para>
     Click the wrench icon next to a constraint and select <guimenu>Remove
     Constraint</guimenu>.
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-config-hawk-failover">
  <title>Specifying Resource Failover Nodes</title>
  <para>
   A resource will be automatically restarted if it fails. If that cannot be
   achieved on the current node, or it fails N times on the current node, it
   will try to fail over to another node. You can define a number of failures
   for resources (a <literal>migration-threshold</literal>), after which they
   will migrate to a new node. If you have more than two nodes in your cluster,
   the node to which a particular resource fails over is chosen by the &ha;
   software.
  </para>
  <para>
   You can specify a specific node to which a resource will fail over by
   proceeding as follows:
  </para>
  <procedure xml:id="pro-ha-config-hawk-failover">
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     Configure a location constraint for the resource as described in
     <xref linkend="pro-ha-config-hawk-constraints-location"/>.
    </para>
   </step>
   <step>
    <para>
     Add the <literal>migration-threshold</literal> meta attribute to the
     resource as described in
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>,
     <xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>
     and enter a <guimenu>Value</guimenu> for the migration-threshold. The
     value should be positive and less than INFINITY.
    </para>
<!-- <informalfigure>
       <mediaobject>
       <imageobject role="fo">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="PNG"/>
       </imageobject>
       <imageobject role="html">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="PNG"/>
       </imageobject>
       </mediaobject>
       </informalfigure>-->
   </step>
   <step>
    <para>
     If you want to automatically expire the failcount for a resource, add the
     <literal>failure-timeout</literal> meta attribute to the resource as
     described in
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>,
     <xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>
     and enter a <guimenu>Value</guimenu> for the failure-timeout.
    </para>
   </step>
   <step>
    <para>
     If you want to specify additional failover nodes with preferences for a
     resource, create additional location constraints.
    </para>
   </step>
  </procedure>
  <para>
   The process flow regarding migration thresholds and failcounts is
   demonstrated in <xref linkend="ex-ha-config-basics-failover"/>.
  </para>
  <para>
   Instead of letting the failcount for a resource expire automatically, you
   can also clean up failcounts for a resource manually at any time. Refer to
   <xref linkend="sec-ha-config-hawk-cleanup"/> for details.
  </para>
 </section>
 <section xml:id="sec-ha-config-hawk-failback">
  <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
  <para>
   A resource may fail back to its original node when that node is back online
   and in the cluster. To prevent this or to specify a different node for the
   resource to fail back to, change the stickiness value of the resource. You
   can either specify the resource stickiness when creating it or afterwards.
  </para>
  <para>
   For the implications of different resource stickiness values, refer to
   <xref linkend="sec-ha-config-basics-failback"/>.
  </para>
<?dbfo-need height="20em"?>
  <procedure xml:id="pro-ha-config-hawk-stickiness">
   <title>Specifying Resource Stickiness</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     Add the <literal>resource-stickiness</literal> meta attribute to the
     resource as described in
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>,
     <xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>.
    </para>
<!--<informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>-->
   </step>
   <step>
    <para>
     Specify a value between <literal>-INFINITY</literal> and
     <literal>INFINITY</literal> for the resource-stickiness.
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-config-hawk-utilization">
  <title>Configuring Placement of Resources Based on Load Impact</title>
  <para>
   Not all resources are equal. Some, such as &xen; guests, require that the
   node hosting them meets their capacity requirements. If resources are placed
   so that their combined needs exceed the provided capacity, the performance
   of the resources diminishes or they fail.
  </para>
  <para>
   To take this into account, the &hasi; allows you to specify the following
   parameters:
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     The capacity a certain node <emphasis>provides</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     The capacity a certain resource <emphasis>requires</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     An overall strategy for placement of resources.
    </para>
   </listitem>
  </orderedlist>
  <para>
   Utilization attributes are used to configure both the resource's
   requirements and the capacity a node provides. The &hasi; now also provides
   means to detect and configure both node capacity and resource requirements
   automatically. For more details and a configuration example, refer to
   <xref linkend="sec-ha-config-basics-utilization"/>.
  </para>
  <para>
   To display a node's capacity values (defined via utilization attributes) and
   the capacity currently consumed by resources running on the node, switch to
   the <guimenu>Cluster Status</guimenu> screen in &hawk;. Select the node you
   are interested in, click the wrench icon next to the node and select
   <guimenu>Show Details</guimenu>.
  </para>
  <figure>
   <title>&hawk;&mdash;Viewing a Node's Capacity Values</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-node-utilization.png" width="60%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-node-utilization.png" width="45%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
<!--taroth 2013-03-21: setting utilization attributes for nodes or resources is
    still not possible-->
  <para>
   After you have configured the capacities your nodes provide and the
   capacities your resources require, you need to set the placement strategy in
   the global cluster options. Otherwise the capacity configurations have no
   effect. Several strategies are available to schedule the load: for example,
   you can concentrate it on as few nodes as possible, or balance it evenly
   over all available nodes. For more information, refer to
   <xref linkend="sec-ha-config-basics-utilization"/>.
  </para>
  <procedure xml:id="pro-ha-config-hawk-placement">
   <title>Setting the Placement Strategy</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Properties</guimenu>
     to view the global cluster options and their current values.
    </para>
   </step>
   <step>
    <para>
     From the <guimenu>Add new property</guimenu> drop-down list, choose
     <literal>placement-strategy</literal>.
    </para>
   </step>
   <step>
    <para>
     Depending on your requirements, set <guimenu>Placement Strategy</guimenu>
     to the appropriate value.
    </para>
   </step>
   <step>
    <para>
     Click the plus icon to add the new cluster property including its value.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes.
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-config-hawk-monitor">
  <title>Configuring Resource Monitoring</title>
  <para>
   The &hasi; can not only detect a node failure, but also when an individual
   resource on a node has failed. If you want to ensure that a resource is
   running, configure resource monitoring for it. For resource monitoring,
   specify a timeout and/or start delay value, and an interval. The interval
   tells the CRM how often it should check the resource status. You can also
   set particular parameters, such as <literal>Timeout</literal> for
   <literal>start</literal> or <literal>stop</literal> operations.
  </para>
  <procedure xml:id="pro-ha-config-hawk-operations">
   <title>Adding or Modifying Monitor Operations</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources and lists all defined resources.
    </para>
   </step>
   <step>
    <para>
     Select the resource to modify, click the wrench icon next to it and select
     <guimenu>Edit Resource</guimenu>. The resource definition is displayed.
     &hawk; automatically shows the most important resource operations
     (<literal>monitor</literal>, <literal>start</literal>,
     <literal>stop</literal>) and proposes default values.
    </para>
   </step>
   <step>
    <para>
     To change the values for an operation:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Click the pen icon next to the operation.
      </para>
     </step>
     <step>
      <para>
       In the dialog that opens, specify the following values:
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para>
         Enter a <literal>timeout</literal> value in seconds. After the
         specified timeout period, the operation will be treated as
         <literal>failed</literal>. The PE will decide what to do or execute
         what you specified in the <guimenu>On Fail</guimenu> field of the
         monitor operation.
        </para>
       </listitem>
       <listitem>
        <para>
         For monitoring operations, define the monitoring
         <literal>interval</literal> in seconds.
        </para>
       </listitem>
      </itemizedlist>
      <para>
       If needed, use the empty drop-down box at the bottom of the
       <guimenu>monitor</guimenu> dialog to add more parameters, like
       <guimenu>On Fail</guimenu> (what to do if this action fails?) or
       <guimenu>Requires</guimenu> (what conditions need to be fulfilled before
       this action occurs?).
      </para>
      <informalfigure>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-monitor-op.png" width="70%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-monitor-op.png" width="60%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step>
      <para>
       Confirm your changes to close the dialog and to return to the
       <guimenu>Edit Resource</guimenu> screen.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     To completely remove an operation, click the minus icon next to it.
    </para>
   </step>
   <step>
    <para>
     To add another operation, click the empty drop-down box and select an
     operation. A default value for the operation is displayed. If needed,
     change it by clicking the pen icon.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Apply Changes</guimenu> to finish the configuration. A
     message at the top of the screen shows if the resource was successfully
     updated or not.
    </para>
   </step>
  </procedure>
  <para>
   For the processes which take place if the resource monitor detects a
   failure, refer to <xref linkend="sec-ha-config-basics-monitoring"/>.
  </para>
  <para>
   To view resource failures, switch to the <guimenu>Cluster Status</guimenu>
   screen in &hawk; and select the resource you are interested in. Click the
   wrench icon next to the resource and select <guimenu>Show Details</guimenu>.
  </para>
 </section>
 <section xml:id="sec-ha-config-hawk-group">
  <title>Configuring a Cluster Resource Group</title>
  <para>
   Some cluster resources depend on other components or resources and require
   that each component or resource starts in a specific order and runs on the
   same server. To simplify this configuration we support the concept of
   groups.
  </para>
  <para>
   For an example of a resource group and more information about groups and
   their properties, refer to
   <xref linkend="sec-ha-config-basics-resources-advanced-groups"/>.
  </para>
  <note>
   <title>Empty Groups</title>
   <para>
    Groups must contain at least one resource, otherwise the configuration is
    not valid. In &hawk;, primitives cannot be created or modified while
    creating a group. Before adding a group, create primitives and configure
    them as desired. For details, refer to
    <xref linkend="pro-ha-config-hawk-primitives"/>.
   </para>
  </note>
<!-- tserong 2011-11-08:** missing functionality: once created, you can't rename a group or 
    change its children **-->
  <procedure xml:id="pro-ha-config-hawk-group">
   <title>Adding a Resource Group</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources and lists all defined resources.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Group</guimenu> category and click the plus icon.
    </para>
   </step>
   <step>
    <para>
     Enter a unique <guimenu>Group ID</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To define the group members, select one or multiple entries in the list of
     <guimenu>Available Primitives</guimenu> and click the &lt; icon to add
     them to the <guimenu>Group Children</guimenu> list. Any new group members
     are added to the bottom of the list. To define the order of the group
     members, you currently need to add and remove them in the order you
     desire.
    </para>
   </step>
   <step>
    <para>
     If needed, modify or add <guimenu>Meta Attributes</guimenu> as described
     in
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select: lable title nopage"/>,
     <xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create Group</guimenu> to finish the configuration. A
     message at the top of the screen shows if the group was successfully
     created.
    </para>
   </step>
  </procedure>
  <figure>
   <title>&hawk;&mdash;Resource Group</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-rsc-group.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-rsc-group.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>
 <section xml:id="sec-ha-confighawk-clone">
  <title>Configuring a Clone Resource</title>
  <para>
   If you want certain resources to run simultaneously on multiple nodes in
   your cluster, configure these resources as a clones. For example, cloning
   makes sense for resources like &stonith; and cluster file systems like
   OCFS2. You can clone any resource provided. Cloning is supported by the
   resource’s Resource Agent. Clone resources may be configured differently
   depending on which nodes they are running on.
  </para>
  <para>
   For an overview of the available types of resource clones, refer to
   <xref linkend="sec-ha-config-basics-resources-advanced-clones"/>.
  </para>
  <note>
   <title>Sub-resources for Clones</title>
   <para>
    Clones can either contain a primitive or a group as sub-resources. In
    &hawk;, sub-resources cannot be created or modified while creating a clone.
    Before adding a clone, create sub-resources and configure them as desired.
    For details, refer to <xref linkend="pro-ha-config-hawk-primitives"/> or
    <xref linkend="pro-ha-config-hawk-group"/>.
   </para>
  </note>
  <procedure xml:id="pro-ha-config-hawk-clone">
   <title>Adding or Modifying Clones</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>. The
     <guimenu>Resources</guimenu> screen shows categories for all types of
     resources and lists all defined resources.
    </para>
   </step>
   <step>
    <para>
     Select the <guimenu>Clone</guimenu> category and click the plus icon.
    </para>
   </step>
   <step>
    <para>
     Enter a unique <guimenu>Clone ID</guimenu>.
    </para>
   </step>
   <step>
    <para>
     From the <guimenu>Child Resource</guimenu> list, select the primitive or
     group to use as a sub-resource for the clone.
    </para>
   </step>
   <step>
    <para>
     If needed, modify or add <guimenu>Meta Attributes</guimenu> as described
     in
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>,
     <xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create Clone</guimenu> to finish the configuration. A
     message at the top of the screen shows if the clone was successfully
     created.
    </para>
   </step>
  </procedure>
  <figure>
   <title>&hawk;&mdash;Clone Resource</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-clone.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-clone.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>
</section>
