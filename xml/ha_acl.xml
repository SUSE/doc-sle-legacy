<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--
   * Hawk is getting an ACL editor in SLE 12 (fate#310170)
   
   taroth 2014-08-12: from fate#310170:
   
   Use fix persona or configurable persona in the GUI and CLI for 
   * Superuser (installation and configuration of cluster nodes), 
   * Administrator (configures services on existing HA nodes), 
   * Operator (can only operate on an exiting resource configuration)
   * Monitor (read only for monitoring purpose).
-->

<!--For the
documentation of this &rear; version, see the &haguide; for
&productname; 11 SP3. It is available from
&suse-onlinedoc;.-->

<chapter id="cha-ha-acl">
 <title>Access Control Lists</title>
 <abstract>
  <para>
   The cluster administration tools like &crmshell; (&crmsh;), &hawk; or the
   &hbgui; can be used by &rootuser; or any user in the group
   <systemitem
    class="groupname">haclient</systemitem>. By default,
   these users have full read/write access. To limit access or assign more
   fine-grained access rights, you can use <emphasis>Access control
   lists</emphasis> (ACLs).
  </para>

  <para>
   Access control lists consist of an ordered set of access rules. Each rule
   allows read or write access or denies access to a part of the cluster
   configuration. Rules are typically combined to produce a specific role,
   then users may be assigned to a role that matches their tasks.
  </para>
 </abstract>
 
 <note>
  <title>CIB Syntax Validation Version and ACL Differences</title>
  <para>This ACL documentation only applies if your CIB is validated with the
   CIB syntax version <literal>pacemaker-2.0</literal> or higher. For details on
   how to check this and upgrade the CIB version, see <xref linkend="note-ha-cib-upgrade"
   />. </para>
  <para>If you have upgraded from &productname; 11 SP3 and kept your former
   CIB version, refer to the <citetitle>Access Control List</citetitle> chapter
   in the &haguide; for &productname; 11 SP3. It is available from
   &suse-onlinedoc;.</para>
 </note>
 <sect1 id="sec-ha-acl-require">
  <title>Requirements and Prerequisites</title>

  <para>
   Before you start using ACLs on your cluster, make sure the following
   conditions are fulfilled:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Ensure you have the same users on all nodes in your cluster, either by
     using NIS, Active Directory, or by manually adding the same users to
     all nodes.
    </para>
   </listitem>
   <listitem>
    <para>
     All users for whom you want to modify access rights with ACLs must
     belong to the <systemitem class="groupname">haclient</systemitem>
     group.
    </para>
   </listitem>
   <listitem>
    <para>
     All users need to run &crmsh; by its absolute path
     <filename>/usr/sbin/crm</filename>.
    </para>
   </listitem>
   <listitem>
    <para>
     If non-privileged users want to run &crmsh;, their <envar>PATH</envar>
     variable needs to be extended with <filename>/usr/sbin</filename>.
    </para>
   </listitem>
  </itemizedlist>

  <important>
   <title>Default Access Rights</title>
   <itemizedlist>
    <listitem>
     <para>
      ACLs are an optional feature. By default, use of ACLs is disabled.
     </para>
    </listitem>
    <listitem>
     <para>
      If ACLs are not enabled, &rootuser; and all users belonging to the
      <systemitem class="groupname">haclient</systemitem> group have full
      read/write access to the cluster configuration.
     </para>
    </listitem>
    <listitem>
     <para>
      Even if ACLs are enabled and configured, both &rootuser; and the
      default CRM owner <systemitem class="username">hacluster</systemitem>
      <emphasis>always</emphasis> have full access to the cluster
      configuration.
     </para>
    </listitem>
   </itemizedlist>
  </important>

  <para>
   To use ACLs you need some knowledge about XPath. XPath is a language for
   selecting nodes in an XML document. Refer to
   <ulink
    url="http://en.wikipedia.org/wiki/XPath"/> or look into the
   specification at <ulink url="http://www.w3.org/TR/xpath/"/>.
  </para>
 </sect1>
 <sect1 id="sec-ha-acl-enable">
  <title>Enabling Use of ACLs In Your Cluster</title>

  <para>
   Before you can start configuring ACLs, you need to
   <emphasis>enable</emphasis> use of ACLs. To do so, use the following
   command in the &crmsh;:
  </para>

<screen>&prompt.root;<command>crm</command> configure property enable-acl=true</screen>

  <para>
   Alternatively, use &hawk; as described in
   <xref linkend="pro-ha-acl-enable-hawk"/>.
  </para>

  <procedure id="pro-ha-acl-enable-hawk">
   <title>Enabling Use of ACLs with &hawk;</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref
      linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Properties</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>CRM Configuration</guimenu> group, select the
     <guimenu>enable-acl</guimenu> attribute from the empty drop-down box
     and click the plus icon to add it.
    </para>
   </step>
   <step>
    <para>
     To set <literal>enable-acl=true</literal>, activate the check box next
     to <literal>enable-acl</literal> and confirm your changes.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec-ha-acl-basics">
  <title>The Basics of ACLs</title>

  <para>
   Access control lists consist of an ordered set of access rules. Each rule
   allows read or write access or denies access to a part of the cluster
   configuration. Rules are typically combined to produce a specific role,
   then users may be assigned to a role that matches their tasks. An ACL
   role is a set of rules which describe access rights to CIB. A rule
   consists of the following:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     an access right like <literal>read</literal>, <literal>write</literal>,
     or <literal>deny</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     a specification where to apply the rule. This specification can be a
     type, an ID reference, or an XPath expression.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Usually, it is convenient to bundle ACLs into roles and assign a specific
   role to system users (ACL targets). There are two methods to create ACL rules:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec-ha-acl-config-xpath"/>. You need to know the
     structure of the underlying XML to create ACL rules.
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-ha-acl-config-tag"/>. Create a shorthand syntax and
     ACL rules to apply to the matched objects.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 id="sec-ha-acl-config-xpath">
   <title>Setting ACL Rules via XPath Expressions</title>
   <para>
    To manage ACL rules via XPath, you need to know the structure of the
    underlying XML. Retrieve the structure with the following command that
    shows your cluster configuration in XML (see
    <xref linkend="ex-ha-acl-excerpt" xrefstyle="select:label nopage"/>):
   </para>
<screen>&prompt.root;<command>crm</command> configure show xml</screen>
   <remark>taroth 2014-08-13: filed https://bugzilla.novell.com/show_bug.cgi?id=891695 for a future "Show CIB"
    option in Hawk</remark>
   <example id="ex-ha-acl-excerpt">
    <title>Excerpt of a Cluster Configuration in XML</title>
<screen><![CDATA[<num_updates="59" 
      dc-uuid="175704363"
      crm_feature_set="3.0.9"
      validate-with="pacemaker-2.0"
      epoch="96"
      admin_epoch="0"
      cib-last-written="Fri Aug  8 13:47:28 2014"
      have-quorum="1">
  <configuration>
    <crm_config>
       <cluster_property_set id="cib-bootstrap-options">
        <nvpair name="stonith-enabled" value="true" id="cib-bootstrap-options-stonith-enabled"/>
        <nvpair name="no-quorum-policy" value="ignore" id="cib-bootstrap-options-no-quorum-policy"/>
         [...]
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="175704363" uname="alice"/>
      <node id="175704619" uname="bob"/>
    </nodes>
    <resources> [...]  </resources>
    <constraints/>
    <rsc_defaults> [...] </rsc_defaults>
    <op_defaults> [...] </op_defaults>
  <configuration>
</cib>]]></screen>
   </example>
   <para>
    With the XPath language you can locate nodes in this XML document. For
    example, to select the root node (<literal>cib</literal>) use the XPath
    expression <literal>/cib</literal>. To locate the global cluster
    configurations, use the XPath expression
    <literal>/cib/configuration/crm_config</literal>.
   </para>
   <para>
    As an example, <xref linkend="tab-ha-acl-operator"/> shows the
    parameters (access type and XPath expression) to create an
    <quote>operator</quote> role. Users with this role can only execute the
    tasks mentioned in the second column&mdash;they cannot reconfigure any
    resources (for example, change parameters or operations), nor change the
    configuration of colocation or ordering constraints.
   </para>
   <table id="tab-ha-acl-operator">
    <title>Operator Role&mdash;Access Types and XPath Expressions</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         Type
        </para>
       </entry>
       <entry>
        <para>
         XPath/Explanation
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//crm_config//nvpair[@name='maintenance-mode']</screen>
        <para>
         Turn cluster maintenance mode on or off.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//op_defaults//nvpair[@name='record-pending']</screen>
        <para>
         Choose whether pending operations are recorded.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//nodes/node//nvpair[@name='standby']</screen>
        <para>
         Set node in online or standby mode.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//resources//nvpair[@name='target-role']</screen>
        <para>
         Start, stop, promote or demote any resource.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//resources//nvpair[@name='maintenance']</screen>
        <para>
         Select if a resource should be put to maintenance mode or not.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//constraints/rsc_location</screen>
        <para>
         Migrate/move resources from one node to another.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Read
        </para>
       </entry>
       <entry>
<screen>/cib</screen>
        <para>
         View the status of the cluster.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  
   <sect2 id="sec-ha-acl-config-tag">
   <title>Setting ACL Rules via Abbreviations</title>
   <para>
    For users who do not want to deal with the XML structure there is an
    easier method. <!--It is a combination of a tag specifier and/or a
    reference.-->
   </para>
   <para>
    For example, consider the following XPath:
   </para>
    <screen>//*[@id="rsc1"]</screen>
    <para>which locates all the XML nodes with the ID <literal>rsc1</literal>.
     </para>
   <para>
    The abbreviated syntax is written like this:
   </para>
    <screen>ref:"rsc1"</screen>
    <para>This also works for constraints. Here is the verbose XPath:</para>
    <screen>//constraints/rsc_location</screen>
    <para>The abbreviated syntax is written like this:</para>
    <screen>type:"rsc_location"</screen>
   <para>
    The abbreviated syntax can be used in &crmsh; and &hawk;. The CIB daemon
    knows how to apply the ACL rules to the matching objects.
   </para>
   
   </sect2>
  </sect1>
 <sect1 id="sec-ha-acl-config-hbgui">
  <title>Configuring ACLs with the &hbgui;</title>

  <para> The following procedure shows how to configure a read-only access to
   the cluster configuration by defining a <literal>monitor</literal> role and
   assigning it to a user. Alternatively, you can use &hawk; or &crmsh;
   to do so, as described in <xref linkend="sec-ha-acl-config-hawk"/> and <xref
    linkend="pro-ha-acl-crm"/>. </para>

  <procedure id="pro-ha-acl-hbgui">
   <title>Adding a Monitor Role and Assigning a User with the &hbgui;</title>
   <step>
    <para>
     Start the &hbgui; and log in as described in
     <xref 
          linkend="sec-ha-configuration-gui-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     Click the <guimenu>ACLs</guimenu> entry in the
     <guimenu>Configuration</guimenu> tree.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu>. A dialog box appears. Choose between
     <guimenu>ACL Target</guimenu> and <guimenu>ACL Role</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To define your ACL role(s):
    </para>
    <substeps>
     <step>
      <para>
       Choose <guimenu>ACL Role</guimenu>. A window opens in which you add
       your configuration options.
      </para>
     </step>
     <step id="st-ha-acl-config-hbgui-id">
      <para>
       Add a unique identifier in the <guimenu>ID</guimenu> textfield, for
       example <literal>monitor</literal>.
      </para>
     </step>
     <step id="st-ha-acl-config-hbgui-add">
      <para>
       Click <guimenu>Add</guimenu> and choose the rights
       (<guimenu>Read</guimenu>, <guimenu>Write</guimenu>, or
       <guimenu>Deny</guimenu>). In our example, select
       <guimenu>Read</guimenu>.
      </para>
     </step>
     <step id="st-ha-acl-config-hbgui-xpath">
      <para>
       Enter the XPath expression <literal>/cib</literal> in the
       <guimenu>Xpath</guimenu> textfield. Proceed with
       <guimenu>Ok</guimenu>.
      </para>
      <para>
       Sidenote: If you have resources or constraints, you can also use the
       abbreviated syntax as explained in
       <xref 
           linkend="sec-ha-acl-config-tag"/>. 
      </para>
     </step>
     <step>
      <para>
       If you have other conditions, repeat the steps
       (<xref
              linkend="st-ha-acl-config-hbgui-add"/> and
       <xref
              linkend="st-ha-acl-config-hbgui-xpath"/>). In our
       example, this is not the case so your role is finished and you can
       close the window with <guimenu>Ok</guimenu>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Assign your role to a user:
    </para>
    <substeps>
     <step>
      <para>
       Click the <guimenu>Add</guimenu> button. A dialog box appears to
       choose between <guimenu>ACL Target</guimenu> and <guimenu>ACL
       Role</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Choose <guimenu>ACL Target</guimenu>. A window opens in which you add
       your configuration options.
      </para>
     </step>
     <step>
      <para>
       Enter the username in the <guimenu>ID</guimenu> textfield. Make sure
       this user belongs to the
       <systemitem
       class="groupname">haclient</systemitem> group.
      </para>
     </step>
     <step>
      <para>
       Click  and use the role name specified in
       <xref
              linkend="st-ha-acl-config-hbgui-id"/>.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec-ha-acl-config-hawk">
  <title>Configuring ACLs with &hawk;</title>
  
  <para>
   The following procedure shows how to configure a read-only access to the
   cluster configuration by defining a <literal>monitor</literal> role and
   assigning it to a user. Alternatively, you can use &crmsh; to do so, as
   described in <xref linkend="pro-ha-acl-crm"/>.
  </para>
  
  <procedure id="pro-ha-acl-hawk">
   <title>Adding a Monitor Role and Assigning a User with &hawk;</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref
      linkend="sec-ha-config-hawk-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Access Control
      Lists</guimenu>. The view shows the <guimenu>Roles</guimenu> and
     <guimenu>Users</guimenu> 
     <remark>taroth 2015-04-29: ACL Targets??? (bsc#921056) - check! taroth
      2015-05-07:checked with SP4 RC1: Hawk UI still shows "Roles" and "Users", thus
      keeping steps below as there are now...</remark> that are already defined.
    </para>
   </step>
   <step>
    <para>
     To define your ACL role(s):
    </para>
    <substeps>
     <step>
      <para>
       Select the <guimenu>Roles</guimenu> category and click the plus icon.
      </para>
     </step>
     <step>
      <para>
       Enter a unique <guimenu>Role ID</guimenu>, for example,
       <literal>monitor</literal>.
      </para>
     </step>
     <step>
      <para>
       For our example of defining a <literal>monitor</literal> role, select
       <literal>read</literal> from the <guimenu>Right</guimenu> drop-down
       box.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Xpath</guimenu> text box, enter the Xpath expression
       <literal>/cib</literal> and click <guimenu>Create Role</guimenu>.
      </para>
      <para>
       This creates a new role with name <literal>monitor</literal>, sets
       the <literal>read</literal> rights and applies it to all elements in
       the CIB by using the XPath expression<literal>/cib</literal>.
      </para>
     </step>
     <step>
      <para>
       If necessary, you can add more access rights and XPath arguments by
       clicking the plus icon and specifying the respective parameters.
       Confirm your changes.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Assign the role to a user:
    </para>
    <substeps>
     <step>
      <para>
       Select the <guimenu>Users</guimenu> category and click the plus icon.
      </para>
      <para>
       The <guimenu>Create User</guimenu> view shows the available roles. It
       also contains an additional line for configuring individual ACL rules
       for that user. The view lets you either assign one or multiple roles
       to the user <emphasis>or</emphasis> define one or more individual
       rules for the user. Selecting a role will make the line for
       individual rules disappear and vice versa. Assigning a role plus
       individual rules is not possible.
      </para>
     </step>
     <step>
      <para>
       Enter a unique <guimenu>User ID</guimenu>, for example,
       <literal>tux</literal>. Make sure this user belongs to the
       <systemitem
        class="groupname">haclient</systemitem> group.
      </para>
     </step>
     <step>
      <para>
       To assign a role to the user, select the respective entries from
       <guimenu>Roles</guimenu>. In our example, select the
       <literal>monitor</literal> role you have created.
      </para>
      <para>
       To deselect one or multiple roles, click the respective entries once
       more. If no role is selected, the line for defining individual rules
       will appear again.
      </para>
      <figure>
       <title>&hawk;&mdash;Assigning a Role or Rule to a User</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-acl-user-assign.png" width="70%" format="PNG"
         />
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-acl-user-assign.png" width="70%" format="PNG"
         />
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       If you want to define individual rules instead, select a
       <guimenu>Right</guimenu> and enter the respective Xpath parameters
       for your rule. Click the plus icon to define additional rules.
      </para>
     </step>
     <step>
      <para>
       Confirm your choice and assign the roles or rules to the user by
       clicking <guimenu>Create User</guimenu>.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>
  
  <para>
   To configure access rights for resources or constraints, you can also use
   the abbreviated syntax as explained in
   <xref
    linkend="sec-ha-acl-config-tag"/>. 
  </para>
 </sect1>
 
 <sect1 id="sec-ha-acl-config-crm">
  <title>Configuring ACLs with &crmsh;</title>

  <para>
   The following procedure shows how to configure a read-only access to the
   cluster configuration by defining a <literal>monitor</literal> role and
   assigning it to a user.
  </para>

  <procedure id="pro-ha-acl-crm">
   <title>Adding a Monitor Role and Assigning a User with &crmsh;</title>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Start the interactive mode of &crmsh;:
    </para>
<screen>&prompt.root;<command>crm</command> configure
&prompt.crm.conf;</screen>
   </step>
   <step>
    <para>
     Define your ACL role(s):
    </para>
    <substeps>
     <step>
      <para>
       Use the <command>role</command> command to define a new role:
      </para>
<screen>&prompt.crm.conf;<command>role</command> monitor read xpath:"/cib"</screen>
      <para>
       The previous command creates a new role with the name
       <literal>monitor</literal>, sets the <literal>read</literal> rights
       and applies it to all elements in the CIB by using the XPath
       expression <literal>/cib</literal>. If necessary, you can add more
       access rights and XPath arguments.
      </para>
     </step>
     <step>
      <para>
       Add additional roles as needed.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Assign your roles to one or multiple ACL targets, which are the corresponding system users. 
     Make sure they belong  to the <systemitem class="groupname">haclient</systemitem> group.
    </para>
<screen>&prompt.crm.conf;<command>acl_target</command> &exampleuser; monitor</screen>
   </step>
   <step>
    <para>
     Check your changes:
    </para>
<screen>&prompt.crm.conf;<command>show</command></screen>
   </step>
   <step>
    <para>
     Commit your changes:
    </para>
<screen>&prompt.crm.conf;<command>commit</command></screen>
   </step>
  </procedure>

  <para>
   To configure access rights for resources or constraints, you can also use
   the abbreviated syntax as explained in
   <xref linkend="sec-ha-acl-config-tag"/>. 
  </para>
 </sect1>
 <!-- taroth 2015-04-29: commenting for now (as agreed with ygao) 
  as the upstream document is outdated
  (does not reflect the changes mentioned in bsc#921056)
  
  <sect1 id="sec-ha-acl-moreinfo">
  <title>For More Information</title>

  <para>
   See <ulink url="http://www.clusterlabs.org/doc/acls.html"/>.
  </para>
 </sect1>-->
</chapter>
