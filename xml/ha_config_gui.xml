<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>
<!--taroth 2011-08-23: todo fate#310359-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:id="cha-ha-configuration-gui">


 <title>Configuring and Managing Cluster Resources (GUI)</title>
 <info>
  <abstract>
   <para>
    This chapter introduces the &hbgui; and covers basic tasks needed when
    configuring and managing cluster resources: modifying global cluster
    options, creating basic and advanced types of resources (groups and
    clones), configuring constraints, specifying failover nodes and failback
    nodes, configuring resource monitoring, starting, cleaning up or removing
    resources, and migrating resources manually.
   </para>
  </abstract>
 </info>
 <para>
  Support for the GUI is provided by two packages: The
  <systemitem class="resource">pacemaker-mgmt</systemitem> package contains the
  back-end for the GUI (the <systemitem class="daemon">mgmtd</systemitem>
  daemon). It must be installed on all cluster nodes you want to connect to
  with the GUI. On any machine where you want to run the GUI, install the
  <systemitem class="resource">pacemaker-mgmt-client</systemitem> package.
 </para>
 <note>
  <title>User Authentication</title>
  <para>
   To log in to the cluster from the &hbgui;, the respective user must be a
   member of the <systemitem class="groupname">haclient</systemitem> group. The
   installation creates a linux user named
   <systemitem class="username">hacluster</systemitem> and adds the user to the
   <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Before using the &hbgui;, either set a password for the
   <systemitem>hacluster</systemitem> user or create a new user which is member
   of the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Do this on every node you will connect to with the &hbgui;.
  </para>
 </note>
 <section xml:id="sec-ha-configuration-gui-intro">
  <title>&hbgui;&mdash;Overview</title>
  <para>
   To start the &hbgui;, enter <command>crm_gui</command> at the command line.
   To access the configuration and administration options, you need to log in
   to a cluster.
  </para>
  <section xml:id="sec-ha-configuration-gui-intro-connect">
   <title>Logging in to a Cluster</title>
   <para>
    To connect to the cluster, select <menuchoice>
    <guimenu>Connection</guimenu> <guimenu>Login</guimenu> </menuchoice>. By
    default, the <guimenu>Server</guimenu> field shows the localhost's IP
    address and <systemitem>hacluster</systemitem> as <guimenu>User
    Name</guimenu>. Enter the user's password to continue.
   </para>
   <figure pgwide="0">
    <title>Connecting to the Cluster</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-login.png" width="45%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-login.png" width="45%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    If you are running the &hbgui; remotely, enter the IP address of a cluster
    node as <guimenu>Server</guimenu>. As <guimenu>User Name</guimenu>, you can
    also use any other user belonging to the <systemitem>haclient</systemitem>
    group to connect to the cluster.
   </para>
  </section>

  <section xml:id="sec-ha-configuration-gui-intro-main">
   <title>Main Window</title>
   <para>
    After being connected, the main window opens:
   </para>
   <figure pgwide="0">
    <title>&hbgui; - Main Window</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main.png" width="75%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <note>
    <title>Available Functions in &hbgui;</title>
    <para>
     By default, users logged in as &rootuser; or
     <systemitem class="username">hacluster</systemitem> have full read-write
     access to all cluster configuration tasks. However,
     <xref linkend="cha-ha-acl" xrefstyle="select:title"/> can be used to
     define fine-grained access permissions.
    </para>
    <para>
     If ACLs are enabled in the CRM, the available functions in the &hbgui;
     depend on the user role and access permission assigned to you.
    </para>
   </note>
   <para>
    To view or modify cluster components like the CRM, resources, nodes or
    constraints, select the respective subentry of the
    <guimenu>Configuration</guimenu> category in the left pane and use the
    options that become available in the right pane. Additionally, the &hbgui;
    lets you easily view, edit, import and export XML fragments of the CIB for
    the following subitems: <guimenu>Resource Defaults</guimenu>,
    <guimenu>Operation Defaults</guimenu>, <guimenu>Nodes</guimenu>,
    <guimenu>Resources</guimenu>, and <guimenu>Constraints</guimenu>. Select
    any of the <guimenu>Configuration</guimenu> subitems and select
    <menuchoice> <guimenu>Show</guimenu> <guimenu>XML Mode</guimenu>
    </menuchoice> in the upper right corner of the window.
   </para>
   <para>
    If you have already configured your resources, click the
    <guimenu>Management</guimenu> category in the left pane to show the status
    of your cluster and its resources. This view also allows you to set nodes
    to <literal>standby</literal> and to modify the management status of nodes
    (if they are currently managed by the cluster or not). To access the main
    functions for resources (starting, stopping, cleaning up or migrating
    resources), select the resource in the right pane and use the icons in the
    toolbar. Alternatively, right-click the resource and select the respective
    menu item from the context menu.
   </para>
   <para>
    The &hbgui; also allows you to switch between different view modes,
    influencing the behavior of the software and hiding or showing certain
    aspects:
   </para>
   <variablelist>
    <varlistentry>
     <term>Simple Mode</term>
     <listitem>
      <para>
       Lets you add resources in a wizard-like mode. When creating and
       modifying resources, shows the frequently-used tabs for sub-objects,
       allowing you to directly add objects of that type via the tab.
      </para>
      <para>
       Allows you to view and change all available global cluster options by
       selecting the <guimenu>CRM Config</guimenu> entry in the left pane. The
       right pane then shows the values that are currently set. If no specific
       value is set for an option, it shows the default values instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Expert Mode</term>
     <listitem>
      <para>
       Lets you add resources in either a wizard-like mode or via dialog
       windows. When creating and modifying resources, it only shows the
       corresponding tab if a particular type of sub-object already exists in
       CIB. When adding a new sub-object, you will be prompted to select the
       object type, thus allowing you to add all supported types of
       sub-objects.
      </para>
      <para>
       When selecting the <guimenu>CRM Config</guimenu> entry in the left pane,
       it only shows the values of global cluster options that have been
       actually set. It hides all cluster options that will automatically use
       the defaults (because no values have been set). In this mode, the global
       cluster options can only be modified by using the individual
       configuration dialogs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Hack Mode</term>
     <listitem>
      <para>
       Has the same functions as the expert mode. Allows you to add additional
       attribute sets that include specific rules to make your configuration
       more dynamic. For example, you can make a resource have different
       instance attributes depending on the node it is hosted on. Furthermore,
       you can add a time-based rule for a meta attribute set to determine when
       the attributes take effect.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The window's status bar also shows the currently active mode.
   </para>
   <para>
    The following sections guide you through the main tasks you need to execute
    when configuring cluster options and resources and show you how to
    administer the resources with the &hbgui;. Where not stated otherwise, the
    step-by-step instructions reflect the procedure as executed in the simple
    mode.
   </para>
  </section>
 </section>
 <section xml:id="sec-ha-config-gui-global">
  <title>Configuring Global Cluster Options</title>
  <para>
   Global cluster options control how the cluster behaves when confronted with
   certain situations. They are grouped into sets and can be viewed and
   modified with the cluster management tools like &hbgui; and
   <command>crm</command> shell. The predefined values can be kept in most
   cases. However, to make key functions of your cluster work correctly, you
   need to adjust the following parameters after basic cluster setup:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <xref linkend="sec-ha-config-basics-global-quorum" xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-ha-config-basics-global-stonith" xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>
  <procedure xml:id="pro-ha-config-gui-global">
   <title>Modifying Global Cluster Options</title>
   <step>
    <para>
     Start the &hbgui; and log in to the cluster as described in
     <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
    </para>
   </step>
   <step>
    <para>
     Select <menuchoice> <guimenu>View</guimenu> <guimenu>Simple Mode</guimenu>
     </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     In the left pane, select <guimenu>CRM Config</guimenu> to view the global
     cluster options and their current values.
    </para>
   </step>
   <step>
    <para>
     Depending on your cluster requirements, set <guimenu>No Quorum
     Policy</guimenu> to the appropriate value.
    </para>
   </step>
   <step>
    <para>
     If you need to disable fencing for any reasons, deselect
     <guimenu>stonith-enabled</guimenu>.
    </para>
    <important>
     <title>No Support Without &stonith;</title>
     <para>
      A cluster without &stonith; enabled is not supported.
     </para>
    </important>
   </step>
   <step>
    <para>
     Confirm your changes with <guimenu>Apply</guimenu>.
    </para>
   </step>
  </procedure>
  <para>
   You can at any time switch back to the default values for all options by
   selecting <guimenu>CRM Config</guimenu> in the left pane and clicking
   <guimenu>Default</guimenu>.
  </para>
 </section>
 <section xml:id="sec-ha-config-gui-resources">
  <title>Configuring Cluster Resources</title>
  <para>
   As a cluster administrator, you need to create cluster resources for every
   resource or application you run on servers in your cluster. Cluster
   resources can include Web sites, e-mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times.
  </para>
  <para>
   For an overview of resource types you can create, refer to
   <xref linkend="sec-ha-config-basics-resources-types"/>.
  </para>
  <section xml:id="sec-ha-configuration-create">
   <title>Creating Simple Cluster Resources</title>
   <para>
    To create the most basic type of a resource, proceed as follows:
   </para>
   <procedure xml:id="pro-ha-config-gui-primitives">
    <title>Adding Primitive Resources</title>
    <step xml:id="st-ha-configuration-create-start">
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Resources</guimenu> and click
      <menuchoice> <guimenu>Add</guimenu> <guimenu>Primitive</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      In the next dialog, set the following parameters for the resource:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Enter a unique <guimenu>ID</guimenu> for the resource.
       </para>
      </step>
      <step xml:id="step-ha-config-gui-primitives-start">
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent class
        you want to use for that resource: <guimenu>lsb</guimenu>,
        <guimenu>ocf</guimenu>, <guimenu>service</guimenu>, or
        <guimenu>stonith</guimenu>. For more information, see
        <xref linkend="sec-ha-config-basics-raclasses"/>.
       </para>
      </step>
      <step>
       <para>
        If you selected <guimenu>ocf</guimenu> as class, also specify the
        <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
        specification allows multiple vendors to supply the same resource
        agent.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the resource agent you
        want to use (for example, <guimenu>IPaddr</guimenu> or
        <guimenu>Filesystem</guimenu>). A short description for this resource
        agent is displayed below.
       </para>
       <para>
        The selection you get in the <guimenu>Type</guimenu> list depends on
        the <guimenu>Class</guimenu> (and for OCF resources also on the
        <guimenu>Provider</guimenu>) you have chosen.
       </para>
      </step>
      <step>
       <para>
        Below <guimenu>Options</guimenu>, set the <guimenu>Initial state of
        resource</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Activate <guimenu>Add monitor operation</guimenu> if you want the
        cluster to monitor if the resource is still healthy.
       </para>
       <informalfigure>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="crmgui-primitive-basic.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="crmgui-primitive-basic.png" width="70%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </informalfigure>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Forward</guimenu>. The next window shows a summary of the
      parameters that you have already defined for that resource. All required
      <guimenu>Instance Attributes</guimenu> for that resource are listed. You
      need to edit them in order to set them to appropriate values. You may
      also need to add more attributes, depending on your deployment and
      settings. For details how to do so, refer to
      <xref linkend="pro-ha-config-gui-parameters"/>.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>Apply</guimenu> to finish the configuration of that resource.
      The configuration dialog is closed and the main window shows the newly
      added resource.
     </para>
    </step>
   </procedure>
   <para>
    During or after creation of a resource, you can add or modify the following
    parameters for resources:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <literal>Instance attributes</literal>&mdash;they determine which
      instance of a service the resource controls. For more information, refer
      to <xref linkend="sec-ha-config-basics-inst-attr"/>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>Meta attributes</literal>&mdash;they tell the CRM how to treat a
      specific resource. For more information, refer to
      <xref linkend="sec-ha-config-basics-meta-attr"/>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>Operations</literal>&mdash;they are needed for resource
      monitoring. For more information, refer to
      <xref linkend="sec-ha-config-basics-operations"/>.
     </para>
    </listitem>
   </itemizedlist>
   <procedure xml:id="pro-ha-config-gui-parameters">
    <title>Adding or Modifying Meta and Instance Attributes</title>
    <step>
     <para>
      In the &hbgui; main window, click <guimenu>Resources</guimenu> in the
      left pane to see the resources already configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      In the right pane, select the resource to modify and click
      <guimenu>Edit</guimenu> (or double-click the resource). The next window
      shows the basic resource parameters and the <guimenu>Meta
      Attributes</guimenu>, <guimenu>Instance Attributes</guimenu> or
      <guimenu>Operations</guimenu> already defined for that resource.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-attributes.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-attributes.png" width="40%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      To add a new meta attribute or instance attribute, select the respective
      tab and click <guimenu>Add</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Name</guimenu> of the attribute you want to add. A
      short <guimenu>Description</guimenu> is displayed.
     </para>
    </step>
    <step>
     <para>
      If needed, specify an attribute <guimenu>Value</guimenu>. Otherwise the
      default value of that attribute will be used.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>OK</guimenu> to confirm your changes. The newly added or
      modified attribute appears on the tab.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of that resource. The
      configuration dialog is closed and the main window shows the modified
      resource.
     </para>
    </step>
   </procedure>
   <tip>
    <title>XML Source Code for Resources</title>
    <para>
     The &hbgui; allows you to view the XML fragments that are generated from
     the parameters that you have defined. For individual resources, select
     <menuchoice> <guimenu>Show</guimenu> <guimenu>XML Mode</guimenu>
     </menuchoice> in the top right corner of the resource configuration
     dialog.
    </para>
    <para>
     To access the XML representation of all resources that you have
     configured, click <guimenu>Resources</guimenu> in the left pane and then
     select <menuchoice> <guimenu>Show</guimenu> <guimenu>XML Mode</guimenu>
     </menuchoice> in the upper right corner of the main window.
    </para>
    <para>
     The editor displaying the XML code allows you to <guimenu>Import</guimenu>
     or <guimenu>Export</guimenu> the XML elements or to manually edit the XML
     code.
    </para>
   </tip>
  </section>
  <section xml:id="sec-ha-configuration-stonith">
   <title>Creating &stonith; Resources</title>
   <important>
    <title>No Support Without &stonith;</title>
    <para>
     A cluster without &stonith; running is not supported.
    </para>
   </important>
   <para>
    By default, the global cluster option <literal>stonith-enabled</literal> is
    set to <literal>true</literal>: If no &stonith; resources have been
    defined, the cluster will refuse to start any resources. To complete
    &stonith; setup, you need to configure one or more &stonith; resources.
    While they are configured similar to other resources, the behavior of
    &stonith; resources is different in some respects. For details refer to
    <xref linkend="sec-ha-fencing-config"/>.
   </para>
   <procedure xml:id="pro-ha-config-gui-stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Resources</guimenu> and click
      <menuchoice> <guimenu>Add</guimenu> <guimenu>Primitive</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      In the next dialog, set the following parameters for the resource:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Enter a unique <guimenu>ID</guimenu> for the resource.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent class
        <guimenu>stonith</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the &stonith; plug-in for
        controlling your &stonith; device. A short description for this plug-in
        is displayed below.
       </para>
      </step>
      <step>
       <para>
        Below <guimenu>Options</guimenu>, set the <guimenu>Initial state of
        resource</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Activate <guimenu>Add monitor operation</guimenu> if you want the
        cluster to monitor the fencing device. For more information, refer to
        <xref linkend="sec-ha-fencing-monitor"/>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Forward</guimenu>. The next window shows a summary of the
      parameters that you have already defined for that resource. All required
      <guimenu>Instance Attributes</guimenu> for the selected &stonith; plug-in
      are listed. You need to edit them in order to set them to appropriate
      values. You may also need to add more attributes or monitor operations,
      depending on your deployment and settings. For details how to do so,
      refer to <xref linkend="pro-ha-config-gui-parameters"/> and
      <xref linkend="sec-ha-configuration-monitor"/>.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>Apply</guimenu> to finish the configuration of that resource.
      The configuration dialog closes and the main window shows the newly added
      resource.
     </para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration, add constraints or use clones or
    both. For more details, refer to <xref linkend="cha-ha-fencing"/>.
   </para>
  </section>
  <section xml:id="sec-ha-config-gui-templates">
   <title>Using Resource Templates</title>
   <para>
    If you want to create several resources with similar configurations,
    defining a resource template is the easiest way. Once defined, it can be
    referenced in primitives or in certain types of constraints. For detailed
    information about function and use of resource templates, refer to
    <xref linkend="sec-ha-config-basics-constraints-templates"/>.
   </para>
   <procedure xml:id="pro-ha-config-gui-templates-create">
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Resources</guimenu> and click
      <menuchoice> <guimenu>Add</guimenu> <guimenu>Template</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the template.
     </para>
    </step>
    <step>
     <para>
      Specify the resource template as you would specify a primitive. Follow
      <xref linkend="pro-ha-config-gui-primitives" xrefstyle="select:label title nopage"/>,
      starting with
      <xref linkend="step-ha-config-gui-primitives-start" xrefstyle="select:label"/>.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>Apply</guimenu> to finish the configuration of the resource
      template. The configuration dialog is closed and the main window shows
      the newly added resource template.
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-templates-use">
    <title>Referencing Resource Templates</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      To reference the newly created resource template in a primitive, follow
      these steps:
     </para>
     <substeps performance="required">
      <step>
       <para>
        In the left pane, select <guimenu>Resources</guimenu> and click
        <menuchoice> <guimenu>Add</guimenu> <guimenu>Primitive</guimenu>
        </menuchoice>.
       </para>
      </step>
      <step>
       <para>
        Enter a unique <guimenu>ID</guimenu> and specify
        <guimenu>Class</guimenu>, <guimenu>Provider</guimenu>, and
        <guimenu>Type</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Template</guimenu> to reference.
       </para>
      </step>
      <step>
       <para>
        If you want to set specific instance attributes, operations or meta
        attributes that deviate from the template, continue to configure the
        resource as described in
        <xref linkend="pro-ha-config-gui-primitives"/>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To reference the newly created resource template in colocational or order
      constraints:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Configure the constraints as described in
        <xref linkend="pro-ha-config-gui-constraints-collocation"/> or
        <xref linkend="pro-ha-config-gui-constraints-order"/>, respectively.
       </para>
      </step>
      <step>
       <para>
        For colocation constraints, the <guimenu>Resources</guimenu> drop-down
        list will show the IDs of all resources and resource templates that
        have been configured. From there, select the template to reference.
       </para>
      </step>
      <step>
       <para>
        Likewise, for ordering constraints, the <guimenu>First</guimenu> and
        <guimenu>Then</guimenu> drop-down lists will show both resources and
        resource templates. From there, select the template to reference.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
  </section>
  <section xml:id="sec-ha-configuration-constraints">
   <title>Configuring Resource Constraints</title>
   <para>
    Having all the resources configured is only part of the job. Even if the
    cluster knows all needed resources, it might still not be able to handle
    them correctly. Resource constraints let you specify which cluster nodes
    resources can run on, what order resources will load, and what other
    resources a specific resource is dependent on.
   </para>
   <para>
    For an overview which types of constraints are available, refer to
    <xref linkend="sec-ha-config-basics-constraints-types"/>. When defining
    constraints, you also need to specify scores. For more information about
    scores and their implications in the cluster, see
    <xref linkend="sec-ha-config-basics-constraints-scores"/>.
   </para>
   <para>
    Learn how to create the different types of the constraints in the following
    procedures.
   </para>

   <procedure xml:id="pro-ha-config-gui-constraints-location">
    <title>Adding or Modifying Locational Constraints</title>
    <step xml:id="step-ha-configuration-constraints-start">
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the &hbgui; main window, click <guimenu>Constraints</guimenu> in the
      left pane to see the constraints already configured for the cluster.
     </para>
    </step>
    <step xml:id="step-ha-configuration-constraints-stop">
     <para>
      In the left pane, select <guimenu>Constraints</guimenu> and click
      <guimenu>Add</guimenu>.
     </para>
<!--<para>Or select an existing constraint and click
     <guimenu>Edit</guimenu>.</para>-->
    </step>
    <step>
     <para>
      Select <guimenu>Resource Location</guimenu> and click
      <guimenu>OK</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the constraint. When modifying
      existing constraints, the ID is already defined and is displayed in the
      configuration dialog.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Resource</guimenu> for which to define the
      constraint. The list shows the IDs of all resources that have been
      configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      Set the <guimenu>Score</guimenu> for the constraint. Positive values
      indicate the resource can run on the <guimenu>Node</guimenu> you specify
      below. Negative values mean it should not run on this node. Setting the
      score to <literal>INFINITY</literal> forces the resource to run on the
      node. Setting it to <literal>-INFINITY</literal> means the resources must
      not run on the node.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Node</guimenu> for the constraint.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-constraint-location.png" width="45%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-constraint-location.png" width="45%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      <remark>taroth 090325: todo - probably this is not the right place to
       mention this... check for better place</remark>
      If you leave the <guimenu>Node</guimenu> and the <guimenu>Score</guimenu>
      field empty, you can also add rules by clicking <menuchoice>
      <guimenu>Add</guimenu> <guimenu>Rule</guimenu> </menuchoice>. To add a
      lifetime, just click <menuchoice> <guimenu>Add</guimenu>
      <guimenu>Lifetime</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of the constraint. The
      configuration dialog is closed and the main window shows the newly added
      or modified constraint.
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-constraints-collocation">
    <title>Adding or Modifying Colocational Constraints</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the &hbgui; main window, click <guimenu>Constraints</guimenu> in the
      left pane to see the constraints already configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Constraints</guimenu> and click
      <guimenu>Add</guimenu>.
     </para>
<!--<para>Or select an existing constraint and click
     <guimenu>Edit</guimenu>.</para>-->
    </step>
    <step>
     <para>
      Select <guimenu>Resource Colocation</guimenu> and click
      <guimenu>OK</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the constraint. When modifying
      existing constraints, the ID is already defined and is displayed in the
      configuration dialog.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Resource</guimenu> which is the colocation source.
      The list shows the IDs of all resources and resource templates that have
      been configured for the cluster.
     </para>
     <para>
      If the constraint cannot be satisﬁed, the cluster may decide not to
      allow the resource to run at all.
     </para>
    </step>
    <step>
     <para>
      <remark>taroth 090331: todo - probably this is not the right place to
       mention this... check for better place</remark>
      If you leave both the <guimenu>Resource</guimenu> and the <guimenu>With
      Resource</guimenu> field empty, you can also add a resource set by
      clicking <menuchoice> <guimenu>Add</guimenu> <guimenu>Resource
      Set</guimenu> </menuchoice>. To add a lifetime, just click <menuchoice>
      <guimenu>Add</guimenu> <guimenu>Lifetime</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      In <guimenu>With Resource</guimenu>, define the colocation target. The
      cluster will decide where to put this resource ﬁrst and then decide
      where to put the resource in the <guimenu>Resource</guimenu> ﬁeld.
     </para>
    </step>
    <step>
     <para>
      Define a <guimenu>Score</guimenu> to determine the location relationship
      between both resources. Positive values indicate the resources should run
      on the same node. Negative values indicate the resources should not run
      on the same node. Setting the score to <literal>INFINITY</literal> forces
      the resources to run on the same node. Setting it to
      <literal>-INFINITY</literal> means the resources must not run on the same
      node. The score will be combined with other factors to decide where to
      put the resource.
     </para>
    </step>
    <step>
     <para>
      If needed, specify further parameters, like <guimenu>Resource
      Role</guimenu>.
     </para>
     <para>
      Depending on the parameters and options you choose, a short
      <guimenu>Description</guimenu> explains the effect of the colocational
      constraint you are configuring.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of the constraint. The
      configuration dialog is closed and the main window shows the newly added
      or modified constraint.
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-constraints-order">
    <title>Adding or Modifying Ordering Constraints</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the &hbgui; main window, click <guimenu>Constraints</guimenu> in the
      left pane to see the constraints already configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Constraints</guimenu> and click
      <guimenu>Add</guimenu>.
     </para>
<!--<para>Or select an existing constraint and click
     <guimenu>Edit</guimenu>.</para>-->
    </step>
    <step>
     <para>
      Select <guimenu>Resource Order</guimenu> and click <guimenu>OK</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the constraint. When modifying
      existing constraints, the ID is already defined and is displayed in the
      configuration dialog.
     </para>
    </step>
    <step>
     <para>
      With <guimenu>First</guimenu>, define the resource that must be started
      before the resource specified with <guimenu>Then</guimenu> is allowed to.
     </para>
    </step>
    <step>
     <para>
      With <guimenu>Then</guimenu> define the resource that will start after
      the <guimenu>First</guimenu> resource.
     </para>
     <para>
      Depending on the parameters and options you choose, a short
      <guimenu>Description</guimenu> explains the effect of the ordering
      constraint you are configuring.
     </para>
    </step>
    <step>
     <para>
      If needed, define further parameters, for example:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Specify a <guimenu>Score</guimenu>. If greater than zero, the
        constraint is mandatory, otherwise it is only a suggestion. The default
        value is <literal>INFINITY</literal>.
       </para>
      </step>
      <step>
       <para>
        Specify a value for <guimenu>Symmetrical</guimenu>. If
        <literal>true</literal>, the resources are stopped in the reverse
        order. The default value is <literal>true</literal>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of the constraint. The
      configuration dialog is closed and the main window shows the newly added
      or modified constraint.
     </para>
    </step>
   </procedure>
   <para>
    You can access and modify all constraints that you have configured in the
    <guimenu>Constraints</guimenu> view of the &hbgui;.
   </para>
   <figure>
    <title>&hbgui; - Constraints</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main-constraints.png" width="68%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main-constraints.png" width="68%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </section>
  <section xml:id="sec-ha-configuration-failover">
   <title>Specifying Resource Failover Nodes</title>
   <para>
    A resource will be automatically restarted if it fails. If that cannot be
    achieved on the current node, or it fails N times on the current node, it
    will try to fail over to another node. You can define a number of failures
    for resources (a <literal>migration-threshold</literal>), after which they
    will migrate to a new node. If you have more than two nodes in your
    cluster, the node a particular resource fails over to is chosen by the &ha;
    software.
   </para>
   <para>
    However, you can specify the node a resource will fail over to by
    proceeding as follows:
   </para>
   <procedure xml:id="pro-ha-config-gui-failover">
    <step>
     <para>
      Configure a location constraint for that resource as described in
      <xref linkend="pro-ha-config-gui-constraints-location"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>migration-threshold</literal> meta attribute to that
      resource as described in <xref linkend="pro-ha-config-gui-parameters"/>
      and enter a <guimenu>Value</guimenu> for the migration-threshold. The
      value should be positive and less that INFINITY.
     </para>
<!-- <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
        format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
        format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>-->
    </step>
    <step>
     <para>
      If you want to automatically expire the failcount for a resource, add the
      <literal>failure-timeout</literal> meta attribute to that resource as
      described in <xref linkend="pro-ha-config-gui-parameters"/> and enter a
      <guimenu>Value</guimenu> for the failure-timeout.
     </para>
    </step>
    <step>
     <para>
      If you want to specify additional failover nodes with preferences for a
      resource, create additional location constraints.
     </para>
    </step>
   </procedure>
   <para>
    For an example of the process flow in the cluster regarding migration
    thresholds and failcounts, see
    <xref linkend="ex-ha-config-basics-failover"/>.
   </para>
   <para>
    Instead of letting the failcount for a resource expire automatically, you
    can also clean up failcounts for a resource manually at any time. Refer to
    <xref linkend="sec-ha-configuration-cleanup"/> for the details.
   </para>
  </section>
  <section xml:id="sec-ha-configuration-failback">
   <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
   <para>
    A resource might fail back to its original node when that node is back
    online and in the cluster. If you want to prevent a resource from failing
    back to the node it was running on prior to failover, or if you want to
    specify a different node for the resource to fail back to, you must change
    its resource stickiness value. You can either specify resource stickiness
    when you are creating a resource, or afterwards.
   </para>
   <para>
    For the implications of different resource stickiness values, refer to
    <xref linkend="sec-ha-config-basics-failback"/>.
   </para>

   <procedure xml:id="pro-ha-config-gui-stickiness">
    <title>Specifying Resource Stickiness</title>
    <step>
     <para>
      Add the <literal>resource-stickiness</literal> meta attribute to the
      resource as described in <xref linkend="pro-ha-config-gui-parameters"/>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      As <guimenu>Value</guimenu> for the resource-stickiness, specify a value
      between <literal>-INFINITY</literal> and <literal>INFINITY</literal>.
     </para>
    </step>
   </procedure>
  </section>
  <section xml:id="sec-ha-configuration-utilization">
   <title>Configuring Placement of Resources Based on Load Impact</title>
   <para>
    Not all resources are equal. Some, such as &xen; guests, require that the
    node hosting them meets their capacity requirements. If resources are
    placed such that their combined need exceed the provided capacity, the
    resources diminish in performance (or even fail).
   </para>
   <para>
    To take this into account, the &hasi; allows you to specify the following
    parameters:
   </para>
   <orderedlist spacing="normal">
    <listitem>
     <para>
      The capacity a certain node <emphasis>provides</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      The capacity a certain resource <emphasis>requires</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      An overall strategy for placement of resources.
     </para>
    </listitem>
   </orderedlist>
   <para>
    Utilization attributes are used to configure both the resource's
    requirements and the capacity a node provides. The &hasi; now also provides
    means to detect and configure both node capacity and resource requirements
    automatically. For more details and a configuration example, refer to
    <xref linkend="sec-ha-config-basics-utilization"/>.
   </para>
   <para>
    To manually configure the resource's requirements and the capacity a node
    provides, proceed as described in
    <xref linkend="pro-ha-config-gui-capacity"/>. You can name the utilization
    attributes according to your preferences and define as many name/value
    pairs as your configuration needs.
   </para>
   <procedure xml:id="pro-ha-config-gui-capacity">
    <title>Adding Or Modifying Utilization Attributes</title>
    <para>
     In the following example, we assume that you already have a basic
     configuration of cluster nodes and resources and now additionally want to
     configure the capacities a certain node provides and the capacity a
     certain resource requires. The procedure of adding utilization attributes
     is basically the same and only differs in
     <xref linkend="step-ha-config-gui-capacity-node"/> and
     <xref linkend="step-ha-config-gui-capacity-resource"/>.
    </para>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-node">
     <para>
      To specify the capacity a node <emphasis>provides</emphasis>:
     </para>
     <substeps performance="required">
      <step>
       <para>
        In the left pane, click <guimenu>Node</guimenu>.
       </para>
      </step>
      <step>
       <para>
        In the right pane, select the node whose capacity you want to configure
        and click <guimenu>Edit</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step xml:id="step-ha-config-gui-capacity-resource">
     <para>
      To specify the capacity a resource <emphasis>requires</emphasis>:
     </para>
     <substeps performance="required">
      <step>
       <para>
        In the left pane, click <guimenu>Resources</guimenu>.
       </para>
      </step>
      <step>
       <para>
        In the right pane, select the resource whose capacity you want to
        configure and click <guimenu>Edit</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Select the <guimenu>Utilization</guimenu> tab and click
      <guimenu>Add</guimenu> to add an utilization attribute.
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-attr-name">
     <para>
      Enter a <guimenu>Name</guimenu> for the new attribute. You can name the
      utilization attributes according to your preferences.
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-attr-value">
     <para>
      Enter a <guimenu>Value</guimenu> for the attribute and click
      <guimenu>OK</guimenu>. The attribute value must be an integer.
     </para>
    </step>
    <step>
     <para>
      If you need more utilization attributes, repeat
      <xref linkend="step-ha-config-gui-capacity-attr-name"/> to
      <xref linkend="step-ha-config-gui-capacity-attr-value"/>.
     </para>
     <para>
      The <guimenu>Utilization</guimenu> tab shows a summary of the utilization
      attributes that you have already defined for that node or resource.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to close the configuration dialog.
     </para>
    </step>
   </procedure>
   <para>
    <xref linkend="fig-ha-config-gui-capacit-node"/> shows the configuration of
    a node which would provide 8 CPU units and 16 GB of memory to resources
    running on that node:
   </para>
   <figure xml:id="fig-ha-config-gui-capacit-node">
    <title>Example Configuration for Node Capacity</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-node-utilization.png" width="45%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-node-utilization.png" width="45%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    An example configuration for a resource requiring 4096 memory units and 4
    of the CPU units of a node would look as follows:
   </para>
   <figure xml:id="fig-ha-config-gui-capacit-resource">
    <title>Example Configuration for Resource Capacity</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-resource-utilization.png" width="85%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-resource-utilization.png" width="55%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    After (manual or automatic) configuration of the capacities your nodes
    provide and the capacities your resources require, you need to set the
    placement strategy in the global cluster options, otherwise the capacity
    configurations have no effect. Several strategies are available to schedule
    the load: for example, you can concentrate it on as few nodes as possible,
    or balance it evenly over all available nodes. For more information, refer
    to <xref linkend="sec-ha-config-basics-utilization"/>.
   </para>
   <procedure xml:id="pro-ha-config-gui-placement">
    <title>Setting the Placement Strategy</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Select <menuchoice> <guimenu>View</guimenu> <guimenu>Simple
      Mode</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>CRM Config</guimenu> to view the global
      cluster options and their current values.
     </para>
    </step>
    <step>
     <para>
      Depending on your requirements, set <guimenu>Placement Strategy</guimenu>
      to the appropriate value.
     </para>
    </step>
    <step>
     <para>
      If you need to disable fencing for any reasons, deselect <literal>Stonith
      Enabled</literal>.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes with <guimenu>Apply</guimenu>.
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-monitor">
   <title>Configuring Resource Monitoring</title>
   <para>
    Although the &hasi; can detect a node failure, it also has the ability to
    detect when an individual resource on a node has failed. If you want to
    ensure that a resource is running, you must configure resource monitoring
    for it. Resource monitoring consists of specifying a timeout and/or start
    delay value, and an interval. The interval tells the CRM how often it
    should check the resource status. You can also set particular parameters,
    such as <literal>Timeout</literal> for <literal>start</literal> or
    <literal>stop</literal> operations.
   </para>
   <procedure xml:id="pro-ha-config-gui-operations">
    <title>Adding or Modifying Monitor Operations</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the &hbgui; main window, click <guimenu>Resources</guimenu> in the
      left pane to see the resources already configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      In the right pane, select the resource to modify and click
      <guimenu>Edit</guimenu>. The next window shows the basic resource
      parameters and the meta attributes, instance attributes and operations
      already defined for that resource.
     </para>
    </step>
    <step>
     <para>
      To add a new monitor operation, select the respective tab and click
      <guimenu>Add</guimenu>.
     </para>
     <para>
      To modify an existing operation, select the respective entry and click
      <guimenu>Edit</guimenu>.
     </para>
    </step>
<!-- ygao 2010-03-01: currently for "Simple Mode", the ID is automatically generated by GUI,
     so user no longer needs to enter one.-->
<!--<step>
     <para> Enter a unique <guimenu>ID</guimenu> for the monitor operation. When
      modifying existing monitor operations, the ID is already defined and is
      displayed in the configuration dialog. </para>
    </step>-->
    <step>
     <para>
      In <guimenu>Name</guimenu>, select the action to perform, for example
      <literal>monitor</literal>, <literal>start</literal>, or
      <guimenu>stop</guimenu>.
     </para>
     <para>
      The parameters shown below depend on the selection you make here.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-monitor.png" width="35%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-monitor.png" width="35%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      In the <guimenu>Timeout</guimenu> field, enter a value in seconds. After
      the specified timeout period, the operation will be treated as
      <literal>failed</literal>. The PE will decide what to do or execute what
      you specified in the <guimenu>On Fail</guimenu> field of the monitor
      operation.
     </para>
    </step>
    <step>
     <para>
      If needed, expand the <guimenu>Optional</guimenu> section and add
      parameters, like <guimenu>On Fail</guimenu> (what to do if this action
      ever fails?) or <guimenu>Requires</guimenu> (what conditions need to be
      satisfied before this action occurs?).
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of that resource. The
      configuration dialog is closed and the main window shows the modified
      resource.
     </para>
    </step>
   </procedure>
   <para>
    For the processes which take place if the resource monitor detects a
    failure, refer to <xref linkend="sec-ha-config-basics-monitoring"/>.
   </para>
   <para>
    To view resource failures in the &hbgui;, click
    <guimenu>Management</guimenu> in the left pane, then select the resource
    whose details you want to see in the right pane. For a resource that has
    failed, the <guimenu>Fail Count</guimenu> and last failure of the resource
    is shown in the middle of the right pane (below the <guimenu>Migration
    threshold</guimenu> entry).
   </para>
   <figure>
    <title>Viewing a Resource's Failcount</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-mgmt-failcount.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-mgmt-failcount.png" width="55%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </section>
  <section xml:id="sec-ha-configuration-group">
   <title>Configuring a Cluster Resource Group</title>
   <para>
    Some cluster resources are dependent on other components or resources, and
    require that each component or resource starts in a specific order and runs
    together on the same server. To simplify this configuration we support the
    concept of groups.
   </para>
   <para>
    For an example of a resource group and more information about groups and
    their properties, refer to
    <xref linkend="sec-ha-config-basics-resources-advanced-groups"/>.
   </para>
   <note>
    <title>Empty Groups</title>
    <para>
     Groups must contain at least one resource, otherwise the configuration is
     not valid.
    </para>
   </note>
   <procedure xml:id="pro-ha-config-gui-group">
    <title>Adding a Resource Group</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Resources</guimenu> and click
      <menuchoice> <guimenu>Add</guimenu> <guimenu>Group</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the group.
     </para>
    </step>
    <step>
     <para>
      Below <guimenu>Options</guimenu>, set the <guimenu>Initial state of
      resource</guimenu> and click <guimenu>Forward</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the next step, you can add primitives as sub-resources for the group.
      These are created similar as described in
      <xref linkend="pro-ha-config-gui-primitives"/>.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>Apply</guimenu> to finish the configuration of the primitive.
     </para>
    </step>
    <step>
     <para>
      In the next window, you can continue adding sub-resources for the group
      by choosing <guimenu>Primitive</guimenu> again and clicking
      <guimenu>OK</guimenu>.
     </para>
     <para>
      When you do not want to add more primitives to the group, click
      <guimenu>Cancel</guimenu> instead. The next window shows a summary of the
      parameters that you have already defined for that group. The
      <guimenu>Meta Attributes</guimenu> and <guimenu>Primitives</guimenu> of
      the group are listed. The position of the resources in the
      <guimenu>Primitive</guimenu> tab represents the order in which the
      resources are started in the cluster.
     </para>
    </step>
    <step>
     <para>
      As the order of resources in a group is important, use the
      <guimenu>Up</guimenu> and <guimenu>Down</guimenu> buttons to sort the
      <guimenu>Primitives</guimenu> in the group.
     </para>
    </step>
    <step>
     <para>
      If all parameters are set according to your wishes, click
      <guimenu>OK</guimenu> to finish the configuration of that group. The
      configuration dialog is closed and the main window shows the newly
      created or modified group.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hbgui; - Groups</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main-groups.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main-groups.png" width="65%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    Let us assume you already have created a resource group as explained in
    <xref linkend="pro-ha-config-gui-group"/>. The following procedure shows
    you how to modify the group to match
    <xref linkend="ex-ha-config-resource-group"/>.
   </para>

   <procedure xml:id="pro-ha-config-gui-group-modify">
    <title>Adding Resources to an Existing Group</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, switch to the <guimenu>Resources</guimenu> view and in
      the right pane, select the group to modify and click
      <guimenu>Edit</guimenu>. The next window shows the basic group parameters
      and the meta attributes and primitives already defined for that resource.
     </para>
    </step>
    <step>
     <para>
      Click the <guimenu>Primitives</guimenu> tab and click
      <guimenu>Add</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the next dialog, set the following parameters to add an IP address as
      sub-resource of the group:
     </para>
     <substeps performance="required">
      <step xml:id="step-ha-config-gui-group-prim-start">
       <para>
        Enter a unique <guimenu>ID</guimenu> (for example,
        <literal>my_ipaddress</literal>).
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select <guimenu>ocf</guimenu>
        as resource agent class.
       </para>
      </step>
      <step>
       <para>
        As <guimenu>Provider</guimenu> of your OCF resource agent, select
        <guimenu>heartbeat</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select <guimenu>IPaddr</guimenu>
        as resource agent.
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>Forward</guimenu>.
       </para>
      </step>
      <step>
       <para>
        In the <guimenu>Instance Attribute</guimenu> tab, select the
        <guimenu>IP</guimenu> entry and click <guimenu>Edit</guimenu> (or
        double-click the <guimenu>IP</guimenu> entry).
       </para>
      </step>
      <step>
       <para>
        As <guimenu>Value</guimenu>, enter the desired IP address, for example,
        <literal>192.168.1.180</literal>.
       </para>
      </step>
      <step xml:id="step-ha-config-gui-group-prim-stop">
       <para>
        Click <guimenu>OK</guimenu> and <guimenu>Apply</guimenu>. The group
        configuration dialog shows the newly added primitive.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Add the next sub-resources (file system and Web server) by clicking
      <guimenu>Add</guimenu> again.
     </para>
    </step>
    <step>
     <para>
      Set the respective parameters for each of the sub-resources similar to
      steps <xref linkend="step-ha-config-gui-group-prim-start"/> to
      <xref linkend="step-ha-config-gui-group-prim-stop"/>, until you have
      configured all sub-resources for the group.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-resource-group.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-resource-group.png" width="45%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      As we configured the sub-resources already in the order in that they need
      to be started in the cluster, the order on the
      <guimenu>Primitives</guimenu> tab is already correct.
     </para>
    </step>
    <step>
     <para>
      In case you need to change the resource order for a group, use the
      <guimenu>Up</guimenu> and <guimenu>Down</guimenu> buttons to sort the
      resources on the <guimenu>Primitive</guimenu> tab.
     </para>
    </step>
    <step>
     <para>
      To remove a resource from the group, select the resource on the
      <guimenu>Primitives</guimenu> tab and click <guimenu>Remove</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>OK</guimenu> to finish the configuration of that group.
      The configuration dialog is closed and the main window shows the modified
      group.
     </para>
    </step>
   </procedure>
  </section>
  <section xml:id="sec-ha-configuration-clone">
   <title>Configuring a Clone Resource</title>
   <para>
    You may want certain resources to run simultaneously on multiple nodes in
    your cluster. To do this you must configure a resource as a clone. Examples
    of resources that might be configured as clones include &stonith; and
    cluster file systems like OCFS2. You can clone any resource provided. This
    is supported by the resource’s Resource Agent. Clone resources may even
    be configured differently depending on which nodes they are hosted.
   </para>
   <para>
    For an overview which types of resource clones are available, refer to
    <xref linkend="sec-ha-config-basics-resources-advanced-clones"/>.
   </para>
   <procedure xml:id="pro-ha-config-gui-clone">
    <title>Adding or Modifying Clones</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left pane, select <guimenu>Resources</guimenu> and click
      <menuchoice> <guimenu>Add</guimenu> <guimenu>Clone</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>ID</guimenu> for the clone.
     </para>
    </step>
    <step>
     <para>
      Below <guimenu>Options</guimenu>, set the <guimenu>Initial state of
      resource</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Activate the respective options you want to set for your clone and click
      <guimenu>Forward</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the next step, you can either add a <guimenu>Primitive</guimenu> or a
      <guimenu>Group</guimenu> as sub-resources for the clone. These are
      created similar as described in
      <xref linkend="pro-ha-config-gui-primitives"/> or
      <xref linkend="pro-ha-config-gui-group"/>.
     </para>
    </step>
    <step>
     <para>
      If all parameters in the clone configuration dialog are set according to
      your wishes, click <guimenu>Apply</guimenu> to finish the configuration
      of the clone.
     </para>
    </step>
   </procedure>
  </section>
 </section>
 <section xml:id="sec-ha-config-gui-manage">
  <title>Managing Cluster Resources</title>
  <para>
   Apart from the possibility to configure your cluster resources, the &hbgui;
   also allows you to manage existing resources. To switch to a management view
   and to access the available options, click <guimenu>Management</guimenu> in
   the left pane.
  </para>
  <figure>
   <title>&hbgui; - Management</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="crmgui-main-manage.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="crmgui-main-manage.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <section xml:id="sec-ha-configuration-start">
   <title>Starting Resources</title>
   <para>
    Before you start a cluster resource, make sure it is set up correctly. For
    example, if you want to use an Apache server as a cluster resource, set up
    the Apache server first and complete the Apache configuration before
    starting the respective resource in your cluster.
   </para>
   <note>
    <title>Do Not Touch Services Managed by the Cluster</title>
    <para>
     When managing a resource with the &hasi;, the same resource must not be
     started or stopped otherwise (outside of the cluster, for example manually
     or on boot or reboot). The &hasi; software is responsible for all service
     start or stop actions.
    </para>
    <para>
     However, if you want to check if the service is configured properly, start
     it manually, but make sure that it is stopped again before &ha; takes
     over.
    </para>
    <para>
     For interventions in resources that are currently managed by the cluster,
     set the resource to <literal>unmanaged mode</literal> first as described
     in <xref linkend="sec-ha-configuration-mgmt-mode"/>.
    </para>
   </note>
   <para>
    During creation of a resource with the &hbgui;, you can set the resource's
    initial state with the <literal>target-role</literal> meta attribute. If
    its value has been set to <literal>stopped</literal>, the resource does not
    start automatically after being created.
   </para>
   <procedure xml:id="pro-ha-config-gui-start">
    <title>Starting A New Resource</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      In the right pane, right-click the resource and select
      <guimenu>Start</guimenu> from the context menu (or use the <guimenu>Start
      Resource</guimenu> icon in the toolbar).
     </para>
    </step>
   </procedure>
  </section>
  <section xml:id="sec-ha-configuration-cleanup">
   <title>Cleaning Up Resources</title>
   <para>
    A resource will be automatically restarted if it fails, but each failure
    raises the resource's failcount. View a resource's failcount with the
    &hbgui; by clicking <guimenu>Management</guimenu> in the left pane, then
    selecting the resource in the right pane. If a resource has failed, its
    <guimenu>Fail Count</guimenu> is shown in the middle of the right pane
    (below the <guimenu>Migration Threshold</guimenu> entry).
   </para>
   <para>
    If a <literal>migration-threshold</literal> has been set for that resource,
    the node will no longer be allowed to run the resource as soon as the
    number of failures has reached the migration threshold.
   </para>
   <para>
    A resource's failcount can either be reset automatically (by setting a
    <literal>failure-timeout</literal> option for the resource) or you can
    reset it manually as described below.
   </para>
   <procedure xml:id="pro-ha-config-gui-clean">
    <title>Cleaning Up A Resource</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      In the right pane, right-click the respective resource and select
      <guimenu>Cleanup Resource</guimenu> from the context menu (or use the
      <guimenu>Cleanup Resource</guimenu> icon in the toolbar).
     </para>
     <para>
      This executes the commands <command>crm_resource&nbsp;</command>
      <option>-C</option> and <command>crm_failcount&nbsp;</command>
      <option>-D</option> for the specified resource on the specified node.
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the man pages of <command>crm_resource</command>
    and <command>crm_failcount</command>.
   </para>
  </section>
  <section xml:id="sec-ha-configuration-remove">
   <title>Removing Cluster Resources</title>
   <para>
    If you need to remove a resource from the cluster, follow the procedure
    below to avoid configuration errors:
   </para>
<!--https://bugzilla.novell.com/show_bug.cgi?id=520718-->
   <note>
    <title>Removing Referenced Resources</title>
    <para>
     Cluster resources cannot be removed if their ID is referenced by any
     constraint. If you cannot delete a resource, check where the resource ID
     is referenced and remove the resource from the constraint first.
    </para>
   </note>
   <procedure xml:id="pro-ha-config-gui-rm">
    <title>Removing a Cluster Resource</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      Select the respective resource in the right pane.
     </para>
    </step>
    <step>
     <para>
      Clean up the resource on all nodes as described in
      <xref linkend="pro-ha-config-gui-clean"/>.
     </para>
    </step>
    <step>
     <para>
      <guimenu>Stop</guimenu> the resource.
     </para>
    </step>
    <step>
     <para>
      Remove all constraints that relate to the resource, otherwise removing
      the resource will not be possible.
     </para>
    </step>
   </procedure>
  </section>
  <section xml:id="sec-ha-configuration-migrate">
   <title>Migrating Cluster Resources</title>
   <para>
    As mentioned in <xref linkend="sec-ha-configuration-failover"/>, the
    cluster will fail over (migrate) resources automatically in case of
    software or hardware failures&mdash;according to certain parameters you can
    define (for example, migration threshold or resource stickiness). Apart
    from that, you can also manually migrate a resource to another node in the
    cluster.
   </para>
   <procedure xml:id="pro-ha-config-gui-migrate">
    <title>Manually Migrating a Resource</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      Right-click the respective resource in the right pane and select
      <guimenu>Migrate Resource</guimenu>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-main-migrate.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-main-migrate.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      In the new window, select the node to which to move the resource to in
      <guimenu>To Node</guimenu>. This creates a location constraint with an
      <literal>INFINITY</literal> score for the destination node.
     </para>
    </step>
    <step>
     <para>
      If you want to migrate the resource only temporarily, activate
      <guimenu>Duration</guimenu> and enter the time frame for which the
      resource should migrate to the new node. After the expiration of the
      duration, the resource <emphasis>can</emphasis> move back to its original
      location or it may stay where it is (depending on resource stickiness).
     </para>
    </step>
    <step>
     <para>
      In cases where the resource cannot be migrated (if the resource's
      stickiness and constraint scores total more than
      <literal>INFINITY</literal> on the current node), activate the
      <guimenu>Force</guimenu> option. This forces the resource to move by
      creating a rule for the current location and a score of
      <literal>-INFINITY</literal>.
     </para>
     <note>
      <para>
       This prevents the resource from running on this node until the
       constraint is removed with <guimenu>Clear Migrate Constraints</guimenu>
       or the duration expires.
      </para>
     </note>
    </step>
    <step>
     <para>
      Click <guimenu>OK</guimenu> to confirm the migration.
     </para>
    </step>
   </procedure>
   <para>
    To allow a resource to move back again, proceed as follows:
   </para>
   <procedure xml:id="pro-ha-config-gui-migrate-back">
    <title>Clearing a Migration Constraint</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      Right-click the respective resource in the right pane and select
      <guimenu>Clear Migrate Constraints</guimenu>.
     </para>
     <para>
      This uses the <command>crm_resource&nbsp;</command> <option>-U</option>
      command. The resource <emphasis>can</emphasis> move back to its original
      location or it may stay where it is (depending on resource stickiness).
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the <command>crm_resource</command> man page or
    &paceex;, available from &clusterlabs-doc;. Refer to section
    <citetitle>Resource Migration</citetitle>.
   </para>
  </section>
  <section xml:id="sec-ha-configuration-mgmt-mode">
   <title>Changing Management Mode of Resources</title>
   <para>
    When a resource is being managed by the cluster, it must not be touched
    otherwise (outside of the cluster). For maintenance of individual
    resources, you can set the respective resources to an <literal>unmanaged
    mode</literal> that allows you to modify the resource outside of the
    cluster.
   </para>
   <procedure>
    <title>Changing Management Mode of Resources</title>
    <step>
     <para>
      Start the &hbgui; and log in to the cluster as described in
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Management</guimenu> in the left pane.
     </para>
    </step>
    <step>
     <para>
      Right-click the respective resource in the right pane and from the
      context menu, select <guimenu>Unmanage Resource</guimenu>.
     </para>
    </step>
    <step>
     <para>
      After you have finished the maintenance task for that resource,
      right-click the respective resource again in the right pane and select
      <guimenu>Manage Resource</guimenu>.
     </para>
     <para>
      From this point on, the resource will be managed by the &hasi; software
      again.
     </para>
    </step>
   </procedure>
  </section>
 </section>
</chapter>
