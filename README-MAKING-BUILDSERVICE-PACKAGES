Making Build Service Packages
*****************************

It is still a two-step procedure to submit a doc package to the Build
Service (BS, internal or external):

  . First, create the PDF, HTML, .desktop and source files and write the
    .spec file using buildbook.sh and book.spec.in coming with the
    susedoc-buildbook package.  The procedure it controlled by book
    specific DEF-* files.

  . Second, check the .changes file and send a submitreq.


For SLE10 SP2 and SP3 look up the SLE_100 branch.


   +------------------------------------------------------------------+
   | Prereq: Install susedoc-buildbook from the Documentation project |
   |         (OBS, external BS); version 0.13 or better.              |
   |         Sources:                                                 |
https://svn.berlios.de/svnroot/repos/opensuse-doc/trunk/tools/susedoc-buildbook
   +------------------------------------------------------------------+


SLED and SLES 11 SP2
====================

Prepare it in the IBS, then file a submitreq to SUSE:SLE-11-SP2:GA.  The
following procedure is not compatible with 'daps'; instead you must use
'susedoc' in combination with the old ENV files (with export
statements):

0/
zypper in susedoc
svn up -r $(cat .env-with-exports) ENV-*

A/ SLED:
~~~~~~~~
1/
To avoid trouble with the BS, prepare the packages locally and
specify the language on the command line:

BS_USER=keichwa
prod=sled
declare -u PROD=$prod

Find old-buildbook.sh in the tools directory, as long as it is not
part of the susedoc-buildbook package.

old-buildbook.sh -u $BS_USER -d DEF-$PROD-manuals -n $prod-manuals \
  -l en --prep-local

Then update the file on the BS:

osc -A https://api.suse.de bco -mupdate SUSE:SLE-11-SP2:GA $prod-manuals_en
pushd home:$BS_USER:branches:SUSE:SLE-11-SP2:GA/$prod-manuals_en
osc up
cp -v ../../autobuild/* .

# All in one step, automatically:
# buildbook -d DEF-SLES-manuals -n sles-manuals
# buildbook -u $BS_USER -d DEF-SLED-manuals -n sled-manuals

2/
Check the .changes file and submit it to the IBS

. /work/src/bin/.profile
vc
#11.2
bash ./doc_pre_checkin.sh
osc ci -mupdate
popd

3/
Check with the BS Web interface or some osc command,
whether it has actually built:

osc prjresults -n sled-manuals_en

Then send a submitreq:

osc -A https://api.suse.de sr -m'update' \
  home:$BS_USER:branches:SUSE:SLE-11-SP2:GA $prod-manuals_en \
  SUSE:SLE-11-SP2:GA


B/ SLES:
~~~~~~~~
The same for SLES (without comments):

BS_USER=keichwa
prod=sles
declare -u PROD=$prod

old-buildbook.sh -u $BS_USER -d DEF-$PROD-manuals -n $prod-manuals \
  -l en --prep-local
osc -A https://api.suse.de bco -mupdate SUSE:SLE-11-SP2:GA $prod-manuals_en
pushd home:$BS_USER:branches:SUSE:SLE-11-SP2:GA/$prod-manuals_en
osc up
cp ../../autobuild/* .
vc
bash ./doc_pre_checkin.sh
osc ci -mupdate
# checking
osc prjresults -n sles-manuals_en
popd
osc -A https://api.suse.de sr -m'update' \
  home:$BS_USER:branches:SUSE:SLE-11-SP2:GA $prod-manuals_en \
  SUSE:SLE-11-SP2:GA


-=-=-=-=-=-=-=-=-=-=-=-=-=- cut here -=-=-=-=-=-=-=-=-=-=-=-=-=-


SLEHA for SLES11 SP1
====================

Build from Berlios:

    https://svn.berlios.de/svnroot/repos/opensuse-doc/trunk/documents/ha/en
    (was: https://svn.berlios.de/svnroot/repos/opensuse-ha-doc/trunk/books/en)

Package name is sleha-guide_en

swampid: 40835.
Bug:     bnc#693059

For a previous maintenance update (Swamp-ID 26408, tracker bug bnc#529124)
it was built from trunk.  And submitted to Devel:HAE:SLE11 (IBS).


-=-=-=-=-=-=-=-=-=-=-=-=-=- cut here -=-=-=-=-=-=-=-=-=-=-=-=-=-
-=-=-=-=-=-=-=-=-=-=-=-=-=- cut here -=-=-=-=-=-=-=-=-=-=-=-=-=-

[Various info, mostly opensuse releated.  Might be useful, but probably
out of date.]


Building the books
------------------

Go to the SVN checkout directory, then call:

. ENV-opensuse-all
svn up
make update

../../novdoc/bin/buildbook.sh -d DEF-opensuse-manual -n opensuse-manual



The first time you call it after a fresh checkout, expext this error
message:

tar: html/opensuse-kdeuser/index.html: Cannot stat: No such file or directory
tar: html/opensuse-kdeuser/index.html: Cannot stat: No such file or directory
tar: Error exit delayed from previous errors
make: *** [dist-html] Error 2

Calling it a second time, it succeeds.


Background Information
~~~~~~~~~~~~~~~~~~~~~~

The buildbook.sh script call special build targets such a "make package",
"make package-html", or "make package-pdf".  The results of these
targets you will find in package directories such as "package-",
"package-html-", or "package-pdf-" with the book name or product name
appended:  "package-pdf-opensuse-startup".

Depending on the output format, the package directory contains the
following files or a subset of them:

opensuse-startup_en-desktop.tar.bz2    - desktop files for KDE help center
opensuse-startup_en-graphics.tar.bz2   - image source files (screen shots)
opensuse-startup_en-html.tar.bz2       - HTML output
opensuse-startup_en-pdf-yelp.tar.bz2   - document file for GNOME help
                                         center (yelp).  Access to the PDF
opensuse-startup_en-yelp.tar.bz2       - document file for GNOME help
                                         center (yelp).  Access to HTML
opensuse-startup_en.pdf                - PDF
opensuse-startup_en.tar.bz2            - profiled XML sources


[[The following now must use the OBS with osc!]]

The buildbook.sh wrapper script then creates a suitable .spec file.

Then it copies all this stuff and the old .changes file in the autobuild
directory and then finally to a directory with a normalized name
matching the book title.  All this a driven by a DEF file.

# The new way:

OBSUSER=keichwa
PACKAGE=opensuse-manual_en
osc branch openSUSE\:Factory $PACKAGE
osc checkout home:$OBSUSER:branches:home:$OBSUSER:Factory/$PACKAGE

# now copy the new stuff into 
home:$OBSUSER:branches:home:$OBSUSER:Factory/$PACKAGE
cd 
update .changes

# commit it

    osc commit -m "Updated context."

# Send a submitreq to the Factory maintainer:

    osc submitreq create -m 'Updated context.'



Submit to the openSUSE Build Service
------------------------------------

[[[Needs updating!]]]

Update the .changes files before submitting to /work.  Change to the
package directory (for example, opensuse-manual_en and call 'vc' to edit the
.changes file).

Run local tests. Change to the package directory (for example,
opensuse-manual_en and call the build script:

    BUILD_DIST=i386 abuild


submitpac -r 11.1 -d opensuse-manual_en
submitpac -r 11.1 -d opensuse-kde3user_en

etc.


-=-=-=-=-=-=-=-=-=-=-=-=-=- cut here -=-=-=-=-=-=-=-=-=-=-=-=-=-

Building Localized Manual Packages
==================================

Use the -e|--extdir option to pull in package files built externally
(e.g., in Dublin by calling "make package").  If you re-use the English
infrastructure, specify the wanted language with the -l|--lang option.
Examples (change to the 'en' directory first!):

../../novdoc/bin/buildbook.sh -d DEF-SLES-admin -n sles-admin \
  -l de -e .../sles-admin_de

../../novdoc/bin/buildbook.sh -d DEF-SLED-kdeuser -n sled-kde-user \
  -l de -e .../sled-kde-user_de

Instead of .../sles-admin_de or .../sled-kde-user_de use the directory
where the files are stored.


-=-=-=-=-=-=-=-=-=-=-=-=-=- cut here -=-=-=-=-=-=-=-=-=-=-=-=-=-


