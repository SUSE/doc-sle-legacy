<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter>
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="ha_ocfs2.xml" xml:id="cha-ha-ocfs2"><title>OCFS2</title><info><abstract>
  <para>
   OCFS 2 (Oracle Cluster File System 2)は、Linux 2.6以降のカーネルに完全に統合されている汎用ジャーナリングファイルシステムです。Oracle Cluster File System 2を利用すれば、アプリケーションバイナリファイル、データファイル、およびデータベースを、共有ストレージ中のデバイスに保管することができます。このファイルシステムには、クラスタ中のすべてのノードが同時に読み書きすることができます。ユーザスペース管理デーモンは、クローンリソースを介して管理され、HAスタック(特に、OpenAIS/CorosyncおよびDLM (Distributed Lock Manager))との統合を実現します。
  </para>
 </abstract></info>
 <indexterm class="startofrange" xml:id="idx-filesystems-ocfs2"> <primary>ファイルシステム</primary> <secondary>OCFS2</secondary> </indexterm>
 
 <section xml:id="sec-ha-ocfs2-features">
  <title>特長と利点</title>

  <para>
   OCFS2は、たとえば、次のストレージソリューションに使用できます。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     一般のアプリケーションとワークロード。
    </para>
   </listitem>
   <listitem>
    <para>
     クラスタ中のXENイメージ。Xen仮想マシンと仮想サーバは、クラスタサーバによってマウントされたOCFS2ボリュームに保存できます。これによって、サーバ間でXen仮想マシンを素早く容易に移植できます。
    </para>
   </listitem>
   <listitem>
    <para>
     LAMP (Linux、Apache、MySQL、およびPHP | Perl | Python)スタック。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   OCF2は、高パフォーマンスでシンメトリックなパラレルクラスタファイルシステムとして、次の機能をサポートします。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     アプリケーションのファイルを、クラスタ内のすべてのノードで使用できます。ユーザは、クラスタ中のOracle Cluster File System 2ボリュームに1回インストールするだけで構いません。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのノードが、標準ファイルシステムインタフェースを介して、同時並行的に、ストレージに直接読み書きできるので、クラスタ全体に渡わたって実行されるアプリケーションの管理が容易になります。
    </para>
   </listitem>
   <listitem>
    <para>
     ファイルアクセスがDLMを介して調整されます。ほとんどの場合、DLMによる制御は適切に機能しますが、アプリケーションの設計によっては、アプリケーションとDLMがファイルアクセスの調整で競合すると、スケーラビリティが制限されることがあります。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのバックエンドストレージで、ストレージのバックアップ機能を利用することができます。共有アプリケーションファイルのイメージを簡単に作成することができるため、災害発生時でも素早くデータを復元することができます。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Oracle Cluster File System 2には、次の機能も用意されています。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     メタデータのキャッシュ処理。
    </para>
   </listitem>
   <listitem>
    <para>
     メタデータのジャーナル処理。
    </para>
   </listitem>
   <listitem>
    <para>
     ノード間にまたがるファイルデータの整合性。
    </para>
   </listitem>


   <listitem>
    <para>
     最大4KBのマルチブロックサイズ、最大1MBのクラスタサイズ、4PB(ペタバイト)の最大ボリュームサイズをサポートします。
    </para>
   </listitem>
   <listitem>
    <para>
     32台までのクラスタノードをサポート。
    </para>
   </listitem>


   <listitem>
    <para>
     データベースのパフォーマンスを向上する非同期、直接I/Oのサポート。
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="sec-ha-ocfs2-utils">
  <title>OCFS2のパッケージと管理ユーティリティ</title>

  <para>
   SUSE® Linux Enterprise Server <literal/>11 SP4<phrase role="productnumber"><phrase os="sles">上のHigh Availability Extensionには、OCFS2カーネルモジュール(</phrase>ocfs2</phrase>)が自動的にインストールされます。OCFS2を使用するには、<systemitem class="resource">ocfs2-tools</systemitem>と、ご使用のカーネルに適合する<systemitem class="resource">ocfs2-kmp-*</systemitem>パッケージが、クラスタの各ノードにインストールされていることを確認してください。
  </para>

  <para>
   <systemitem class="resource">ocfs2-tools</systemitem>パッケージには、次に示すOCFS2ボリュームの管理ユーティリティがあります。構文については、各マニュアルページを参照してください。
  </para>

  <table>
   <title>OCFS2ユーティリティ</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       <para>
        OCFS2ユーティリティ
       </para>
      </entry>
      <entry>
       <para>
        説明
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        debugfs.ocfs2
       </para>
      </entry>
      <entry>
       <para>
        デバッグの目的で、Oracle Cluster File System 2のファイルシステムの状態を調査します。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        fsck.ocfs2
       </para>
      </entry>
      <entry>
       <para>
        ファイルシステムにエラーがないかをチェックし、必要に応じてエラーを修復します。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        mkfs.ocfs2
       </para>
      </entry>
      <entry>
       <para>
        デバイス上にOCFS2ファイルシステムを作成します。通常は、共有物理/論理ディスク上のパーティションに作成します。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        mounted.ocfs2
       </para>
      </entry>
      <entry>
       <para>
        クラスタシステム上のすべてのOCFS2ボリュームを検出、表示します。OCFS2デバイスをマウントしているシステム上のすべてのノードを検出、表示するか、またはすべてのOCFS2デバイスを表示します。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        tunefs.ocfs2
       </para>
      </entry>
      <entry>
       <para>
        ボリュームラベル、ノードスロット数、すべてのノードスロットのジャーナルサイズ、およびボリュームサイズなど、OCFS2ファイルのシステムパラメータを変更します。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </section>
 <section xml:id="sec-ha-ocfs2-create-service">
  <title>OCFS2サービスとSTONITHリソースの設定</title>



  <para>
   OCFS2ボリュームを作成する前に、次のリソースをクラスタ内のサービスとして設定する必要があります: DLM、O2CBおよびSTONITHリソース。OCFS2はPacemakerからのクラスタメンバーシップサービスを使用し、それらのサービスはユーザスペースで実行されます。したがって、DLMとO2CBは、クラスタ内の各ノードに存在するクローンリソースとして設定する必要があります。
  </para>

  <para>
   次の手順では、<command>crm</command>シェルを使用してクラスタリソースを設定します。リソースの設定には、Pacemaker GUIを使用することもできます。
  </para>

  <note>
   <title>cLVMおよびOCFS2両方のためのDLMリソース</title>
   <para>
    cLVMおよびOCFS2は両方とも、クラスタ内のすべてのノード上で実行するDLMリソースを必要とするため、通常はクローンとして設定されます。OCFS2およびcLVMの両方を含むセットアップがある場合、OCFS2およびcLVMの両方に<emphasis>1つの</emphasis>DLMリソースを設定することで十分です。
   </para>
  </note>

  <procedure xml:id="pro-ocfs2-resources">
   <title>DLMリソースおよびO2CBリソースの設定</title>
   <para>
    設定は複数のプリミティブおよび1つのベースクローンを含むベースグループで設定されます。ベースグループとベースクローンはどちらも後でさまざまなシナリオで使用できます(例: OCFS2およびcLVM)。必要に応じてそれぞれのプリミティブを持つベースグループを拡張する必要があるだけです。ベースグループは内部コロケーションおよび順序付けを持つため、個々のグループ、クローン、その依存性をいくつも指定する必要がなく、セットアップ全体を容易にします。
   </para>
   <para>
    クラスタ内の1つのノードについて、次の手順を実行してください。
   </para>
   <step>
    <para>
     シェルを起動し、<systemitem class="username">root</systemitem>または同等のものとしてログインします。
    </para>
   </step>
   <step>
    <para>
     <command>crm</command> <option>configure</option>を実行します。
    </para>
   </step>
   <step>
    <para>
     次を入力して、DLMおよびO2CBのプリミティブリソースを作成します。
    </para>

<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive</command> dlm ocf:pacemaker:controld \
      op monitor interval="60" timeout="60"
<command>primitive</command> o2cb ocf:ocfs2:o2cb \
      op monitor interval="60" timeout="60"
</screen>
    <para>
     <literal>dlm</literal>クローンリソースが、分散ロックマネージャサービスを制御し、クラスタ内のすべてのノード上でこのサービスが開始するようにします。ベースグループの内部コロケーションおよび順序付けによって、<literal>o2cb</literal>サービスは、すでに実行している<literal>dlm</literal>サービスのコピーを持つノード上でのみ開始されます。
    </para>
   </step>
   <step>
    <para>
     次を入力してベースグループおよびベースクローンを作成します。

    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>group</command> base-group dlm o2cb 
<command>clone</command> base-clone base-group \
      meta interleave="true"</screen>
   </step>
   <step>
    <para>
     <command>show</command>で変更内容をレビューします。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>exit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro-ocfs2-stonith">
   <title>STONITHリソースの設定</title>
   <note>
    <title>必要なSTONITHデバイス</title>
    <para>
     フェンシングデバイスを設定する必要があります。STONITHなしでは、設定内に配置されたメカニズム(<literal>external/sbd</literal>など)は失敗します。
    </para>
   </note>
   <step>
    <para>
     シェルを起動し、<systemitem class="username">root</systemitem>または同等のものとしてログインします。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-create"/>で説明されるとおり、SBDパーティションを作成します。
    </para>
   </step>
   <step>
    <para>
     <command>crm</command> <option>configure</option>を実行します。
    </para>
   </step>
   <step>
    <para>
     <literal>external/sdb</literal>をフェンシングデバイスとして設定し、<literal>/dev/sdb2</literal>を共有ストレージ上のハートビートとフェンシング専用のパーティションにします。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive</command> sbd_stonith stonith:external/sbd \
      params pcmk_delay_max="15" \
      op monitor interval="15" timeout="15"</screen>
   </step>
   <step>
    <para>
     <command>show</command>で変更内容をレビューします。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>exit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-ocfs2-create">
  <title>OCFS2ボリュームの作成</title>

  <para>
   <xref linkend="sec-ha-ocfs2-create-service"/>で説明されているように、DLMとO2CBをクラスタリソースとして設定したら、システムがOCFS2を使用できるように設定し、OCFS2ボリュームを作成します。
  </para>

  <note>
   <title>アプリケーションファイルとデータファイル用のOCFS2ボリューム</title>
   <para>
    一般に、アプリケーションファイルとデータファイルは、異なるOCFS2ボリュームに保存することを推奨します。アプリケーションボリュームとデータボリュームのマウント要件が異なる場合は、必ず、異なるボリュームに保存します。
   </para>
  </note>

  <para>
   作業を始める前に、OCFS2ボリュームに使用するブロックデバイスを準備します。デバイスは空き領域のままにしてください。
  </para>

  <para>
   次に、<xref linkend="pro-ocfs2-volume"/>で説明されているように、<command>mkfs.ocfs2</command>で、OCFS2ボリュームを作成し、フォーマットします。そのコマンドの重要なパラメータは、<xref linkend="tab-ha-ofcs2-mkfs-ocfs2-params"/>に一覧されています。詳細情報とコマンド構文については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
  </para>

  <table xml:id="tab-ha-ofcs2-mkfs-ocfs2-params">
   <title>重要なOCFS2パラメータ </title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       <para>
        OCFS2パラメータ
       </para>
      </entry>
      <entry>
       <para>
        説明と推奨設定
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        ボリュームラベル(<option>-L</option>)
       </para>
      </entry>
      <entry>
       <para>
        異なるノードへのマウント時に、正しく識別できるように、一意のわかりやすいボリューム名を指定します。ラベルを変更するには、<command>tunefs.ocfs2</command>ユーティリティを使用します。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        クラスタサイズ(<option>-C</option>)
       </para>
      </entry>
      <entry>
       <para>
        クラスタサイズは、ファイルに割り当てられる、データ保管領域の最小単位です。使用できるオプションと推奨事項については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        ノードスロット数(<option>-N</option>)
       </para>
      </entry>
      <entry>
       <para>
        同時にボリュームをマウントできる最大ノード数を指定します。各ノードについて、OCFS2はジャーナルなどの個別のシステムファイルを作成します。ボリュームにアクセスするノードに、リトルエンディアン形式のノード(x86、x86-64、およびia64など)とビッグエンディアン形式のノード(ppc64やs390xなど)が混在しても構いません。
       </para>
       <para>
        ノード固有のファイルは、ローカルファイルとして参照されます。ローカルファイルには、ノードスロット番号が付加されます。たとえば、<literal>journal:0000</literal>は、スロット番号<literal>0</literal>に割り当てられたノードに属します。
       </para>
       <para>
        各ボリュームを同時にマウントすると予期されるノード数に従って、各ボリュームの作成時に、そのボリュームの最大ノードスロット数を設定します。<command>tunefs.ocfs2</command>ユーティリティを使用して、必要に応じてノードスロットの数を増やします。ただし、この値は減らすことはできません。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        ブロックサイズ(<option>-b</option>)
       </para>
      </entry>
      <entry>
       <para>
        ファイルシステムがアドレス可能な領域の最小単位を指定します。ブロックサイズは、ボリュームの作成時に指定します。使用できるオプションと推奨事項については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。

       </para>
      </entry>
     </row>

     <row>
      <entry>
       <para>
        特定機能のオン/オフ(<option>--fs-features</option>)
       </para>
      </entry>
      <entry>
       <para>
        カンマで区切った機能フラグリストを指定できます。<systemitem>mkfs.ocfs2</systemitem>は、そのリストに従って、それらの機能セットを含むファイルシステムを作成しようとします。機能をオンにするには、その機能をリストに入れます。機能をオフにするには、その名前の前に<literal>no</literal>を付けます。
       </para>
       <para>
        使用できるすべてのフラグの概要については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        事前定義機能(<option>--fs-feature-level</option>)
       </para>
      </entry>
      <entry>
       <para>
        事前定義されたファイルシステム機能セットから選択できます。使用できるオプションについては、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>



  <para>
   <command>mkfs.ocfs2</command>によるボリュームの作成およびフォーマット時に特定の機能を指定しない場合は、次の機能がデフォルトで有効になります。<option>backup-super</option>、<option>sparse</option>、<option>inline-data</option>、<option>unwritten</option>、<option>metaecc</option>、<option>indexed-dirs</option>、および<option>xattr</option>。
  </para>



  <procedure xml:id="pro-ocfs2-volume">
   <title>OCFS2ボリュームを作成し、フォーマットする</title>
   <para>
    クラスタノードの<emphasis>1つ</emphasis>だけで、次の手順を実行します。
   </para>
   <step>
    <para>
     端末ウィンドウを開いて、<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     クラスタがオンラインであることをコマンド<command>crm status</command>で確認します。
    </para>
   </step>
   <step>
    <para>
     <command>mkfs.ocfs2</command>ユーティリティを使用して、ボリュームを作成およびフォーマットします。このコマンドの指定形式については、<command>mkfs.ocfs2</command>マニュアルページを参照してください。
    </para>
    <para>
     たとえば、最大32台のクラスタノードをサポートする新しいOCFS2ファイルシステムを<filename>/dev/sdb1</filename>上に作成するには、次のコマンドを使用します。
    </para>
<screen><prompt role="root">root # </prompt> mkfs.ocfs2 -N 32 /dev/sdb1</screen>

   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-ocfs2-mount">
  <title>OCFS2ボリュームのマウント</title>

  <para>
   OCFS2ボリュームは、手動でマウントするか、クラスタマネージャでマウントできます(<xref linkend="pro-ocfs2-mount-cluster"/>参照)。
  </para>

  <procedure xml:id="pro-ocfs2-mount-manual">
   <title>OCFS2ボリュームを手動でマウントする</title>
   <step>
    <para>
     端末ウィンドウを開いて、<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     クラスタがオンラインであることをコマンド<command>crm status</command>で確認します。
    </para>
   </step>
   <step>
    <para>
     コマンドラインから、<command>mount</command>コマンドを使ってボリュームをマウントします。
    </para>
   </step>
  </procedure>

  <warning>
   <title>手動マウントによるOCFS2デバイス</title>
   <para>
    OCFS2ファイルシステムをテスト目的で手動マウントした場合、そのファイルシステムは、いったんマウント解除してから、OpenAISで使用してください。
   </para>
  </warning>

  <procedure xml:id="pro-ocfs2-mount-cluster">
   <title>クラスタマネージャでOCFS2ボリュームをマウントする</title>
   <para>
    High AvailabilityソフトウェアでOCFS2ボリュームをマウントするには、クラスタ内でocf File Systemリソースを設定します。次の手順では、<command>crm</command>シェルを使用してクラスタリソースを設定します。リソースの設定には、Pacemaker GUIを使用することもできます。
   </para>
   <step>
    <para>
     シェルを起動し、<systemitem class="username">root</systemitem>または同等のものとしてログインします。
    </para>
   </step>
   <step>
    <para>
     <command>crm</command> <option>configure</option>を実行します。
    </para>
   </step>
   <step>
    <para>
     OCFS2ファイルシステムをクラスタ内のすべてのノードにマウントするように、Pacemakerを設定します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive</command> ocfs2-1 ocf:heartbeat:Filesystem \
      params device="/dev/sdb1" directory="/mnt/shared" fstype="ocfs2" options="acl" \
      op monitor interval="20" timeout="40"</screen>
   </step>
   <step>
    <para>
     <xref linkend="pro-ocfs2-resources"/>で設定したベースグループにファイルシステムのプリミティブを追加します。
    </para>
    <substeps performance="required">
     <step>
      <para>
       入力
      </para>
<screen><prompt role="custom">crm(live)configure# </prompt>edit base-group</screen>
     </step>

     <step>
      <para>
       Viエディタが開いたら、そこに次のようにグループを変更し、変更を保存します。
      </para>
<screen><prompt role="custom">crm(live)configure# </prompt>group base-group dlm o2cb ocfs2-1</screen>
      <para>
       ベースグループの内部コロケーションおよび順序付けによって、Pacemakerは、すでに実行しているo2cbリソースも持つノード上で<systemitem class="resource">ocfs2-1</systemitem>リソースのみ始動します。
      </para>
     </step>
    </substeps>
   </step>

   <step>
    <para>
     <command>show</command>で変更内容をレビューします。必要なリソースをすべて設定したことを確認するには、<xref linkend="cha-ha-config-example"/>も参照してください。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>exit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>
 </section>
 <section xml:id="sec-ha-ocfs2-quota">
  <title>OCFS2ファイルシステム上でクォータを使用する</title>



  <para>
   OCFS2ファイルシステム上でクォータを使用するには、適切なクォータ機能またはオプションを使用して、ファイルシステムを作成し、マウントします。オプションは<literal>ursquota</literal> (個々のユーザのためのクォータ)または<literal>grpquota</literal> (グループのためのクォータ)です。これらの機能は後ほど、<command>tunefs.ocfs2</command>を使用して、マウントされていないファイルシステムで有効にすることもできます。
  </para>

  <para>
   ファイルシステムで適切なクォータ機能が有効にされている場合、ファイルシステムは、そのメタデータで、各ユーザ(または)グループが使用しているスペースの量とファイルの数を追跡します。OCFS2はクォータ情報をファイルシステムの内部メタデータとして扱うので、<command>quotacheck</command>(8)プログラムを実行する必要はありません。すべての機能はfsck.ocf2、およびファイルシステムドライバ自体に組み込まれています。
  </para>

  <para>
   各ユーザまたはグループに課せられている制限の強制を有効にするには、他のファイルシステムでの場合と同様に、<command>quotaon</command>(8)を実行します。
  </para>





  <para>
   パフォーマンス上の理由で、各クラスタノードはクォータの計算をローカルに行い、この情報を、10秒ごとに共通の中央ストレージに同期するようになっています。この間隔は、<command>tunefs.ocfs2</command>と、<option>usrquota-sync-interval</option>および<option>grpquota-sync-interval</option>オプションで調整することができます。クォータ情報は必ずしも常に正確というわけではないので、複数のクラスタノードを並列に運用している場合、ユーザまたはグループがクォータ制限をいくらか超えることもあります。
  </para>
 </section>
 <section xml:id="sec-ha-ocfs2-more">
  <title>詳細情報</title>

  <para>
   OCFS2の詳細については、次のリンクを参照してください。
  </para>

  <variablelist>
   <varlistentry>
    <term><link xlink:href="http://oss.oracle.com/projects/ocfs2/"/>
    </term>
    <listitem>
     <para>
      OracleサイトにあるOCFS2プロジェクトのホームページ
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="http://oss.oracle.com/projects/ocfs2/documentation"/>
    </term>
    <listitem>
     <para>
      プロジェクトドキュメントのホームページにある『<citetitle>OCFS2 User's Guide</citetitle>』
     </para>
    </listitem>
   </varlistentry>
  </variablelist><indexterm class="endofrange" startref="idx-filesystems-ocfs2"/>
 </section>
</chapter>
