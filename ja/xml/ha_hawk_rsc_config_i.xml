<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE sect1>
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="ha_hawk_rsc_config_i.xml" xml:id="sec-ha-config-hawk-rsc">
 <title>クラスタリソースの設定</title>

 <para>
  クラスタの管理者は、クラスタ内のサーバ上の各リソースや、サーバ上で実行する各アプリケーションに対してクラスタリソースを作成する必要があります。クラスタリソースには、Webサイト、メールサーバ、データベース、ファイルシステム、仮想マシン、およびユーザが常時使用できるその他のサーバベースのアプリケーションまたはサービスなどが含まれます。
 </para>

 <para>
  作成できるリソースタイプの概要については、<xref linkend="sec-ha-config-basics-resources-types"/>を参照してください。リソースの基本的な仕様(ID、クラス、プロバイダ、タイプ)とは別に、リソースの作成中または作成後に次のパラメータを追加または変更できます。
 </para>

 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    <literal>Instance attributes (parameters)</literal>は、リソースが制御するサービスのインスタンスを決定します。 詳細については、<xref linkend="sec-ha-config-basics-inst-attr"/>を参照してください。
   </para>
   <para>
    リソースを作成する際、Hawkは必要なパラメータを自動的に表示します。これらを編集して、有効なリソースの設定を取得します。
   </para>
  </listitem>
  <listitem>
   <para>
    <literal>Meta attributes</literal>は、特定のリソースの処理方法をCRMに指示します。詳細については、<xref linkend="sec-ha-config-basics-meta-attr"/>を参照してください。
   </para>
   <para>
    リソースを作成する際、Hawkはそのリソースの重要なメタ属性を自動的にリストにします(たとえばリソースの初期状態を定義する<literal>target-role</literal>属性です。デフォルトでは<literal>Stopped</literal>に設定されているため、リソースはすぐには始動しません)。
   </para>
  </listitem>
  <listitem>
   <para>
    <literal>Operations</literal> は、リソース監視に必要です。詳細については、<xref linkend="sec-ha-config-basics-operations"/>を参照してください。
   </para>
   <para>
    リソースを作成する際、Hawkは、重要なリソース操作を表示します(<literal>monitor</literal>、<literal>start</literal>、および<literal>stop</literal>)。
   </para>
  </listitem>
 </itemizedlist>





 <section xml:id="sec-ha-config-hawk-wizard">
  <title>セットアップウィザードでリソースを設定する</title>
  <para>
   High Availability Extensionには、高可用性NFSサーバのセットアップなど、よく使われるいくつかのクラスタシナリオ用に、テンプレートの定義済みセットが付属しています。定義済みテンプレートは、<systemitem class="resource">hawk-templates</systemitem>パッケージに含まれています。ユーザ独自のウィザードテンプレートを定義することもできます。詳細については、<link xlink:href="https://github.com/ClusterLabs/hawk/blob/master/doc/wizard.txt"/>を参照してください。
  </para>
  <procedure xml:id="pro-ha-config-hawk-wizard">
   <title>セットアップウィザードの使用</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>セットアップウィザード</guimenu>を選択します。<guimenu>クラスタセットアップウィザード</guimenu>に、使用可能なリソーステンプレートが一覧表示されます。エントリをクリックすると、Hawkはそのテンプレートについての簡単なヘルプテキストを表示します。
    </para>
   </step>
   <step>
    <para>
     設定するリソースセットを選択して、<guimenu>次へ</guimenu>をクリックします。
    </para>
   </step>
   <step>
    <para>
     画面の指示に従います。オプションについての情報が必要な場合には、オプションをクリックすると、Hawkは簡単なヘルプテキストを表示します。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk - セットアップウィザード</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-wizard.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-wizard.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>

 <section xml:id="sec-ha-config-hawk-primitives">
  <title>単純なクラスタリソースの作成</title>
  <para>
   最も基本的なタイプのリソースを作成するには、次の手順に従います。
  </para>
  <procedure xml:id="pro-ha-config-hawk-primitives">
   <title>プリミティブリソースを追加する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面に、すべてのタイプのリソースのカテゴリが表示されます。ここにはすでに定義済みのすべてのリソースが表示されます。 
    </para>
   </step>
   <step>
    <para>
     <guimenu>プリミティブ</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     リソースを次のとおり指定します。
    </para>
    <substeps performance="required">
     <step>
      <para>
       固有の<guimenu>リソースID</guimenu>を入力します。
      </para>
     </step>
     <step xml:id="step-ha-config-hawk-primitives-start">
      <para>
       <guimenu>クラス</guimenu>リストから、そのリソースに使用するリソースエージェントクラスを選択します。<guimenu>lsb</guimenu>、<guimenu>ocf</guimenu>、<guimenu>service</guimenu>、または<guimenu>stonith</guimenu>を選択できます。 詳細については、<xref linkend="sec-ha-config-basics-raclasses"/>を参照してください。
      </para>
     </step>
     <step>
      <para>
       <guimenu>ocf</guimenu>をクラスとして選択した場合、OCFリソースエージェントの<guimenu>プロバイダ</guimenu>を指定します。OCFの指定によって、複数のベンダが同じリソースエージェントを提供できるようになります。
      </para>
     </step>
     <step>
      <para>
       <guimenu>タイプ</guimenu>リストから、使用するリソースエージェントを選択します(たとえば<guimenu>IPaddr</guimenu>または<guimenu>Filesystem</guimenu>)。このリソースエージェントの簡単な説明が表示されます。
      </para>
      <para>
       <guimenu>タイプ</guimenu>リストに表示される選択肢は、選択した<guimenu>クラス</guimenu>(OCFリソースの場合は、<guimenu>プロバイダ</guimenu>も)によって異なります。
      </para>
     </step>
    </substeps>
   </step>
   <step xml:id="step-ha-config-hawk-parameters">
    <para>
     Hawkは、リソースに必要なパラメータと、追加パラメータを指定するために使用できる空のドロップダウンリストを自動的に表示します。
    </para>
    <para>
     リソースの<guimenu>パラメータ</guimenu>(インスタンス属性)を定義するには次のとおり行います。
    </para>
    <substeps performance="required">
     <step>
      <para>
       それぞれ必要なパラメータの値を入力します。パラメータの隣のテキストボックスをクリックすると、簡単なヘルプテキストが表示されます。
      </para>
     </step>
     <step>
      <para>
       パラメータを完全に削除するには、パラメータの隣のマイナスアイコンをクリックします。
      </para>
     </step>
     <step>
      <para>
       他のパラメータを追加するには、空のドロップダウンリストをクリックし、パラメータを選択して、その値を入力します。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Hawkは、重要なリソース<guimenu>操作</guimenu>を自動的に表示し、デフォルト値を提案します。ここで設定を変更しない場合、変更を確定するとすぐに、Hawkは提案した操作およびデフォルト値を追加します。
    </para>
    <para>
     操作の変更または削除方法の詳細については、<xref linkend="pro-ha-config-hawk-operations"/>を参照してください。
    </para>
   </step>
   <step xml:id="step-ha-config-hawk-meta-attr">
    <para>
     Hawkは、たとえば<literal>target-role</literal>など、リソースの最も重要なメタ属性を自動的にリストにします。
    </para>
    <para>
     <guimenu>メタ属性</guimenu>を変更または追加するには次のとおり行います。
    </para>
    <substeps performance="required">
     <step>
      <para>
       属性に(別の)値を設定するには、属性の隣のドロップダウンボックスから値を1つ選択するか、入力フィールドで値を編集します。
      </para>
     </step>
     <step>
      <para>
       属性を完全に削除するには、その隣のマイナスアイコンをクリックします。
      </para>
     </step>
     <step>
      <para>
       他のメタ属性を追加するには、空のドロップダウンボックスをクリックし、属性を選択します。属性のデフォルト値が表示されます。必要な場合は、上述したとおり変更します。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     <guimenu>リソースの作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、リソースが正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure>
   <title>Hawk - プリミティブリソース</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-primitive-basic.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-primitive-basic.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

 </section>

 <section xml:id="sec-ha-config-hawk-stonith">
  <title>STONITHリソースの作成</title>
  <important>
   <title>STONITHがない場合はサポートなし</title>
   <para>
    STONITHがないクラスタはサポートされません。
   </para>
  </important>
  <para>
   デフォルトでは、グローバルクラスタオプション<literal>stonith-enabled</literal>は<literal>true</literal>に設定されています。STONITHリソースが定義されていない場合、クラスタはどのリソースの開始も拒否します。1つ以上のSTONITHリソースを設定して、STONITHのセットアップを完了します。STONITHは他のリソースと同様に設定しますが、その動作はいくつかの点で異なっています。詳細については、<xref linkend="sec-ha-fencing-config"/>を参照してください。
  </para>
  <procedure xml:id="pro-ha-config-hawk-stonith">
   <title>STONITHリソースの追加</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面には、すべてのタイプのリソースのカテゴリと、定義済みのすべてのリソースが表示されます。
    </para>
   </step>
   <step>
    <para>
     <guimenu>プリミティブ</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     リソースを次のとおり指定します。
    </para>
    <substeps performance="required">
     <step>
      <para>
       固有の<guimenu>リソースID</guimenu>を入力します。
      </para>
     </step>
     <step>
      <para>
       <guimenu>クラス</guimenu>リストで、リソースエージェントクラスとして<guimenu>stonith</guimenu>を選択します。
      </para>
     </step>
     <step>
      <para>
       <guimenu>タイプ</guimenu>リストから、使用しているSTONITHデバイスのSTONITHプラグインを選択します。このプラグインの簡単な説明が下に表示されます。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Hawkは、自動的にそのリソースに必要な<guimenu>パラメータ</guimenu>を表示します。それぞれのパラメータの値を入力します。
    </para>
   </step>
   <step>
    <para>
     Hawkは、重要なリソース<guimenu>操作</guimenu>を表示し、デフォルト値を提案します。ここで設定を変更しない場合、確定するとすぐに、Hawkは提案した操作およびデフォルト値を追加します。
    </para>
   </step>
   <step>
    <para>
     特に変更する理由がない場合には、<guimenu>メタ属性</guimenu>の設定はデフォルトを採用してください。
    </para>
   </step>
   <step>
    <para>
     変更を確認して、STONITHリソースを作成します。
    </para>
   </step>
  </procedure>
  <para>
   フェンシングを設定するには、制約の追加とクローンの使用のいずれか、またはその両方を行います。詳細については、<xref linkend="cha-ha-fencing"/>を参照してください。
  </para>
 </section>

 <section xml:id="sec-ha-config-hawk-templates">
  <title>リソーステンプレートの使用</title>
  <para>
   類似した設定のリソースを多く作成する最も簡単な方法は、リソーステンプレートを定義することです。リソーステンプレートを定義した後は、プリミティブの中や、特定のタイプの制約で参照できるようになります。リソーステンプレートの機能と使用方法の詳細については、<xref linkend="sec-ha-config-basics-constraints-templates"/>を参照してください。
  </para>
  <procedure xml:id="pro-ha-config-hawk-templates-create">
   <title>リソーステンプレートの作成</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面には、すべてのタイプのリソースのカテゴリに加えて、<guimenu>テンプレート</guimenu>カテゴリが表示されます。
    </para>
   </step>
   <step>
    <para>
     <guimenu>テンプレート</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     <guimenu>テンプレートID</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     プリミティブを指定するリソーステンプレートを指定します。<xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>に従って、<xref linkend="step-ha-config-hawk-primitives-start" xrefstyle="select:label"/>を開始します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>リソースの作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、リソーステンプレートが正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk - リソーステンプレート</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-rsc-template.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-rsc-template.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <procedure xml:id="pro-ha-config-hawk-templates-use">
   <title>リソーステンプレートの参照</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     新しく作成したリソーステンプレートをプリミティブで参照するには、次の手順に従います。
    </para>
    <substeps performance="required">
     <step>
      <para>
       左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面に、すべてのタイプのリソースのカテゴリが表示されます。定義済みのすべてのリソースが表示されます。
      </para>
     </step>
     <step>
      <para>
       <guimenu>プリミティブ</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
      </para>
     </step>
     <step>
      <para>
       固有の<guimenu>リソースID</guimenu>を入力します。
      </para>
     </step>
     <step>
      <para>
       <guimenu>テンプレートの使用</guimenu>をオンにして、ドロップダウンリストから参照するテンプレートを選択します。
      </para>
     </step>
     <step>
      <para>
       必要であれば、さらに<guimenu>パラメータ</guimenu>、<guimenu>操作</guimenu>、または<guimenu>メタ属性</guimenu>を<xref linkend="pro-ha-config-hawk-primitives"/>で説明した方法で指定します。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     新しく作成したリソーステンプレートをコロケーションまたは順序の制約で参照するには、<xref linkend="pro-ha-config-hawk-constraints-collocation-order"/>で説明する手順に従います。
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="sec-ha-config-hawk-constraints">
  <title>リソース制約の設定</title>
  <para>
   すべてのリソースを設定したら、クラスタがそれらを扱う方法を指定します。リソース制約を使えば、リソースがどのクラスタノードで実行されるか、リソースをどの順番でロードするか、そして特定のリソース型のどのリソースに依存するかを指定することができます。
  </para>
  <para>
   利用可能な制約のタイプの概要は、<xref linkend="sec-ha-config-basics-constraints-types"/>を参照してください。制約を定義する際には、スコアも指定する必要があります。スコアおよびクラスタでのそれらの意味の詳細については、<xref linkend="sec-ha-config-basics-constraints-scores"/>を参照してください。
  </para>
  <para>
   次に、さまざまな制約タイプの作成方法について説明します。
  </para>




  <procedure xml:id="pro-ha-config-hawk-constraints-location">
   <title>場所の制約を追加または変更する</title>
   <para>
    場所の制約の場合には、制約ID、リソース、スコアおよびノードを指定します。
   </para>

   <step xml:id="step-ha-config-hawk-constraints-start">
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>制約</guimenu>を選択します。<guimenu>制約</guimenu>画面に、すべてのタイプの制約のカテゴリが表示されます。定義済みのすべての制約が表示されます。
    </para>
   </step>
   <step>
    <para>
     新しい<guimenu>場所</guimenu>制約を追加するには、対応するカテゴリのプラスアイコンをクリックします。
    </para>
    <para>
     既存の制約を変更するには、制約の隣にあるレンチアイコンをクリックして、<guimenu>制約の編集</guimenu>を選択します。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>制約ID</guimenu>を入力します。既存の制約を変更する場合には、IDはすでに定義されています。
    </para>
   </step>
   <step xml:id="step-ha-config-hawk-constraints-stop">
    <para>
     制約を設定する<guimenu>リソース</guimenu>を選択します。リストには、そのクラスタに設定されているすべてのリソースのIDが表示されます。
    </para>
   </step>
   <step>
    <para>
     制約の<guimenu>Score (スコア)</guimenu>を設定します。正の値は、次のステップで指定する<guimenu>ノード</guimenu>でリソースを実行できることを示します。負の値は、リソースをそのノードで実行すべきではないことを示します。スコアを<literal>INFINITY</literal>に設定すれば、リソースはこのノードで実行されるように強制されます。<literal>-INFINITY</literal>に設定すれば、リソースはそのノードで実行してはならないことになります。
    </para>
   </step>
   <step>
    <para>
     制約を設定する<guimenu>ノード</guimenu>を選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>制約の作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、制約が正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk - 場所制約</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <procedure xml:id="pro-ha-config-hawk-constraints-collocation-order">
   <title>コロケーションまたは順序の制約を追加または変更する</title>
   <para>
    どちらの制約の場合でも、制約IDとスコアを指定してから、リソースを依存チェーンに追加します。
   </para>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>制約</guimenu>を選択します。<guimenu>制約</guimenu>画面には、すべてのタイプの制約のカテゴリと、定義済みのすべての制約が表示されます。
    </para>
   </step>
   <step>
    <para>
     新しい<guimenu>コロケーション</guimenu>または<guimenu>順序</guimenu>制約を追加するには、対応するカテゴリのプラスアイコンをクリックします。
    </para>
    <para>
     既存の制約を変更するには、制約の隣にあるレンチアイコンをクリックして、<guimenu>制約の編集</guimenu>を選択します。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>制約ID</guimenu>を入力します。既存の制約を変更する場合には、IDはすでに定義されています。
    </para>
   </step>
   <step>
    <para>
     <guimenu>スコア</guimenu>を定義します。
    </para>
    <para>
     コロケーション制約の場合には、スコアは複数のリソースの場所のリレーションシップを決定します。正の値は、リソースを同じノードで実行するべきであることを示します。負の値は、リソースを同じノードで実行するべきではないことを示します。スコアを<literal>INFINITY</literal>に設定すれば、リソースは同じノードで実行されるように強制されます。<literal>-INFINITY</literal>に設定すれば、リソースは同じノードで実行してはならないことになります。スコアと他の要因との組み合わせによって、ノードの配置先が決定します。
    </para>
    <para>
     順序の制約の場合、0より大きなスコアなら必須となります。そうでなければ、単なる提案として扱われます。デフォルト値は、<literal>INFINITY</literal>です。
    </para>
   </step>
   <step>
    <para>
     順序の制約の場合、オプション<guimenu>シンメトリック</guimenu>は常に有効にしていてください。これは、リソースを停止するときには逆順で行うという指定です。
    </para>
   </step>
   <step>
    <para>
     制約のリソースを定義するには、次の手順に従います。
    </para>
    <substeps performance="required">
     <step>
      <para>
       <guimenu>リソースを制約に追加</guimenu>リストからリソースを選択します。リストには、そのクラスタに設定されているすべてのリソースとリソーステンプレートのIDが表示されます。
      </para>
     </step>
     <step>
      <para>
       選択したリソースを追加するには、リストの隣のプラスアイコンをクリックします。下に新しいリストが表示されます。次のリソースをリストから選択します。コロケーション制約と順序の制約はどちらもリソース間の依存関係を定義するのものなので、少なくとも2つのリソースが必要です。
      </para>
     </step>
     <step>
      <para>
       <guimenu>リソースを制約に追加</guimenu>リストから残りのリソースのいずれかを選択します。リソースを追加するには、プラスアイコンをクリックします。
      </para>
      <para>
       これで、依存チェーンに2つのリソースが追加されました。
      </para>
      <para>
       順序の制約の場合には、一番上のリソースが最初に起動され、その下のリソースがその次に起動される、といった順序になります。通常、リソースを停止するときには逆順で行われます。
      </para>
      <para>
       ただし、コロケーション制約を定義した場合、リソース間に矢印が表示され、依存関係を示しますが、これは起動順ではありません<emphasis/>。最上位のリソースは次のリソースなど順に依存するため、クラスタはまず最後のリソースを置く場所を決め、次にその決定に基づいて依存するものを配置していきます。制約が満たされないと、クラスタは依存するリソースが実行しないようにすることがあります。
      </para>
     </step>
     <step>
      <para>
       コロケーションまたは順序の制約に必要なだけ、リソースを追加します。
      </para>
     </step>
     <step>
      <para>
       2つのリソースの順序を交換するには、リソースの右側にある二重線の矢印をクリックすると、依存チェーンの中でリソースが交換されます。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     必要であれば、リソースごとに、役割(<literal>Master</literal>、<literal>Slave</literal>、<literal>Started</literal>、<literal>Stopped</literal>)などのパラメータをさらに指定します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>制約の作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、制約が正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk - コロケーション制約</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-colloc-constraint.png" width="90%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-colloc-constraint.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   コロケーションまたは順序の制約を定義するための別のフォーマットとして、リソースセットを使用することができます。これらは、グループとして同じ意味論に従います。
  </para>
  <procedure xml:id="pro-ha-config-hawk-constraints-sets">
   <title>コロケーションまたは順序の制約のためにリソースセットを使用する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-config-hawk-constraints-collocation-order"/>で説明した方法に従って、コロケーションまたは順序の制約を定義します。
    </para>
   </step>
   <step>
    <para>
     リソースを依存チェーンに追加した場合には、右側にあるチェーンアイコンをクリックして、リソースをリソースセットに入れることができます。リソースセットは、セットに属しているリソースの周囲のフレームによって示されます。
    </para>
   </step>
   <step>
    <para>
     また、リソースセットに複数のリソースを追加したり、複数のリソースセットを作成したりすることもできます。
    </para>
   </step>
   <step>
    <para>
     リソースセットからリソースを取り出すには、そのリソースの上にあるハサミアイコンをクリックします。
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
    <para>
     リソースはセットから除かれて、依存チェーンの中の元の場所に戻ります。
    </para>
   </step>
   <step>
    <para>
     変更を確認して、制約の設定を完了します。
    </para>
   </step>
  </procedure>
  <para>
   制約の設定の詳細や、順序およびコロケーションの基本的な概念についての詳細なバックグラウンド情報は、<link xlink:href="http://www.clusterlabs.org/doc/"/>で提供されているドキュメントを参照してください。
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
      『<citetitle>Pacemaker Explained</citetitle>』の「<citetitle>Resource Constraints</citetitle>」の章
    </para>
   </listitem>
   <listitem>
    <para>
     『<citetitle>Colocation Explained</citetitle>』
    </para>
   </listitem>
   <listitem>
    <para>
     『<citetitle>オーダーの概要</citetitle>』
    </para>
   </listitem>
  </itemizedlist>
  <procedure xml:id="pro-ha-config-hawk-constraints-remove">
   <title>制約の削除</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>制約</guimenu>を選択します。<guimenu>制約</guimenu>画面には、すべてのタイプの制約のカテゴリと、定義済みのすべての制約が表示されます。
    </para>
   </step>
   <step>
    <para>
     制約の隣のレンチアイコンをクリックして<guimenu>制約の削除</guimenu>を選択します。
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="sec-ha-config-hawk-failover">
  <title>リソースフェールオーバーノードの指定</title>
  <para>
   リソースに障害が発生すると、自動的に再起動されます。現在のノードで再起動できない場合、または現在のノードでN回失敗した場合は、別のノードへのフェールオーバーが試行されます。新しいノードへのマイグレートを行う基準(<literal>migration-threshold</literal>)となるリソースの失敗数を定義できます。クラスタ内に3つ以上ノードがある場合、特定のリソースのフェールオーバー先のノードはHigh Availabilityソフトウェアにより選択されます。
  </para>
  <para>
   リソースがフェールオーバーする特定のノードを前もって指定するには、次の手順に従います。
  </para>
  <procedure xml:id="pro-ha-config-hawk-failover">
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-config-hawk-constraints-location"/>に記されている手順に従って、そのリソースの場所の制約を設定します。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>に説明されている手順に従ってリソースに<literal>migration-threshold</literal>メタ属性を追加し、<xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>migration-thresholdの<guimenu>値</guimenu>を入力します。INFINITYではない正の値を指定する必要があります。
    </para>

   </step>
   <step>
    <para>
     リソースの失敗回数を自動的に失効させる場合は、<xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>、<xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>に記されている手順に従って<literal>failure-timeout</literal>メタ属性をそのリソースに追加し、失敗タイムアウトの<guimenu>値</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     リソースの初期設定として、追加のフェールオーバーノードを指定する場合は、追加の場所の制約を作成します。
    </para>
   </step>
  </procedure>
  <para>
   マイグレーションしきい値と失敗カウントに関連したプロセスフローは、<xref linkend="ex-ha-config-basics-failover"/>に示されています。
  </para>
  <para>
   リソースの失敗回数は、自動的に期限切れにする代わりに、いつでも、手動でクリーンアップすることもできます。詳細については、<xref linkend="sec-ha-config-hawk-cleanup"/>を参照してください。
  </para>
 </section>

 <section xml:id="sec-ha-config-hawk-failback">
  <title>リソースフェールバックノードの指定(リソースの固着性)</title>
  <para>
   ノードがオンライン状態に戻り、クラスタ内にある場合は、リソースが元のノードにフェールバックすることがあります。このことを防ぐ、またはリソースのフェールバック先として別のノードを指定するには、リソースの固着性の値を変更します。リソースの固着性は、リソースを作成するとき、または作成した後のどちらでも指定できます。
  </para>
  <para>
   さまざまなリソース固着性値の意味については、<xref linkend="sec-ha-config-basics-failback"/>を参照してください。
  </para>



  <procedure xml:id="pro-ha-config-hawk-stickiness">
   <title>リソースの固着性を指定する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>、<xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>に従って、<literal>resource-stickiness</literal>メタ属性をリソースに追加します。
    </para>

   </step>
   <step>
    <para>
     リソースの固着性として、<literal>-INFINITY</literal>と<literal>INFINITY</literal>の間の値を指定します。 
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="sec-ha-config-hawk-utilization">
  <title>負荷インパクトに基づくリソース配置の設定</title>
  <para>
   すべてのリソースが同等ではありません。Xenゲストなどの一部のリソースでは、そのホストであるノードがリソースの容量要件を満たす必要があります。配置したリソースの要件の合計が提供容量よりも大きくなった場合には、リソースのパフォーマンスが低下するか、または失敗します。
  </para>
  <para>
   これを考慮に入れて、High Availability Extensionでは、次のパラメータを指定できます。
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     一定のノードが<emphasis>提供する</emphasis>容量
    </para>
   </listitem>
   <listitem>
    <para>
     一定のリソースが<emphasis>要求する</emphasis>容量
    </para>
   </listitem>
   <listitem>
    <para>
     リソースの配置に関する全体的なストラテジ
    </para>
   </listitem>
  </orderedlist>
  <para>
   使用属性は、リソースの要件と、ノードが提供する容量の両方を設定するために使用されます。High Availability Extensionには、ノードの容量とリソースの要件を自動的に検出し、設定する手段も用意されています。詳細と設定例については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
  </para>
  <para>
   ノードの容量値(使用属性によって定義されたもの)、およびそのノードで実行されているリソースが現在消費している容量を表示するには、Hawkの<guimenu>クラスタの状態</guimenu>画面に切り替えます。対象とするノードを選択し、そのノードの隣のレンチアイコンをクリックして、<guimenu>詳細の表示</guimenu>を選択します。
  </para>
  <figure>
   <title>Hawk - ノードの容量値の表示</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-node-utilization.png" width="60%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-node-utilization.png" width="45%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   ノードが提供する容量とリソースが要求する容量を設定した後、グローバルクラスタオプションで配置ストラテジを設定する必要があります。これを設定しないと、容量の設定は有効になりません。負荷のスケジュールに使用できるストラテジがいくつかあります。たとえば、負荷をできるだけ少ない数のノードに集中したり、使用可能なすべてのノードに均等に分散できます。詳細については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
  </para>
  <procedure xml:id="pro-ha-config-hawk-placement">
   <title>配置ストラテジを設定する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>クラスタのプロパティ</guimenu>を選択して、グローバルクラスタオプションとそれらの現在の値を表示します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>新しいプロパティの追加</guimenu>ドロップダウンリストから、<literal>placement-strategy</literal>を選択します。
    </para>
   </step>
   <step>
    <para>
     要件に応じて、<guimenu>配置ストラテジ</guimenu>を適切な値に設定します。
    </para>
   </step>
   <step>
    <para>
     プラスアイコンをクリックして、新しいクラスタプロパティ(値を含む)を追加します。
    </para>
   </step>
   <step>
    <para>
     変更内容を確認します。
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="sec-ha-config-hawk-monitor">
  <title>リソース監視の設定</title>
  <para>
   High Availability Extensionは、ノードの障害を検出できるだけではなく、ノードの個々のリソースで障害が発生した場合、そのことも検出できます。リソースが実行中であるかどうか確認するには、そのリソースにリソースの監視を設定します。リソースを監視するには、タイムアウト、開始遅延のいずれか、または両方と、間隔を指定します。間隔の指定によって、CRMにリソースステータスの確認頻度を指示します。<literal>start</literal>または<literal>stop</literal>操作に対する<literal>Timeout</literal>など、特定のパラメータも設定できます。
  </para>
  <procedure xml:id="pro-ha-config-hawk-operations">
   <title>監視操作を追加または変更する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面には、すべてのタイプのリソースのカテゴリと、定義済みのすべてのリソースが表示されます。
    </para>
   </step>
   <step>
    <para>
     変更するリソースを選択し、その隣のレンチアイコンをクリックして、<guimenu>リソースの編集</guimenu>を選択します。リソースの定義が表示されます。Hawkは、重要なリソース操作(<literal>monitor</literal>、<literal>start</literal>、<literal>stop</literal>)を自動的に表示し、デフォルト値を提案します。
    </para>
   </step>
   <step>
    <para>
     操作の値を変更するには
    </para>
    <substeps performance="required">
     <step>
      <para>
       操作の隣のペンアイコンをクリックします。
      </para>
     </step>
     <step>
      <para>
       表示されるダイアログで、次の値を指定します。
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para>
         <literal>timeout</literal>値を秒単位で入力します。指定したタイムアウトを過ぎると、操作は<literal>failed</literal>と見なされます。PEは何を行うか、あるいは監視操作の<guimenu>On Fail (障害発生時の動作)</guimenu>フィールドで指定した内容を実行するかどうかを判断します。
        </para>
       </listitem>
       <listitem>
        <para>
         監視操作の場合には、<literal>interval</literal>に監視の間隔を秒単位で入力します。
        </para>
       </listitem>
      </itemizedlist>
      <para>
       必要な場合には、<guimenu>監視</guimenu>ダイアログの下部にある空のドロップダウンボックスを使用して、<guimenu>失敗の場合</guimenu>(このアクションが失敗した場合の処理)などのパラメータを追加します。または<guimenu>必要</guimenu>(このアクションを発生する前に満たす必要がある条件)などのパラメータを追加します。
      </para>
      <informalfigure>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-monitor-op.png" width="70%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-monitor-op.png" width="60%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step>
      <para>
       変更を確認してダイアログを閉じ、<guimenu>リソースの編集</guimenu>画面に戻ります。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     操作を完全に削除するには、その隣のマイナスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     他の操作を追加するには、空のドロップダウンボックスをクリックし、操作を選択します。操作のデフォルト値が表示されます。必要に応じて、ペンアイコンをクリックしてこれを変更します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>変更の適用</guimenu>をクリックして、設定を完了します。画面上のメッセージが、リソースが正常に更新されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <para>
   リソースモニタが障害を検出した場合の処理については、<xref linkend="sec-ha-config-basics-monitoring"/>を参照してください。
  </para>
  <para>
   リソースの障害を表示するには、Hawkで<guimenu>クラスタステータス</guimenu>画面に切り替えて、関係するリソースを選択します。リソースの隣のレンチアイコンをクリックして、<guimenu>詳細の表示</guimenu>を選択します。
  </para>
 </section>

 <section xml:id="sec-ha-config-hawk-group">
  <title>クラスタリソースグループの構成</title>
  <para>
   クラスタリソースの中には、他のコンポーネントやリソースに依存しており、各コンポーネントや各リソースを特定の順序で開始することや、同じサーバ上で一緒に実行することが必要なものもあります。この構成を簡単にするため、グループのコンセプトをサポートしています。
  </para>
  <para>
   リソースグループの例と、グループとそのプロパティの詳細について、<xref linkend="sec-ha-config-basics-resources-advanced-groups"/>を参照してください。
  </para>
  <note>
   <title>空のグループ</title>
   <para>
    グループには1つ以上のリソースを含む必要があります。空の場合は設定は無効になります。Hawkでは、グループの作成中にプリミティブを作成したり変更したりすることはできません。グループを追加する前に、プリミティブを作成し、必要に応じて設定しておいてください。詳細については、<xref linkend="pro-ha-config-hawk-primitives"/>を参照してください。
   </para>
  </note>

  <procedure xml:id="pro-ha-config-hawk-group">
   <title>リソースグループを追加する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面には、すべてのタイプのリソースのカテゴリと、定義済みのすべてのリソースが表示されます。
    </para>
   </step>
   <step>
    <para>
     <guimenu>グループ</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>グループID</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     グループのメンバーを定義するには<guimenu>使用可能なプリミティブ</guimenu>のリストから1つまたは複数のエントリを選択し、&lt; アイコンをクリックして、<guimenu>グループの子</guimenu>リストに追加します。新しいグループメンバーは、リストの一番下に追加されます。グループメンバーの順序を定義するには、この時点でグループメンバーの追加および削除を必要な順序で行う必要があります。
    </para>
   </step>
   <step>
    <para>
     必要に応じ、<xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select: lable title nopage"/>、<xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>に説明されている手順で、<guimenu>メタ属性</guimenu>を変更または追加します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>グループの作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、グループが正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure>
   <title>Hawk - リソースのグループ</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-rsc-group.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-rsc-group.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>

 <section xml:id="sec-ha-confighawk-clone">
  <title>クローンリソースの設定</title>
  <para>
   特定のリソースをクラスタ内の複数のノードで同時に実行することが必要な場合には、それらのリソースをクローンとして設定します。たとえば、STONITHのようなりソースや、OCFS2のようなクラスタファイルシステムのクローンを作成することには意味があります。提供されているどのリソースも、クローンとして設定できます。クローンは、リソースのリソースエージェントによってサポートされます。クローンリソースは、動作しているノードに応じて設定を変えることもできます。
  </para>
  <para>
   利用可能なリソースクローンのタイプの概要は、<xref linkend="sec-ha-config-basics-resources-advanced-clones"/>を参照してください。
  </para>
  <note>
   <title>クローンのためのサブリソース</title>
   <para>
    クローンには、プリミティブまたはグループのいずれかをサブリソースとして含めることができます。Hawkでは、クローンの作成中にプリミティブを作成したり変更したりすることはできません。クローンを追加する前に、プリミティブを作成し、必要に応じて設定しておいてください。詳細については、<xref linkend="pro-ha-config-hawk-primitives"/>または<xref linkend="pro-ha-config-hawk-group"/>を参照してください。
   </para>
  </note>
  <procedure xml:id="pro-ha-config-hawk-clone">
   <title>クローンを追加または変更する</title>
   <step>
    <para>
     <xref linkend="sec-ha-config-hawk-intro-connect"/>で説明したように、Webブラウザを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>リソース</guimenu>を選択します。<guimenu>リソース</guimenu>画面には、すべてのタイプのリソースのカテゴリと、定義済みのすべてのリソースが表示されます。
    </para>
   </step>
   <step>
    <para>
     <guimenu>クローン</guimenu>カテゴリを選択し、プラスアイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>クローンID</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>子リソース</guimenu>リストから、クローンのサブリソースとして使用するプリミティブまたはグループを選択します。
    </para>
   </step>
   <step>
    <para>
     必要に応じ、<xref linkend="pro-ha-config-hawk-primitives" xrefstyle="select:label title nopage"/>、<xref linkend="step-ha-config-hawk-meta-attr" xrefstyle="select:label"/>に説明されている手順で、<guimenu>メタ属性</guimenu>を変更または追加します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>クローンを作成</guimenu>をクリックして、設定を完了します。画面上のメッセージが、クローンが正常に作成されたかどうかを表示します。
    </para>
   </step>
  </procedure>
  <figure>
   <title>Hawk - クローンリソース</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-clone.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-clone.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </section>
</section>
