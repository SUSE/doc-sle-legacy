<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter>
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="ha_config_gui.xml" xml:id="cha-ha-configuration-gui"><?dbfo-need height="20em"?><?dbfo-need height="20em"?><title>クラスタリソースの設定と管理(GUI)</title><info><abstract>
  <para>
   この章では、Pacemaker GUIを紹介し、グローバルクラスタオプションの変更、基本的なリソースと高度なリソース(グループとクローン)の作成、制約の設定、フェールオーバーノードとフェールバックノードの指定、リソースモニタリングの設定、リソースの始動、クリーンアップ、または削除、および手動によるリソースの移行など、クラスタリソースの設定と管理に必要な基本的な作業について説明します。
  </para>
 </abstract></info>
 
 
 <para>
  GUIのサポートは、2つのパッケージで提供されます。<systemitem class="resource">pacemaker-mgmt</systemitem>パッケージには、GUIのバックエンド(<systemitem class="daemon">mgmtd</systemitem>デーモン)が含まれています。このパッケージは、GUIで接続するすべてのクラスタノードにインストールする必要があります。GUIを実行するコンピュータには、<systemitem class="resource">pacemaker-mgmt-client</systemitem>パッケージをインストールします。
 </para>
 <note>
  <title>ユーザの認証</title>
  <para>
   Pacemaker GUIからクラスタにログインするには、そのユーザが<systemitem class="groupname">haclient</systemitem>グループのメンバである必要があります。インストール時には<systemitem class="username">hacluster</systemitem>という名前のlinuxユーザが作成され、このユーザは<systemitem class="groupname">haclient</systemitem>グループに追加されます。
  </para>
  <para>
   Pacemaker GUIを使用する前に、<systemitem>hacluster</systemitem>ユーザのパスワードを設定するか、<systemitem class="groupname">haclient</systemitem>グループのメンバとして新しいユーザを作成してください。
  </para>
  <para>
   Pacemaker GUIを使用して、接続先の各ノードでこれを実行します。
  </para>
 </note>



 <section xml:id="sec-ha-configuration-gui-intro">
  <title>Pacemaker GUI - 概要</title>

  <para>
   Pacemaker GUIを開始するには、コマンドラインに「<command>crm_gui</command>」と入力します。設定と管理のオプションにアクセスするには、クラスタにログインする必要があります。
  </para>

  <section xml:id="sec-ha-configuration-gui-intro-connect">
   <title>クラスタにログインする</title>
   <para>
    クラスタに接続するには、<menuchoice><guimenu>接続</guimenu><guimenu>ログイン</guimenu></menuchoice>の順に選択します。デフォルトでは、<guimenu>サーバ</guimenu>フィールドにローカルホストのIPアドレスと<systemitem>hacluster</systemitem>が<guimenu>ユーザ名</guimenu>として表示されています。ユーザのパスワードを入力して続行します。
   </para>
   <figure pgwide="0">
    <title>クラスタへの接続</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-login.png" width="45%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-login.png" width="45%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    Pacemaker GUIをリモートで実行している場合は、クラスタノードのIPアドレスを<guimenu>サーバ</guimenu>として入力します。<guimenu>ユーザ名</guimenu>に、<systemitem>haclient</systemitem>グループに属する他の任意のユーザ使用して、クラスタに接続することもできます。
   </para>
  </section>

<?dbfo-need height="20em"?>



  <section xml:id="sec-ha-configuration-gui-intro-main">
   <title>メインウィンドウ</title>
   <para>
    接続後、メインウィンドウが開きます。
   </para>
   <figure pgwide="0">
    <title>Pacemaker GUI - メインウィンドウ</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main.png" width="75%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <note>
    <title>Pacemaker GUIで利用できる機能</title>
    <para>
     デフォルトでは、<systemitem class="username">root</systemitem>または<systemitem class="username">hacluster</systemitem>としてログインしたユーザは、すべてのクラスタ設定作業への、完全な読み込み/書き込みのアクセス権を持ちます。ただし、<xref linkend="cha-ha-acl" xrefstyle="select:title"/>を使用すれば、より詳細なアクセス権限を定義することができます。
    </para>
    <para>
     CRMでACLが有効になっている場合、Pacemaker GUIで利用できる機能は、割り当てられたユーザ役割とアクセスパーミッションごとに異なります。
    </para>
   </note>
   <para>
    CRM、リソース、ノード、制約などのクラスタコンポーネントを表示または変更するには、左のペインにある<guimenu>設定</guimenu>カテゴリの対応するサブエントリを選択し、使用可能になったオプションを右のペインで使用します。さらに、Pacemaker GUIでは、サブ項目<guimenu>リソースのデフォルト</guimenu>、<guimenu>操作のデフォルト</guimenu>、<guimenu>ノード</guimenu>、<guimenu>リソース</guimenu>、および<guimenu>制約</guimenu>に関して、CIBのXMLフラグメントを容易に表示、編集、インポート、およびエクスポートできます。<guimenu>設定</guimenu>のサブ項目のどれかを選択し、ウィンドウの上右隅で、<menuchoice><guimenu>表示</guimenu><guimenu>XMLモード</guimenu></menuchoice>の順に選択します。
   </para>
   <para>
    すでにリソースを設定済みの場合は、左ペインの<guimenu>管理</guimenu>カテゴリをクリックして、クラスタとそのリソースのステータスを表示します。この表示画面では、ノードを<literal>standby</literal>に設定したり、ノードの管理ステータス(現在、ノードがクラスタで管理されているかどうか)を変更することもできます。リソースの主要機能(リソースの起動、停止、クイックアップ、または移行)にアクセスするには、右のペインでリソースを選択し、ツールバーにあるアイコンを使用します。または、リソースを右クリックして、コンテキストメニューから該当するメニュー項目を選択します。
   </para>
   <para>
    Pacemaker GUIでは、さまざまな表示モードに切り替えて、ソフトウェアの振る舞いを操作したり、一定の側面を表示/非表示にすることもできます。
   </para>
   <variablelist>
    <varlistentry>
     <term>シンプルモード</term>
     <listitem>
      <para>
       ウィザードのようなモードで、リソースを追加できます。リソースの作成と変更では、サブオブジェクトに関して頻繁に使用されるタブが表示され、タブからそのタイプのオブジェクトを直接追加できます。
      </para>
      <para>
       左ペインで<guimenu>CRM Config</guimenu>エントリを選択すると、すべての使用可能なグローバルクラスタオプションを表示し、変更できます。右ペインには、現在設定されている値が表示されます。オプションに特定の値が設定されていない場合は、デフォルト値が表示されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>エキスパートモード</term>
     <listitem>
      <para>
       ウィザード方式またはダイアログウィンドウでリソースを追加できます。リソースの作成および変更時には、特定タイプのサブオブジェクトがすでにCIBに存在する場合は、該当するタブだけが表示されます。新しいサブオブジェクトの追加時には、オブジェクトタイプを選択するように促され、サポートされているすべてのタイプのサブオブジェクトを追加できます。
      </para>
      <para>
       左ペインで<guimenu>CRM Config</guimenu>を選択すると、実際に設定されているグローバルクラスタオプションの値だけが表示されます。自動的にデフォルトを使用するクラスタオプションは、(値が設定されていないので)すべて非表示です。このモードでは、グローバルクラスタオプションは、個々の設定ダイアログからのみ変更できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ハックモード</term>
     <listitem>
      <para>
       エキスパートモードと同じ機能があります。設定をより動的にする特定のルールを含む属性セットを追加できます。たとえば、リソースに、そのホストノードによって異なるインスタンス属性を持たせることができます。さらに、メタ属性セットに時間ベースのルールを追加して、いつ属性を有効にするか決定することができます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    ウィンドウのステータスバーにも、現在アクティブなモードが表示されます。
   </para>
   <para>
    以降のセクションでは、クラスタオプションとリソースの設定時に必要な主要作業について説明し、Pacemaker GUIでリソースを管理する方法を示します。特に説明されない限り、ステップバイステップの説明は、簡易モードで実行される手順を反映しています。
   </para>
  </section>
 </section>
 <section xml:id="sec-ha-config-gui-global">
  <title>グローバルクラスタオプションの設定</title>

  <para>
   グローバルクラスタオプションは、一定の状況下でのクラスタの動作を制御します。これらは、セットにグループ化され、Pacemaker GUIや<command>crm</command>シェルなどのクラスタ管理ツールで表示し、変更することができます。事前に定義されている値は、ほとんどの場合、そのまま保持できます。ただし、クラスタの主要機能を正しく機能させるには、クラスタの基本的なセットアップ後に、次のパラメータを調整する必要があります。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <xref linkend="sec-ha-config-basics-global-quorum" xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-ha-config-basics-global-stonith" xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>

  <procedure xml:id="pro-ha-config-gui-global">
   <title>グローバルクラスタオプションを変更する</title>
   <step>
    <para>
     <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
    </para>
   </step>
   <step>
    <para>
     <menuchoice><guimenu>表示</guimenu><guimenu>簡易モード</guimenu></menuchoice>の順に選択します。
    </para>
   </step>
   <step>
    <para>
     左ペインで、<guimenu>CRM Config</guimenu>を選択して、グローバルクラスタオプションとそれらの現在の値を表示します。
    </para>
   </step>
   <step>
    <para>
     クラスタ要件に応じて、<guimenu>クォーラムなしポリシー</guimenu>を適切な値に設定します。
    </para>
   </step>
   <step>
    <para>
     なんらかの理由でフェンシングを無効にする必要がある場合は、<guimenu>stonith-enabled</guimenu>の選択を解除します。
    </para>
    <important>
     <title>STONITHがない場合はサポートなし</title>
     <para>
      STONITHが有効でないクラスタはサポートされません。
     </para>
    </important>
   </step>
   <step>
    <para>
     <guimenu>適用</guimenu>をクリックして、変更を確認します。
    </para>
   </step>
  </procedure>

  <para>
   左ペインの<guimenu>CRM Config</guimenu>を選択して<guimenu>デフォルト</guimenu>をクリックすると、すべてのオプションを、いつでもデフォルト値に戻すことができます。
  </para>
 </section>



 <section xml:id="sec-ha-config-gui-resources">
  <title>クラスタリソースの設定</title>

  <para>
   クラスタの管理者は、クラスタ内のサーバ上の各リソースや、サーバ上で実行する各アプリケーションに対してクラスタリソースを作成する必要があります。クラスタリソースには、Webサイト、電子メールサーバ、データベース、ファイルシステム、仮想マシン、およびユーザが常時使用できるようにする他のサーバベースのアプリケーションまたはサービスなどが含まれます。
  </para>

  <para>
   作成できるリソースタイプの概要については、<xref linkend="sec-ha-config-basics-resources-types"/>を参照してください。
  </para>

  <section xml:id="sec-ha-configuration-create">
   <title>単純なクラスタリソースの作成</title>
   <para>
    最も基本的なタイプのリソースを作成するには、次の手順に従います。
   </para>
   <procedure xml:id="pro-ha-config-gui-primitives">
    <title>プリミティブリソースを追加する</title>
    <step xml:id="st-ha-configuration-create-start">
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで、<guimenu>リソース</guimenu>を選択し、<menuchoice> <guimenu>追加</guimenu><guimenu>プリミティブ</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      次のダイアログで、リソースに次のようなパラメータを設定します。
     </para>
     <substeps performance="required">
      <step>
       <para>
        リソースに固有の<guimenu>ID</guimenu>を入力します。
       </para>
      </step>
      <step xml:id="step-ha-config-gui-primitives-start">
       <para>
        <guimenu>クラス</guimenu>リストから、そのリソースに使用するリソースエージェントクラスを選択します。<guimenu>lsb</guimenu>、<guimenu>ocf</guimenu>、<guimenu>service</guimenu>、または<guimenu>stonith</guimenu>を選択できます。 詳細については、<xref linkend="sec-ha-config-basics-raclasses"/>を参照してください。
       </para>
      </step>
      <step>
       <para>
        <guimenu>ocf</guimenu>をクラスとして選択した場合、OCFリソースエージェントの<guimenu>プロバイダ</guimenu>も指定します。OCFの指定によって、複数のベンダが同じリソースエージェントを提供できるようになります。
       </para>
      </step>
      <step>
       <para>
        <guimenu>タイプ</guimenu>リストから、使用するリソースエージェントを選択します(たとえば<guimenu>IPaddr</guimenu>または<guimenu>Filesystem</guimenu>)。このリソースエージェントの簡単な説明を次に表示します。
       </para>
       <para>
        <guimenu>タイプ</guimenu>リストに表示される選択肢は、選択した<guimenu>クラス</guimenu>(OCFリソースの場合は、<guimenu>プロバイダ</guimenu>も)によって異なります。
       </para>
      </step>
      <step>
       <para>
        <guimenu>オプション</guimenu>の下で、<guimenu>Initial state of resource (リソースの当初の状態)</guimenu>を設定します。
       </para>
      </step>
      <step>
       <para>
        リソースのヘルスが維持されているかどうかをクラスタに監視させる場合は、<guimenu>Add monitor operation(モニタ操作の追加)</guimenu>を有効にします。
       </para>
       <informalfigure>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="crmgui-primitive-basic.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="crmgui-primitive-basic.png" width="70%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </informalfigure>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      <guimenu>進む</guimenu>をクリックします。次のウィンドウには、そのリソースに定義したパラメータのサマリが表示されます。そのリソースに必要なすべての<guimenu>Instance Attributes (インスタンス属性)</guimenu>が一覧が表示されます。適切な値に設定するには、編集する必要があります。展開や設定によっては、属性の追加が必要な場合もあります。詳細については<xref linkend="pro-ha-config-gui-parameters"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>適用</guimenu>をクリックして、そのリソースの設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに新しく追加されたリソースが表示されます。
     </para>
    </step>
   </procedure>
   <para>
    リソースの作成中と作成後は、次のパラメータをリソースに追加したり、変更できます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <literal>Instance attributes</literal> - リソースが制御するサービスのインスタンスを決定します。 詳細については、<xref linkend="sec-ha-config-basics-inst-attr"/>を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>Meta attributes</literal> - 特定のリソースの処理方法をCRMに指示します。詳細については、<xref linkend="sec-ha-config-basics-meta-attr"/>を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>Operations</literal> - リソース監視に必要です。詳細については、<xref linkend="sec-ha-config-basics-operations"/>を参照してください。
     </para>
    </listitem>
   </itemizedlist>
   <procedure xml:id="pro-ha-config-gui-parameters">
    <title>メタ属性およびインスタンス属性を追加または変更する</title>
    <step>
     <para>
      Pacemaker GUIのメインウィンドウの左側のペインで、<guimenu>リソース</guimenu>をクリックして、そのクラスタに設定されているリソースを表示します。
     </para>
    </step>
    <step>
     <para>
      右側のペインで、変更するリソースを選択し、<guimenu>編集</guimenu>をクリックします(またはリソースをダブルクリックします)。次のウィンドウには、そのリソースに定義された基本的なリソースパラメータと<guimenu>メタ属性</guimenu>、<guimenu>インスタンス属性</guimenu>、または<guimenu>操作</guimenu>が表示されます。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-attributes.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-attributes.png" width="40%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      新しいメタ属性またはインスタンス属性を追加するには、該当するタブを選択して<guimenu>追加</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      追加する属性の<guimenu>名前</guimenu>を選択します。短い<guimenu>説明</guimenu>が表示されます。
     </para>
    </step>
    <step>
     <para>
      必要に応じて、属性の<guimenu>値</guimenu>を指定します。指定しなければ、その属性のデフォルト値が使用されます。
     </para>
    </step>
    <step>
     <para>
      <guimenu>OK</guimenu>をクリックして変更を確認します。新しく追加または変更された属性がタブに表示されます。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>OK</guimenu>をクリックして、そのリソースの設定を完了します。環境設定ダイアログが閉じ、メインウィンドウに変更済みのリソースが表示されます。
     </para>
    </step>
   </procedure>
   <tip>
    <title>XMLソースコード- リソース用</title>
    <para>
     Pacemaker GUIでは、定義したパラメータから生成されるXMLフラグメントを表示できます。個々のリソースについては、リソース設定ダイアログの右上隅で、<menuchoice><guimenu>表示</guimenu><guimenu>XMLモード</guimenu></menuchoice>の順に選択します。
    </para>
    <para>
     設定したすべてのリソースのXML表現にアクセスするには、左ペインで<guimenu>リソース</guimenu>をクリックし、次に、メインウィンドウの右上隅で、<menuchoice><guimenu>表示</guimenu><guimenu>XMLモード</guimenu></menuchoice>の順に選択します。
    </para>
    <para>
     XMLコードを表示しているエディタで、XML要素を<guimenu>インポート</guimenu>または<guimenu>エクスポート</guimenu>、あるいは手動でXMLコードを編集することができます。
    </para>
   </tip>
  </section>

  <section xml:id="sec-ha-configuration-stonith">
   <title>STONITHリソースの作成</title>
   <important>
    <title>STONITHがない場合はサポートなし</title>
    <para>
     STONITHを実行していないクラスタはサポートされません。
    </para>
   </important>
   <para>
    デフォルトでは、グローバルクラスタオプション<literal>stonith-enabled</literal>は<literal>true</literal>に設定されています。STONITHリソースが定義されていない場合、クラスタはどのリソースの開始も拒否します。STONITHのセットアップを完了するには、1つ以上のSTONITHリソースを構成する必要があります。STONITHは他のリソースと同様に設定しますが、その動作はいくつかの点で異なっています。詳細については、<xref linkend="sec-ha-fencing-config"/>を参照してください。
   </para>
   <procedure xml:id="pro-ha-config-gui-stonith">
    <title>STONITHリソースの追加</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで、<guimenu>リソース</guimenu>を選択し、<menuchoice> <guimenu>追加</guimenu><guimenu>プリミティブ</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      次のダイアログで、リソースに次のようなパラメータを設定します。
     </para>
     <substeps performance="required">
      <step>
       <para>
        リソースに固有の<guimenu>ID</guimenu>を入力します。
       </para>
      </step>
      <step>
       <para>
        <guimenu>クラス</guimenu>リストで、リソースエージェントクラスとして<guimenu>stonith</guimenu>を選択します。
       </para>
      </step>
      <step>
       <para>
        <guimenu>タイプ</guimenu>リストから、使用しているSTONITHデバイスのSTONITHプラグインを選択します。このプラグインの簡単な説明が下に表示されます。
       </para>
      </step>
      <step>
       <para>
        <guimenu>オプション</guimenu>の下で、<guimenu>Initial state of resource (リソースの当初の状態)</guimenu>を設定します。
       </para>
      </step>
      <step>
       <para>
        クラスタにフェンシングデバイスの監視を行わせたい場合は、<guimenu>Add monitor operation (監視操 の追加)</guimenu>を起動します。詳細については、<xref linkend="sec-ha-fencing-monitor"/>を参照してください。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      <guimenu>進む</guimenu>をクリックします。次のウィンドウには、そのリソースに定義したパラメータのサマリが表示されます。選択したSTONITHプラグインに必要なすべての<guimenu>インスタンス属性</guimenu>が一覧に表示されます。適切な値に設定するには、編集する必要があります。展開と設定によっては、監視操作のための属性を追加しなければならない場合もあります。詳細については、<xref linkend="pro-ha-config-gui-parameters"/>および<xref linkend="sec-ha-configuration-monitor"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>適用</guimenu>をクリックして、そのリソースの設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに新しく追加されたリソースが表示されます。
     </para>
    </step>
   </procedure>
   <para>
    フェンシングを設定するには、制約の追加とクローンの使用のいずれか、またはその両方を行います。詳細については、<xref linkend="cha-ha-fencing"/>を参照してください。
   </para>
  </section>

  <section xml:id="sec-ha-config-gui-templates">
   <title>リソーステンプレートの使用</title>
   <para>
    類似した設定のリソースを複数作成する最も簡単な方法は、リソーステンプレートを定義することです。リソーステンプレートを定義しておくと、プリミティブの中や、特定のタイプの制約で参照できるようになります。リソーステンプレートの機能と使用方法の詳細については、<xref linkend="sec-ha-config-basics-constraints-templates"/>を参照してください。
   </para>
   <procedure xml:id="pro-ha-config-gui-templates-create">
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで、<guimenu>リソース</guimenu>を選択し、<menuchoice> <guimenu>追加</guimenu><guimenu>テンプレート</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      テンプレートに固有の<guimenu>ID</guimenu>を入力します。
     </para>
    </step>
    <step>
     <para>
      プリミティブを指定するリソーステンプレートを指定します。<xref linkend="pro-ha-config-gui-primitives" xrefstyle="select:label title nopage"/>に従って、<xref linkend="step-ha-config-gui-primitives-start" xrefstyle="select:label"/>を開始します。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>適用</guimenu>をクリックしてリソーステンプレートの設定を完了します環境設定ダイアログが閉じて、メインウィンドウに新しく追加されたリソーステンプレートが表示されます。
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-templates-use">
    <title>リソーステンプレートの参照</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      新しく作成したリソーステンプレートをプリミティブで参照するには、次の手順に従います。
     </para>
     <substeps performance="required">
      <step>
       <para>
        左側のペインで、<guimenu>リソース</guimenu>を選択し、<menuchoice> <guimenu>追加</guimenu><guimenu>プリミティブ</guimenu></menuchoice>の順にクリックします。
       </para>
      </step>
      <step>
       <para>
        固有の<guimenu>ID</guimenu>を入力して、<guimenu>クラス</guimenu>、<guimenu>プロバイダ</guimenu>、および<guimenu>タイプ</guimenu>を指定します。
       </para>
      </step>
      <step>
       <para>
        参照する<guimenu>テンプレート</guimenu>を選択します。
       </para>
      </step>
      <step>
       <para>
        テンプレートのものとは異なる特定のインスタンス属性、操作またはメタ属性を設定する場合には、<xref linkend="pro-ha-config-gui-primitives"/>で説明した方法で、リソースの設定を継続します。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      新しく作成したリソーステンプレートをコロケーションまたは順序の制約で参照するには
     </para>
     <substeps performance="required">
      <step>
       <para>
        制約を<xref linkend="pro-ha-config-gui-constraints-collocation"/>または<xref linkend="pro-ha-config-gui-constraints-order"/>でそれぞれ説明した方法で設定します。
       </para>
      </step>
      <step>
       <para>
        コロケーション制約の場合には、<guimenu>リソース</guimenu>ドロップダウンリストに、設定されたすべてのリソースとリソーステンプレートのIDが表示されます。参照するテンプレートを選択します。
       </para>
      </step>
      <step>
       <para>
        同様に、順序の制約の場合には、<guimenu>最初</guimenu>および<guimenu>次</guimenu>ドロップダウンリストに、リソースとリソーステンプレートの両方が表示されます。参照するテンプレートを選択します。
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-constraints">
   <title>リソース制約の設定</title>
   <para>
    すべてのリソースを設定する以外にも、多くの作業が必要です。クラスタが必要なすべてのリソースを認識しても、正しく処理できるとは限りません。リソースの制約を指定して、リソースを実行可能なクラスタノード、リソースのロード順序、特定のリソースが依存している他のリソースを指定することができます。
   </para>
   <para>
    使用可能な制約タイプの概要については、<xref linkend="sec-ha-config-basics-constraints-types"/>を参照してください。制約を定義する際には、スコアも指定する必要があります。スコアとそのクラスタにおける意味の詳細については、<xref linkend="sec-ha-config-basics-constraints-scores"/>を参照してください。
   </para>
   <para>
    さまざまな制約タイプの作成方法については、次の手順を参照してください。
   </para>
<?dbfo-need height="20em"?>


   <procedure xml:id="pro-ha-config-gui-constraints-location">
    <title>場所の制約を追加または変更する</title>
    <step xml:id="step-ha-configuration-constraints-start">
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      Pacemaker GUIのメインウィンドウの左側のペインで、<guimenu>制約</guimenu>をクリックして、そのクラスタに設定されている制約を表示します。
     </para>
    </step>
    <step xml:id="step-ha-configuration-constraints-stop">
     <para>
      左側のペインで<guimenu>制約</guimenu>を選択し、<guimenu>追加</guimenu>をクリックします。
     </para>

    </step>
    <step>
     <para>
      <guimenu>Resource Location (リソース位置)</guimenu>を選択し、<guimenu>OK</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      制約に固有の<guimenu>ID</guimenu>を入力します。既存の制約を変更する場合、IDはすでに定義されているため、環境設定ダイアログに表示されます。
     </para>
    </step>
    <step>
     <para>
      制約を設定する<guimenu>リソース</guimenu>を選択します。リストには、そのクラスタに設定されているすべてのリソースのIDが表示されます。
     </para>
    </step>
    <step>
     <para>
      制約の<guimenu>Score (スコア)</guimenu>を設定します。正の値は、下で指定した<guimenu>ノード</guimenu>でリソースを実行できることを示します。負の値は、リソースをこのノードで実行すべきではないことを示します。スコアを<literal>INFINITY</literal>に設定すれば、リソースはこのノードで実行されるように強制されます。<literal>-INFINITY</literal>に設定すれば、リソースはそのノードで実行してはならないことになります。
     </para>
    </step>
    <step>
     <para>
      制約を設定する<guimenu>ノード</guimenu>を選択します。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-constraint-location.png" width="45%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-constraint-location.png" width="45%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      
      <guimenu>ノード</guimenu>および<guimenu>Score (スコア)</guimenu>フィールドを空のままにしておくと、<menuchoice><guimenu>追加</guimenu><guimenu>ルール</guimenu></menuchoice>の順にクリックしてルールを追加することもできます。有効期間を追加するには、<menuchoice><guimenu>追加</guimenu><guimenu>有効期間</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおり設定されたら、<guimenu>OK</guimenu>をクリックして、制約の設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに新しく追加または変更された制約が表示されます。
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-constraints-collocation">
    <title>コロケーション制約を追加または変更する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      Pacemaker GUIのメインウィンドウの左側のペインで、<guimenu>制約</guimenu>をクリックして、そのクラスタに設定されている制約を表示します。
     </para>
    </step>
    <step>
     <para>
      左側のペインで<guimenu>制約</guimenu>を選択し、<guimenu>追加</guimenu>をクリックします。
     </para>

    </step>
    <step>
     <para>
      <guimenu>Resource Colocation (リソースのコロケーション)</guimenu>を選択し、<guimenu>OK</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      制約に固有の<guimenu>ID</guimenu>を入力します。既存の制約を変更する場合、IDはすでに定義されているため、環境設定ダイアログに表示されます。
     </para>
    </step>
    <step>
     <para>
      コロケーションソースとなる<guimenu>リソース</guimenu>を選択します。リストには、そのクラスタに設定されているすべてのリソースとリソーステンプレートのIDが表示されます。
     </para>
     <para>
      制約が満たされないと、クラスタはリソースがまったく実行しないようにすることがあります。
     </para>
    </step>
    <step>
     <para>
      
      <guimenu>リソース</guimenu>と<guimenu>With Resource (対象リソース)</guimenu>フィールドを両方とも空のままにしておくと、<menuchoice><guimenu>追加</guimenu><guimenu>リソースセット</guimenu></menuchoice>の順にクリックしてリソースを追加することもできます。有効期間を追加するには、<menuchoice><guimenu>追加</guimenu><guimenu>有効期間</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      <guimenu>With Resource (対象リソース)</guimenu>には、コロケーション先を定義します。クラスタはこのリソースの配置先を最初に決定し、次に<guimenu>リソース</guimenu>フィールドのリソースを配置する場所を決定します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>Score (スコア)</guimenu>を定義して、両方のリソース間の位置関係を決定します。正の値は、リソースを同じノードで実行するべきであることを示します。負の値は、リソースを同じノードで実行するべきではないことを示します。スコアを<literal>INFINITY</literal>に設定すれば、リソースは同じノードで実行されるように強制されます。<literal>-INFINITY</literal>に設定すれば、リソースは同じノードで実行してはならないことになります。スコアと他の要因との組み合わせによって、ノードの配置先が決定します。
     </para>
    </step>
    <step>
     <para>
      必要に応じて、<guimenu>Resource Role (リソース役割)</guimenu>などの追加のパラメータも指定します。
     </para>
     <para>
      選択したパラメータとオプションに応じて、短い<guimenu>説明</guimenu>が表示され、設定しているコロケーション制約の効果を確認できます。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおり設定されたら、<guimenu>OK</guimenu>をクリックして、制約の設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに新しく追加または変更された制約が表示されます。
     </para>
    </step>
   </procedure>
   <procedure xml:id="pro-ha-config-gui-constraints-order">
    <title>順序の制約を追加または変更する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      Pacemaker GUIのメインウィンドウの左側のペインで、<guimenu>制約</guimenu>をクリックして、そのクラスタに設定されている制約を表示します。
     </para>
    </step>
    <step>
     <para>
      左側のペインで<guimenu>制約</guimenu>を選択し、<guimenu>追加</guimenu>をクリックします。
     </para>

    </step>
    <step>
     <para>
      <guimenu>Resource Order (リソース順序)</guimenu>を選択し、<guimenu>OK</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      制約に固有の<guimenu>ID</guimenu>を入力します。既存の制約を変更する場合、IDはすでに定義されているため、環境設定ダイアログに表示されます。
     </para>
    </step>
    <step>
     <para>
      <guimenu>最初</guimenu>では、<guimenu>次</guimenu>で指定するリソースの開始前に開始するリソースを定義します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>次</guimenu>では、<guimenu>最初</guimenu>のリソースより後に開始するリソースを定義します。
     </para>
     <para>
      選択したパラメータとオプションに応じて、短い<guimenu>説明</guimenu>が表示され、設定している順序の制約の効果を確認できます。
     </para>
    </step>
    <step>
     <para>
      必要な場合は、さらにパラメータを定義します。たとえば、次のように定義します。
     </para>
     <substeps performance="required">
      <step>
       <para>
        <guimenu>スコア</guimenu>でスコアを指定します。制約は、ゼロより大きい場合は必須になりますが、そうでない場合はアドバイスにすぎません。デフォルト値は、<literal>INFINITY</literal>です。
       </para>
      </step>
      <step>
       <para>
        <guimenu>シンメトリック</guimenu>の値を指定します。<literal>true</literal>を指定した場合は、リソースが逆の順序で停止されます。デフォルト値は、<literal>true</literal>です。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおり設定されたら、<guimenu>OK</guimenu>をクリックして、制約の設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに新しく追加または変更された制約が表示されます。
     </para>
    </step>
   </procedure>
   <para>
    Pacemaker GUIの<guimenu>制約</guimenu>ビューで設定したすべての制約にアクセスして変更することができます。
   </para>
   <figure>
    <title>Pacemaker GUI - 制約</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main-constraints.png" width="68%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main-constraints.png" width="68%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </section>

  <section xml:id="sec-ha-configuration-failover">
   <title>リソースフェールオーバーノードの指定</title>
   <para>
    リソースに障害が発生すると、自動的に再起動されます。現在のノードで再起動できない場合、または現在のノードでN回失敗した場合は、別のノードへのフェールオーバーが試行されます。新しいノードへのマイグレートを行う基準(<literal>migration-threshold</literal>)となるリソースの失敗数を定義できます。クラスタ内に3つ以上ノードがある場合、特定のリソースのフェールオーバー先のノードはHigh Availabilityソフトウェアが選択します。
   </para>
   <para>
    ただし、次の手順を実行すると、リソースのフェールオーバー先のノードを指定できます。
   </para>
   <procedure xml:id="pro-ha-config-gui-failover">
    <step>
     <para>
      <xref linkend="pro-ha-config-gui-constraints-location"/>に記載の手順に従って、そのリソースの場所の制約を設定します。
     </para>
    </step>
    <step>
     <para>
      <xref linkend="pro-ha-config-gui-parameters"/>に記載の手順に従って、<literal>migration-threshold</literal>メタ属性をそのリソースに追加し、マイグレーションしきい値の<guimenu>値</guimenu>を入力します。INFINITY未満の正の値を指定する必要があります。
     </para>

    </step>
    <step>
     <para>
      リソースの失敗回数を自動的に失効させる場合は、<xref linkend="pro-ha-config-gui-parameters"/>に記載の手順に従って<literal>failure-timeout</literal>メタ属性をそのリソースに追加し、失敗タイムアウトの<guimenu>値</guimenu>を入力します。
     </para>
    </step>
    <step>
     <para>
      リソースの初期設定として、追加のフェールオーバーノードを指定する場合は、追加の場所の制約を作成します。
     </para>
    </step>
   </procedure>
   <para>
    移行しきい値と失敗回数に関するクラスタ内のプロセスフローの例については、<xref linkend="ex-ha-config-basics-failover"/>を参照してください。
   </para>
   <para>
    リソースの失敗回数は、自動的に期限切れにする代わりに、いつでも、手動でクリーンアップすることもできます。詳細については、<xref linkend="sec-ha-configuration-cleanup"/>を参照してください。
   </para>
  </section>

  <section xml:id="sec-ha-configuration-failback">
   <title>リソースフェールバックノードの指定(リソースの固着性)</title>
   <para>
    ノードがオンライン状態に戻り、クラスタ内にある場合は、リソースが元のノードにフェールバックすることがあります。フェールオーバー前にリソースを実行していたノードにリソースをフェールバックさせたくない場合や、リソースのフェールバック先として別のノードを指定する場合は、リソースの固着性の値を変更する必要があります。リソースの固着性は、リソースの作成時でも、その後でも指定できます。
   </para>
   <para>
    さまざまなリソース固着性値の意味については、<xref linkend="sec-ha-config-basics-failback"/>を参照してください。
   </para>
<?dbfo-need height="20em"?>


   <procedure xml:id="pro-ha-config-gui-stickiness">
    <title>リソースの固着性を指定する</title>
    <step>
     <para>
      <xref linkend="pro-ha-config-gui-parameters"/>に従って、<literal>resource-stickiness</literal>メタ属性をリソースに追加します。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      resource-stickinessの<guimenu>値</guimenu>として、<literal>-INFINITY</literal>から<literal>INFINITY</literal>の範囲の値を指定します。
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-utilization">
   <title>負荷インパクトに基づくリソース配置の設定</title>
   <para>
    すべてのリソースが同等ではありません。Xenゲストなどの一部のリソースでは、そのホストであるノードがリソースの容量要件を満たす必要があります。リソースの組み合わされたニーズが提供された容量より大きくなるようにリソースが配置されると、リソースのパフォーマンスが低下します(あるいは失敗することさえあります)。
   </para>
   <para>
    これを考慮に入れて、High Availability Extensionでは、次のパラメータを指定できます。
   </para>
   <orderedlist spacing="normal">
    <listitem>
     <para>
      一定のノードが<emphasis>提供する</emphasis>容量
     </para>
    </listitem>
    <listitem>
     <para>
      一定のリソースが<emphasis>要求する</emphasis>容量
     </para>
    </listitem>
    <listitem>
     <para>
      リソースの配置に関する全体的なストラテジ
     </para>
    </listitem>
   </orderedlist>
   <para>
    使用属性は、リソースの要件と、ノードが提供する容量の両方を設定するために使用されます。High Availability Extensionには、ノードの容量とリソースの要件を自動的に検出し、設定する手段も用意されています。詳細と設定例については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
   </para>
   <para>
    リソースの要件とノードが提供する容量を手動で設定するには、<xref linkend="pro-ha-config-gui-capacity"/>の手順に従ってください。使用属性に任意の名前を付け、設定に必要なだけ名前/値のペアを定義します。
   </para>
   <procedure xml:id="pro-ha-config-gui-capacity">
    <title>使用属性を追加または変更する</title>
    <para>
     次の例では、クラスタのノードとリソースの基本設定がすでに完了しているところへ、さらに、一定のノードが提供する容量と一定のリソースが必要とする容量の設定を行う場合を想定しています。使用属性の追加手順は、基本的に同じであり、異なるのは<xref linkend="step-ha-config-gui-capacity-node"/>と<xref linkend="step-ha-config-gui-capacity-resource"/>だけです。
    </para>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-node">
     <para>
      ノードが<emphasis>提供する</emphasis>容量を指定するには、次の手順に従います。
     </para>
     <substeps performance="required">
      <step>
       <para>
        左ペインで、<guimenu>ノード</guimenu>をクリックします。
       </para>
      </step>
      <step>
       <para>
        右ペインで、容量を設定するノードを選択し、<guimenu>編集</guimenu>をクリックします。
       </para>
      </step>
     </substeps>
    </step>
    <step xml:id="step-ha-config-gui-capacity-resource">
     <para>
      リソースが<emphasis>要求する</emphasis>容量を指定するには、次の手順に従います。
     </para>
     <substeps performance="required">
      <step>
       <para>
        左ペインで、<guimenu>リソース</guimenu>をクリックします。
       </para>
      </step>
      <step>
       <para>
        右ペインで、容量を設定するリソースを選択して、<guimenu>編集</guimenu>をクリックします。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      <guimenu>使用</guimenu>タブを選択し、<guimenu>追加</guimenu>をクリックして使用属性を追加します。
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-attr-name">
     <para>
      新しい属性の<guimenu>名前</guimenu>を入力します。使用属性には、好きな名前を付けることができます。
     </para>
    </step>
    <step xml:id="step-ha-config-gui-capacity-attr-value">
     <para>
      属性の<guimenu>値</guimenu>を入力し、<guimenu>OK</guimenu>をクリックします。属性値は整数にする必要があります。
     </para>
    </step>
    <step>
     <para>
      使用属性をさらに追加する場合は、<xref linkend="step-ha-config-gui-capacity-attr-name"/>から<xref linkend="step-ha-config-gui-capacity-attr-value"/>まで繰り返します。
     </para>
     <para>
      <guimenu>使用</guimenu>タブに、そのノードまたはリソースに定義した使用属性の要約が表示されます。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが望みどおりに設定されたら、<guimenu>OK</guimenu>をクリックして、設定ダイアログを閉じます。
     </para>
    </step>
   </procedure>
   <para>
    <xref linkend="fig-ha-config-gui-capacit-node"/>は、8つのCPUユニットと16GBのメモリを、そのノードで実行中のリソースに提供するノードの設定を示しています。
   </para>
   <figure xml:id="fig-ha-config-gui-capacit-node">
    <title>ノード容量の設定例</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-node-utilization.png" width="45%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-node-utilization.png" width="45%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    たとえば、ノードの4096メモリ単位と4つのCPUユニットを必要とするリソースの設定例は、次のようになります。
   </para>
   <figure xml:id="fig-ha-config-gui-capacit-resource">
    <title>リソース容量の設定例</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-resource-utilization.png" width="85%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-resource-utilization.png" width="55%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    ノードが提供する容量とリソースが要求する容量を(手動または自動で)設定した後、グローバルクラスタオプションで配置ストラテジを設定する必要があります。これを設定しないと、容量の設定は有効になりません。負荷のスケジュールに使用できるストラテジがいくつかあります。たとえば、負荷をできるだけ少ない数のノードに集中したり、使用可能なすべてのノードに均等に分散できます。詳細については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
   </para>
   <procedure xml:id="pro-ha-config-gui-placement">
    <title>配置ストラテジを設定する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      <menuchoice><guimenu>表示</guimenu><guimenu>簡易モード</guimenu></menuchoice>の順に選択します。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>CRM Config</guimenu>を選択して、グローバルクラスタオプションとそれらの現在の値を表示します。
     </para>
    </step>
    <step>
     <para>
      要件に応じて、<guimenu>配置ストラテジ</guimenu>を適切な値に設定します。
     </para>
    </step>
    <step>
     <para>
      何らかの理由でフェンシングを無効にする必要がある場合は、<literal>Stonith Enabled</literal>の選択を解除します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>適用</guimenu>をクリックして、変更を確認します。
     </para>
    </step>
   </procedure>
  </section>

<?dbfo-need height="20em"?>



  <section xml:id="sec-ha-configuration-monitor">
   <title>リソース監視の設定</title>
   <para>
    High Availability Extensionはノード障害を検出できますが、ノード上の個々のリソースで障害が発生した場合にも検出することができます。リソースが実行中であるかどうか確認するには、そのリソースにリソースの監視を設定しておく必要があります。リソース監視は、タイムアウト、開始遅延のいずれか、または両方と、間隔を指定することで設定できます。間隔の指定によって、CRMにリソースステータスの確認頻度を指示します。<literal>start</literal>または<literal>stop</literal>操作に対する<literal>Timeout</literal>など、特定のパラメータも設定できます。
   </para>
   <procedure xml:id="pro-ha-config-gui-operations">
    <title>監視操作を追加または変更する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      Pacemaker GUIのメインウィンドウの左側のペインで、<guimenu>リソース</guimenu>をクリックして、そのクラスタに設定されているリソースを表示します。
     </para>
    </step>
    <step>
     <para>
      右側のペインで、変更するリソースを選択して<guimenu>編集</guimenu>をクリックします。次のウィンドウには、そのリソースに定義された基本的なリソースパラメータとメタ属性、インスタンス属性、および操作が表示されます。
     </para>
    </step>
    <step>
     <para>
      新しい監視操作を追加するには、該当するタブを選択して<guimenu>追加</guimenu>をクリックします。
     </para>
     <para>
      既存の操作を変更するには、該当するエントリを選択して<guimenu>編集</guimenu>をクリックします。
     </para>
    </step>


    <step>
     <para>
      <guimenu>名前</guimenu>で、<literal>monitor</literal>、<literal>start</literal>、<guimenu>stop</guimenu>など、実行するアクションを選択します。
     </para>
     <para>
      次に示すパラメータは、ここでの選択によって決まります。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-monitor.png" width="35%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-monitor.png" width="35%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      <guimenu>タイムアウト</guimenu>フィールドに、値を秒単位で入力します。指定したタイムアウトを過ぎると、操作は<literal>failed</literal>と見なされます。PEは何を行うか、あるいは監視操作の<guimenu>On Fail (障害発生時の動作)</guimenu>フィールドで指定した内容を実行するかどうかを判断します。
     </para>
    </step>
    <step>
     <para>
      必要な場合は、<guimenu>オプション</guimenu>セクションを開いて、<guimenu>失敗の場合</guimenu>(このアクションが失敗した場合の処理)または<guimenu>必要</guimenu>(このアクションを発生する前に満たす必要がある条件)などのパラメータを追加します。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>OK</guimenu>をクリックして、そのリソースの設定を完了します。設定ダイアログが閉じて、メインウィンドウに変更されたリソースが表示されます。
     </para>
    </step>
   </procedure>
   <para>
    リソースモニタが障害を検出した場合の処理については、<xref linkend="sec-ha-config-basics-monitoring"/>を参照してください。
   </para>
   <para>
    Pacemaker GUIでリソースの障害を表示するには、左ペインの<guimenu>管理</guimenu>をクリックしてから、右ペインで、詳細を表示したいリソースを選択します。障害が発生したリソースの場合、<guimenu>失敗回数</guimenu>とリソースの最後の障害が右ペインの中ほど(<guimenu>移行しきい値</guimenu>エントリの下)に表示されます。
   </para>
   <figure>
    <title>リソースの失敗回数の表示</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-mgmt-failcount.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-mgmt-failcount.png" width="55%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </section>

  <section xml:id="sec-ha-configuration-group">
   <title>クラスタリソースグループの構成</title>
   <para>
    クラスタリソースの中には、他のコンポーネントやリソースに依存しており、各コンポーネントや各リソースを特定の順序で開始したり、同じサーバ上で一緒に実行しなければならないものもあります。この構成を簡単にするため、グループのコンセプトをサポートしています。
   </para>
   <para>
    リソースグループの例と、グループとそのプロパティの詳細について、<xref linkend="sec-ha-config-basics-resources-advanced-groups"/>を参照してください。
   </para>
   <note>
    <title>空のグループ</title>
    <para>
     グループには1つ以上のリソースを含む必要があります。空の場合は設定は無効になります。
    </para>
   </note>
   <procedure xml:id="pro-ha-config-gui-group">
    <title>リソースグループを追加する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで<guimenu>リソース</guimenu>を選択し、<menuchoice><guimenu>追加</guimenu><guimenu>グループ</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      グループに固有の<guimenu>ID</guimenu>を入力します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>オプション</guimenu>の下で、<guimenu>Initial state of resource (リソースの当初の状態)</guimenu>を設定し、<guimenu>転送</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      次のステップでは、グループのサブリソースとしてプリミティブを追加できます。プリミティブは<xref linkend="pro-ha-config-gui-primitives"/>と類似の方法で作成します。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>適用</guimenu>をクリックして、プリミティブの設定を完了します。
     </para>
    </step>
    <step>
     <para>
      次のウィンドウでは、再度<guimenu>プリミティブ</guimenu>を選択し、<guimenu>OK</guimenu>をクリックすることで、グループのサブリソースの追加を継続できます。
     </para>
     <para>
      グループに追加するプリミティブがなくなったら、代わりに<guimenu>キャンセル</guimenu>をクリックします。次のウィンドウには、そのグループに定義したパラメータの概要が表示されます。グループの<guimenu>メタ属性</guimenu>および<guimenu>プリミティブ</guimenu>の一覧が表示されます。<guimenu>プリミティブ</guimenu>タブのリソースの場所は、クラスタ内でのリソース開始順序を示します。
     </para>
    </step>
    <step>
     <para>
      グループ内のリソースの順序は重要なので、<guimenu>上へ</guimenu>ボタンと<guimenu>下へ</guimenu>ボタンを使用して、グループ内で<guimenu>プリミティブ</guimenu>をソートします。
     </para>
    </step>
    <step>
     <para>
      すべてのパラメータが希望どおりに設定されたら、<guimenu>OK</guimenu>をクリックして、そのグループの設定を完了します。環境設定ダイアログが閉じ、メインウィンドウに新しく作成された、または変更されたグループが表示されます。
     </para>
    </step>
   </procedure>
   <figure>
    <title>Pacemaker GUI - グループ</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="crmgui-main-groups.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="crmgui-main-groups.png" width="65%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    <xref linkend="pro-ha-config-gui-group"/>の説明どおりにリソースグループを作成済みであると仮定します。次の手順では、<xref linkend="ex-ha-config-resource-group"/>と一致するようにグループを変更する方法を示します。
   </para>
<?dbfo-need height="20em"?>


   <procedure xml:id="pro-ha-config-gui-group-modify">
    <title>既存のグループにリソースを追加する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで<guimenu>リソース</guimenu>ビューに切り替え、右側のペインで、変更するグループを選択して<guimenu>編集</guimenu>をクリックします。次のウィンドウには、そのリソースに定義された基本的なグループパラメータとメタ属性とプリミティブが表示されます。
     </para>
    </step>
    <step>
     <para>
      <guimenu>プリミティブ</guimenu>タブをクリックして、<guimenu>追加</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      次のダイアログで、次のパラメータを設定してIPアドレスをグループのサブリソースとして追加します。
     </para>
     <substeps performance="required">
      <step xml:id="step-ha-config-gui-group-prim-start">
       <para>
        一意の<guimenu>ID</guimenu>を入力します(たとえば、<literal>my_ipaddress</literal>)。
       </para>
      </step>
      <step>
       <para>
        <guimenu>クラス</guimenu>リストで、リソースエージェントクラスとして<guimenu>ocf</guimenu>を選択します。
       </para>
      </step>
      <step>
       <para>
        OCFリソースエージェントの<guimenu>プロバイダ</guimenu>として、<guimenu>heartbeat</guimenu>を選択します。
       </para>
      </step>
      <step>
       <para>
        <guimenu>タイプ</guimenu>リストで、リソースエージェントとして<guimenu>IPaddr</guimenu>を選択します。
       </para>
      </step>
      <step>
       <para>
        <guimenu>進む</guimenu>をクリックします。
       </para>
      </step>
      <step>
       <para>
        <guimenu>Instance Attribute (インスタンス属性)</guimenu>タブで、<guimenu>IP</guimenu>エントリを選択して<guimenu>編集</guimenu>をクリックします(または<guimenu>IP</guimenu>エントリをダブルクリックします)。
       </para>
      </step>
      <step>
       <para>
        <guimenu>値</guimenu>として、目的のIPアドレスを入力します。たとえば「<literal>192.168.1.180</literal>」と入力します。
       </para>
      </step>
      <step xml:id="step-ha-config-gui-group-prim-stop">
       <para>
        <guimenu>OK</guimenu>、<guimenu>適用</guimenu>の順にクリックします。グループ設定ダイアログには、新しく追加去れたプリミティブが表示されます。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      再度<guimenu>追加</guimenu>をクリックして、次のサブリソース(ファイルシステムとWebサーバ)を追加します。
     </para>
    </step>
    <step>
     <para>
      「<xref linkend="step-ha-config-gui-group-prim-start"/>」から「<xref linkend="step-ha-config-gui-group-prim-stop"/>」のような手順に従って、グループの全サブリソースの設定を終了するまで、各サブリソースの該当するパラメータを設定します。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-resource-group.png" width="50%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-resource-group.png" width="45%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      クラスタ内で開始する順序でサブリソースを設定したので、<guimenu>プリミティブ</guimenu>タブ内の順序はすでに正しいものになっています。
     </para>
    </step>
    <step>
     <para>
      グループのリソースの順序を変更する必要がある場合は、<guimenu>上へ</guimenu>ボタンと<guimenu>下へ</guimenu>ボタンを使用して、<guimenu>プリミティブ</guimenu>タブのリソースをソートします。
     </para>
    </step>
    <step>
     <para>
      グループからリソースを削除するには、<guimenu>プリミティブ</guimenu>タブのリソースを選択し、<guimenu>削除</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      <guimenu>OK</guimenu>をクリックしてそのグループの設定を完了します。環境設定ダイアログが閉じて、メインウィンドウに変更されたグループが表示されます。
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-clone">
   <title>クローンリソースの設定</title>
   <para>
    クラスタ内の複数のノードで特定のリソースを同時に実行することができます。このためには、リソースをクローンとして設定する必要があります。クローンとして設定するリソースの1例として、STONITHや、OCFS2などのクラスタファイルシステムが挙げられます。提供されているどのリソースも、クローンとして設定できます。これは、リソースのリソースエージェントによってサポートされます。クローンリソースは、ホスティングされているノードによって異なる設定をすることもできます。
   </para>
   <para>
    使用できるリソースクローンのタイプの概要については、<xref linkend="sec-ha-config-basics-resources-advanced-clones"/>を参照してください。
   </para>
   <procedure xml:id="pro-ha-config-gui-clone">
    <title>クローンを追加または変更する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左側のペインで<guimenu>リソース</guimenu>を選択し、<menuchoice><guimenu>追加</guimenu><guimenu>クローン</guimenu></menuchoice>の順にクリックします。
     </para>
    </step>
    <step>
     <para>
      クローンに固有の<guimenu>ID</guimenu>を入力します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>オプション</guimenu>の下で、<guimenu>Initial state of resource (リソースの当初の状態)</guimenu>を設定します。
     </para>
    </step>
    <step>
     <para>
      クローンに設定するオプションを起動し、<guimenu>転送</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      次のステップでは、<guimenu>プリミティブ</guimenu>または<guimenu>グループ</guimenu>をクローンのサブリソースとして追加することができます。<xref linkend="pro-ha-config-gui-primitives"/>または<xref linkend="pro-ha-config-gui-group"/>で説明している方法のように作成します。
     </para>
    </step>
    <step>
     <para>
      クローン設定ダイアログ内のすべてのパラメータが希望どおりに設定されたら、<guimenu>適用</guimenu>をクリックして、クローンの設定を完了します。
     </para>
    </step>
   </procedure>
  </section>
 </section>
 <section xml:id="sec-ha-config-gui-manage">
  <title>クラスタリソースの管理</title>

  <para>
   Pacemaker GUIでは、クラスタリソースの設定が可能なだけでなく、既存リソースを管理することもできます。管理ビューに切り替え、使用可能なオプションにアクセスするには、左ペインで<guimenu>管理</guimenu>をクリックします。
  </para>

  <figure>
   <title>Pacemaker GUI - 管理</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="crmgui-main-manage.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="crmgui-main-manage.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <section xml:id="sec-ha-configuration-start">
   <title>リソースの開始</title>
   <para>
    クラスタリソースは、起動する前に、正しく設定されているようにします。たとえば、Apacheサーバをクラスタリソースとして使用する場合は、まず、Apacheサーバをセットアップし、Apacheの環境設定を完了してから、クラスタで個々のリソースを起動します。
   </para>
   <note>
    <title>クラスタによって管理されるサービスには介入しないでください。</title>
    <para>
     High Availability Extensionでリソースを管理しているときに、同じリソースを他の方法(クラスタ外で、たとえば、手動、ブート、再起動など)で開始したり、停止してはなりません。High Availability Extensionソフトウェアが、すべてのサービスの開始または停止アクションを実行します。
    </para>
    <para>
     ただし、サービスが適切に構成されているか確認したい場合は手動で開始しますが、High Availabilityが起動する前に停止してください。
    </para>
    <para>
     現在クラスタで管理されているリソースへの介入については、まず、<xref linkend="sec-ha-configuration-mgmt-mode"/>に説明されているように、リソースを<literal>unmanaged mode</literal>に設定します。
    </para>
   </note>
   <para>
    Pacemaker GUIによるリソースの作成時に、リソースの初期状態を<literal>target-role</literal>メタ属性で設定できます。その値を<literal>stopped</literal>に設定した場合、リソースは、その作成後に自動的に起動しません。
   </para>
   <procedure xml:id="pro-ha-config-gui-start">
    <title>新しいリソースを起動する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、リソースを右クリックして、コンテキストメニューから<guimenu>開始</guimenu>を選択します(または、ツールバーの<guimenu>リソースの開始</guimenu>アイコンを使用します)。
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-cleanup">
   <title>リソースのクリーンアップ</title>
   <para>
    リソースは、失敗した場合は自動的に再起動しますが、失敗のたびにリソースの失敗回数が増加します。リソースの失敗回数をPacemaker GUIで表示するには、左ペインで<guimenu>管理</guimenu>をクリックしてから、右ペインでリソースを選択します。リソースが失敗している場合は、その<guimenu>失敗回数</guimenu>が右ペインの中ほど(<guimenu>移行しきい値</guimenu>エントリの下)に表示されます。
   </para>
   <para>
    <literal>migration-threshold</literal>がそのリソースに設定されている場合は、失敗の数が移行しきい値に達するとただちに、そのリソースはノードで実行できなくなります。
   </para>
   <para>
    リソースの失敗回数は、(リソースに<literal>failure-timeout</literal>オプションを設定することにより)自動的にリセットするか、または次に示すように手動でリセットできます。
   </para>
   <procedure xml:id="pro-ha-config-gui-clean">
    <title>リソースをクリーンアップする</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、該当するリソースを右クリックし、コンテキストメニューから<guimenu>リソースのクリーンアップ</guimenu>を選択します(またはツールバーの<guimenu>リソースのクリーンアップ</guimenu>アイコンを使用します)。
     </para>
     <para>
      これによって指定したノード上の指定したリソースに対して、コマンド<command>crm_resource</command> <option> -C</option>および<command>crm_failcount</command> <option> -D</option>が実行されます。
     </para>
    </step>
   </procedure>
   <para>
    詳細は、<command>crm_resource</command>および<command>crm_failcount</command>のマニュアルページを参照してください。
   </para>
  </section>

  <section xml:id="sec-ha-configuration-remove">
   <title>クラスタリソースの削除</title>
   <para>
    リソースをクラスタから削除する必要がある場合は、次の手順に従って、設定エラーが発生しないようにします。
   </para>

   <note>
    <title>参照されているリソースの削除</title>
    <para>
     何らかの制約によってIDが参照されているクラスタリソースは削除できません。リソースを削除できない場合は、リソースIDが参照されている場所を確認し、最初に制約からリソースを削除します。
    </para>
   </note>
   <procedure xml:id="pro-ha-config-gui-rm">
    <title>クラスタリソースの削除</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、該当するリソースを選択します。
     </para>
    </step>
    <step>
     <para>
      <xref linkend="pro-ha-config-gui-clean"/>の説明に従って、すべてのノードでリソースをクリーンアップします。
     </para>
    </step>
    <step>
     <para>
      <guimenu>停止</guimenu>でリソースを停止します。
     </para>
    </step>
    <step>
     <para>
      リソースに関するすべての制約を削除します。これを行わないと、リソースは削除できません。
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="sec-ha-configuration-migrate">
   <title>クラスタリソースの移行</title>
   <para>
    <xref linkend="sec-ha-configuration-failover"/>で説明したように、ソフトウェアまたはハードウェアの障害時には、クラスタは定義可能な特定のパラメータ(たとえばマイグレーションしきい値やリソースの固着性など)に従って、リソースを自動的にフェールオーバー(マイグレート)させます。それ以外に、クラスタ内の別なノードにリソースを手動でマイグレートさせることもできます。
   </para>
   <procedure xml:id="pro-ha-config-gui-migrate">
    <title>リソースを手動で移行する</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、該当するリソースを右クリックし、<guimenu>リソースの移行</guimenu>を選択します。
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-main-migrate.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-main-migrate.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      新規ウィンドウで、<guimenu>To Node (マイグレート先ノード)</guimenu>で、リソースの移動先ノードを選択します。これによって移動先ノードに対して<literal>INFINITY</literal>スコアの場所の制約が作成されます。
     </para>
    </step>
    <step>
     <para>
      リソースを一時的にマイグレートするには、<guimenu>Duration (期間)</guimenu>をアクティブにしてリソースが新規ノードにマイグレートされる時間を入力します。指定した時間を経過したら、リソースは元の場所に戻ることが<emphasis>できます</emphasis>。あるいは、現在の場所に残ることもできます(リソースへの固着性による)。
     </para>
    </step>
    <step>
     <para>
      リソースをマイグレートできない場合は(リソースの固着性と制約スコアの合計が現在のノードで<literal>INFINITY</literal>を超えている場合)、<guimenu>強制</guimenu>オプションを有効にします。これによって現在の場所に対するルールと<literal>-INFINITY</literal>のスコアを作成して、リソースを強制的に移動させます。
     </para>
     <note>
      <para>
       これにより、<guimenu>移行制約のクリア</guimenu>で制約を解除するか、期限切れになるまで、このノードでリソースが実行されなくなります。
      </para>
     </note>
    </step>
    <step>
     <para>
      <guimenu>OK</guimenu>をクリックして、マイグレーションを確認します。
     </para>
    </step>
   </procedure>
   <para>
    リソースを再び元に戻すには、次の手順に従います。
   </para>
   <procedure xml:id="pro-ha-config-gui-migrate-back">
    <title>移行制約をクリアする</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、該当するリソースを右クリックし、<guimenu>移行制約のクリア</guimenu>を選択します。
     </para>
     <para>
      これによって、<command>crm_resource </command> <option>-U</option>コマンドが使用されます。リソースは元の場所に戻ることができます<emphasis/>。あるいは現在の場所に残ることもあります(リソースの固着性によって)。
     </para>
    </step>
   </procedure>
   <para>
    詳細は、<command>crm_resource</command>のマニュアルページ、または<citetitle>Pacemaker Explained</citetitle>を参照してください。<link xlink:href="http://www.clusterlabs.org/doc/"/>から入手できます。特に、「<citetitle>Resource Migration</citetitle>」のセクションを参照してください。
   </para>
  </section>

  <section xml:id="sec-ha-configuration-mgmt-mode">
   <title>リソースの管理モードの変更</title>
   <para>
    リソースがクラスタで管理されているときは、他の方法で(つまり、クラスタ外で)リソースを操作しないでください。個々のリソースの保守する場合は、各リソースを<literal>unmanaged mode</literal>に設定すると、クラスタ外でそのリソースを変更できます。
   </para>
   <procedure>
    <title>リソースの管理モードの変更</title>
    <step>
     <para>
      <xref linkend="sec-ha-configuration-gui-intro-connect"/>の説明に従い、Pacemaker GUIを起動してクラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      左ペインで、<guimenu>管理</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      右ペインで、該当するリソースを右クリックし、コンテキストメニューから、<guimenu>リソースの管理解除</guimenu>を選択します。
     </para>
    </step>
    <step>
     <para>
      そのリソースの保守作業を完了したら、右ペインで、再び該当するリソースを右クリックして、<guimenu>リソースの管理</guimenu>を選択します。
     </para>
     <para>
      リソースは、この時点から再びHigh Availability Extensionソフトウェアによって管理されます。
     </para>
    </step>
   </procedure>
  </section>
 </section>
</chapter>
