<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="ha_samba.xml" id="cha-ha-samba">
 <title>Sambaクラスタリング</title>
 <abstract>
  <para>
   クラスタ対応のSambaサーバは、異種混合ネットワークにHigh Availabilityソリューションを提供します。この章では、背景情報とクラスタ対応Sambaサーバの設定方法を説明します。
  </para>
 </abstract>
 <sect1 id="sec-ha-samba-overview">
  <title>概念の概要</title>

  <para>
   TDB (Trivial Database)は、長年にわたって、Sambaによって使用されてきました。TDBでは、複数のアプリケーションが同時に書き込むことができます。すべての書き込み操作を正常に実行し、互いに衝突させないため、TDBは、内部ロッキングメカニズムを使用しています。
  </para>

  <para>
   CTDB (Cluster Trivial Database)は、既存のTDBの小規模な拡張です。CTDBは、プロジェクトによって、<quote>一時データの保存のために、Sambaなどのプロジェクトによって使用されるTDBデータベースのクラスタ実装</quote>として説明されています。
  </para>

  <para>
   各クラスタノードは、ローカルCTDBデーモンを実行します。Sambaは、そのTDBに直接書き込むのではなく、そのローカルCTDBデーモンと通信します。それらのデーモンは、ネットワークを介してメタデータを交換しますが、実際の読み取り/書き込み操作は、高速ストレージでローカルコピー上で行われます。CTDBの概念は、<xref linkend="fig-ha-samba-overview"/>に表示されています。
  </para>

  <note>
   <title>Samba専用CTDB</title>
   <para>
    CTDBリソースエージェントの現在の実装では、Sambaの管理のためだけにCTDBを設定します。他の機能(IPフェールオーバーなど)はすべて、Pacemakerで設定する必要があります。
   </para>
   <para>
    CTDBは、完全に同種のクラスタに関してのみサポートされます。たとえば、クラスタのすべてのノードが同じアーキテクチャを持つ必要があり、i586とx86_64を混合できません。
   </para>
  </note>

  <figure id="fig-ha-samba-overview">
   <title>CTDBクラスタの構造</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ha_samba.svg" width="80%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ha_samba.png" width="80%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   クラスタ対応Sambaサーバは、一定のデータを共有する必要があります。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     UnixのユーザとグループIDをWindowsのユーザとグループに関連付けるマッピングテーブル。
    </para>
   </listitem>
   <listitem>
    <para>
     ユーザデータベースをすべてのノード間で同期する必要があります。
    </para>
   </listitem>
   <listitem>
    <para>
     Windowsドメイン内のメンバサーバの参加情報をすべてのノードで利用できる必要があります。
    </para>
   </listitem>
   <listitem>
    <para>
     メタデータ(アクティブSMBセッション、共有接続、各種ロックなど)をすべてのノードで利用できる必要があります。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   クラスタ対応SambaサーバがN+1ノードを持っている場合、Nノードだけのサーバより高速になることを目的としています。1つのノードは、クラスタ非対応のSambaサーバより遅くなることはありません。
  </para>
 </sect1>
 <sect1 id="sec-ha-samba-basicconf">
  <title>基本的な設定</title>
  
  <note>
   <title>変更された設定ファイル</title>
   <para>
    CTDBリソースエージェントは、自動的に、<filename>/etc/sysconfig/ctdb</filename>と<filename>/etc/samba/smb.conf</filename>を変更します。<command>crm ra</command> <option>info CTDB</option>を使用して、CTDBリソースに指定できるすべてのパラメータを一覧表示してください。
   </para>
  </note>

  <para>
   クラスタ対応Sambaサーバをセットアップするには、次の手順に従います。
  </para>

  <procedure id="pro-ha-samba-basicconf">
   <title>クラスタ対応Sambaサーバの基本セットアップ</title>
   <step performance="required">
    <para>
     クラスタを準備します。
    </para>
    <substeps performance="required">
     <step performance="required">
      <para>
       本書の<xref linkend="part-config"/>で説明されているように、クラスタを設定します(OpenAIS、Pacemaker、OCFS2など使用)。
      </para>
     </step>
     <step performance="required">
      <para>
       OCFS2などの共有ファイルシステムを設定し、マウントします(たとえば、<filename>/shared</filename>にマウント)。
      </para>
     </step>
     <step performance="required">
      <para>
       POSIX ACLをオンにする場合は、それを有効にします。
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para>
         新しいOCFS2ファイルシステムの場合は、次のコマンドを使用します。
        </para>
<screen><prompt role="root">root # </prompt><command>mkfs.ocfs2</command> --fs-features=xattr ...</screen>
       </listitem>
       <listitem>
        <para>
         既存のOCFS2ファイルシステムの場合は、次のコマンドを使用します。
        </para>
        <screen><prompt role="root">root # </prompt><command>tunefs.ocfs2</command> --fs-feature=xattr<replaceable>DEVICE</replaceable></screen>
        <para>
         ファイルシステムリソースには、必ず、<option>acl</option>オプションを指定します。次のように、<command>crm</command>シェルを使用します。
        </para>
<screen><prompt role="custom">crm(live)configure# </prompt> <command>primary</command> ocfs2-3 ocf:heartbeat:Filesystem options="acl" ...</screen>
       </listitem>
      </itemizedlist>
     </step>
     <step performance="required">
      <para>
       <systemitem class="service">ctdb</systemitem>、<systemitem class="service">smb</systemitem>、<systemitem class="service">nmb</systemitem>、<systemitem class="service">winbind</systemitem>の各サービスが無効になるようにします。
      </para>
 <screen><prompt role="root">root # </prompt><command>chkconfig</command> ctdb off
<command>chkconfig</command> smb off
<command>chkconfig</command> nmb off
<command>chkconfig</command> winbind off</screen>
     </step>
    </substeps>
   </step>
   <step performance="required">
    <para>
     共有ファイルシステムにCTDBロックのディレクトリを作成します。
    </para>
    <screen><prompt role="root">root # </prompt><command>mkdir</command> -p /shared/samba/</screen>
   </step>
   <step performance="required">
    <para>
     <filename>/etc/ctdb/nodes</filename>に、クラスタ内の各ノードの全プライベートIPアドレスを含むすべてのノードを挿入します。
    </para>
<screen>192.168.1.10
192.168.1.11</screen>
   </step>
   <step performance="required">
    <para>
     <command>csync2</command>を使用して、設定ファイルをすべてのノードにコピーします。
    </para>
    <screen><prompt role="root">root # </prompt>csync2 <option>-xv</option></screen>
    <para>
     詳細については、<xref linkend="pro-ha-installation-setup-csync2-start"/>を参照してください。
    </para>
   </step>


   <step performance="required">
    <para>
     CTDBリソースをクラスタに追加します。
    </para>

<screen><command>crm</command> configure
<prompt role="custom">crm(live)configure# </prompt><command>primitive</command> ctdb ocf:heartbeat:CTDB params \
    ctdb_manages_winbind="false" \ 
    ctdb_manages_samba="true" \
    ctdb_recovery_lock="/shared/samba/ctdb.lock" \
      op monitor interval="10" timeout="20" \
      op start interval="0" timeout="90" \
      op stop interval="0" timeout="100"
<prompt role="custom">crm(live)configure# </prompt><command>clone</command> ctdb-clone ctdb \
    meta globally-unique="false" interleave="true"
<prompt role="custom">crm(live)configure# </prompt><command>colocation</command> ctdb-with-fs inf: ctdb-clone fs-clone
<prompt role="custom">crm(live)configure# </prompt><command>order</command> start-ctdb-after-fs inf: fs-clone ctdb-clone
<prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
   </step>
   <step performance="required">
    <para>
     クラスタ対応のIPアドレスを追加します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive</command> ip ocf:heartbeat:IPaddr2 params ip=192.168.2.222 \
  clusterip_hash="sourceip-sourceport" op monitor interval=60s
<prompt role="custom">crm(live)configure# </prompt><command>clone</command> ip-clone ip meta globally-unique="true"
<prompt role="custom">crm(live)configure# </prompt><command>colocation</command> ip-with-ctdb inf: ip-clone ctdb-clone
<prompt role="custom">crm(live)configure# </prompt><command>order</command> start-ip-after-ctdb inf: ctdb-clone ip-clone
<prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
   </step>
   <step performance="required">
    <para>
     結果を確認します。
    </para>
<screen><prompt role="root">root # </prompt><command>crm</command> status
Clone Set: dlm-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: o2cb-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: c-ocfs2-3
     Started: [ hex-14 hex-13 ]
 Clone Set: ctdb-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: ip-clone (unique)
     ip:0       (ocf::heartbeat:IPaddr2):       Started hex-13
     ip:1       (ocf::heartbeat:IPaddr2):       Started hex-14</screen>
   </step>
   <step performance="required">
    <para>クライアントコンピュータからテストを行います。Linuxクライアントで、Sambaアクセス用のユーザを追加します。
    </para>
    <screen><prompt role="root">root # </prompt><command>smbpasswd</command> <option>-a</option> <replaceable>USERNAME</replaceable></screen>
   </step>
   <step performance="required"><para>新しいユーザのホームディレクトリにアクセスできるかどうかをテストします。</para>
    <screen><prompt role="root">root # </prompt>smbclient -u <replaceable>USERNAME</replaceable>//192.168.2.222/<replaceable>USERNAME</replaceable></screen>
   </step>


  </procedure>
 </sect1>
 <sect1 id="sec-ha-samba-ad">
  <title>Active Directoryドメインへの追加</title>

  

  <para>
   Active Directory (AD)は、Windowsサーバシステムのディレクトリサービスです。
  </para>

  <para>
   次の手順は、CTDBクラスタをActive Directoryドメインに追加する方法を概説しています。
  </para>

  <procedure>
   <step performance="required">
    <para>
     Active Directoryドメインのセットアップ方法については、Windows Serverのマニュアルを参照してください。この例では、次のパラメータを使用します。
    </para>
    <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>
         <para>
          ADおよびDNSサーバ
         </para>
        </entry>
        <entry>
<screen>win2k3.2k3test.example.com</screen>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          ADドメイン
         </para>
        </entry>
        <entry>
<screen>2k3test.example.com</screen>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          クラスタADメンバーのNETBIOS名
         </para>
        </entry>
        <entry>
<screen>CTDB-SERVER</screen>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

   </step>
   <step performance="required">
    <para>
     <xref linkend="pro-ha-samba-config-ctdb"/>
    </para>
   </step>
   <step performance="required">
    <para>
     <xref linkend="pro-ha-samba-config-join-ad"/>
    </para>
   </step>
  </procedure>

  <para>
   次のステップは、CTDBの設定です。
  </para>

  <procedure id="pro-ha-samba-config-ctdb">
   <title>CTDBの設定</title>
   <step performance="required">
    <para>
     クラスタが、<xref linkend="sec-ha-samba-basicconf"/>に示されているとおり設定されていることを確かめます。
    </para>
   </step>
   <step performance="required">
    <para>
     1つのノードでCTDBリソースを停止します。
    </para>
<screen><prompt role="root">root # </prompt> crm resource stop ctdb-clone</screen>
   </step>
   <step performance="required">
    <para>
     <filename>/etc/samba/smb.conf</filename>設定ファイルを開き、NetBIOS名を追加して、ファイルを閉じます。
    </para>
<screen>[global
    netbios name = CTDB-SERVER</screen>
    <para>
     セキュリティやワークグループなどのその他の設定は、YaSTウィザードで追加されます。
    </para>
   </step>
   <step performance="required">
    <para>
     すべてのノードで<filename>/etc/samba.conf</filename>ファイルを更新します。
    </para>
<screen><prompt role="root">root # </prompt>csync2 -xv</screen>
   </step>
   <step performance="required">
    <para>
     CTDBリソースをリスタートします。
    </para>
<screen><prompt role="root">root # </prompt>crm resource start ctdb-clone</screen>
   </step>
  </procedure>

  <para>
   最後に、クラスタをActive Directoryサーバに参加させます。
  </para>

  <procedure id="pro-ha-samba-config-join-ad">
   <title>Active Directoryへの参加</title>
   <step performance="required">
    <para>
     次のファイルが、すべてのクラスタホストにインストールされるように、Csync2設定に含まれていることを確認します。
    </para>
<screen>/etc/samba/smb.conf
/etc/security/pam_winbind.conf
/etc/krb5.conf
/etc/nsswitch.conf
/etc/security/pam_mount.conf.xml
/etc/pam.d/common-session</screen>
    <para>
     この作業には、YaSTの<guimenu>Csync2の設定</guimenu>モジュールをっ使用することもできます。<xref linkend="sec-ha-installation-setup-csync2"/>を参照してください。
    </para>
   </step>
   <step performance="required">
    <para>
     <xref linkend="pro-ha-samba-basicconf"/>の説明に従って、CTDBリソースを作成します。
    </para>
   </step>
   <step performance="required">
    <para>
     YaSTを実行し、<guimenu>ネットワークサービス</guimenu>エントリから<guimenu>Windowsドメインメンバーシップ</guimenu>モジュールを開きます。
    </para>
   </step>
   <step performance="required">
    <para>
     ドメインまたはワークグループの設定を入力して、<guimenu>OK</guimenu>をクリックして終了します。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec-ha-samba-testing">
  <title>クラスタ対応Sambaのデバッグとテスト</title>

  <para>
   クライアント対応Sambaサーバのデバッグには、次のツールを使用できます。これらのツールは、さまざまなレベルで動作します。
  </para>

  <variablelist>
   <varlistentry>
    <term><command>ctdb_diagnostics</command>
    </term>
    <listitem>
     <para>
      このツールを実行して、クラスタ対応Sambaサーバを診断します。詳細なデバッグメッセージが出力されるので、発生している問題を追跡するのに役立ちます。
     </para>
     <para>
      <command>ctdb_diagnostics</command>コマンドは、次のファイルを検索します。これらのファイルは、すべてのノードで利用できる必要があります。
     </para>
<screen>/etc/krb5.conf
/etc/hosts
/etc/ctdb/nodes
/etc/sysconfig/ctdb
/etc/resolv.conf
/etc/nsswitch.conf
/etc/sysctl.conf
/etc/samba/smb.conf
/etc/fstab
/etc/multipath.conf
/etc/pam.d/system-auth
/etc/sysconfig/nfs
/etc/exports
/etc/vsftpd/vsftpd.conf</screen>
     <para>
      <filename>/etc/ctdb/public_addresses</filename>ファイルと<filename>/etc/ctdb/static-routes</filename>ファイルが存在する場合は、それらもチェックされます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ping_pong</command>
    </term>
    <listitem>
     <para>
      <command>ping_pong</command>では、ファイルシステムがCTDBに適合しているかどうかチェックできます。このコマンドは、クラスタファイルシステムの一定のテスト(コヒーレンスやパフォーマンスなどのテスト)を実行して(<ulink url="http://wiki.samba.org/index.php/Ping_pong"/>参照)、高負荷の状況下におけるクラスタの動作を示す情報を提供します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><command>send_arp</command>ツールおよび<systemitem class="resource">SendArp</systemitem>リソースエージェント</term>
    <listitem>
     <para>
      <systemitem class="resource">SendArp</systemitem>リソースエージェントは、<filename>/usr/lib/heartbeat/send_arp</filename>(または<filename>/usr/lib64/heartbeat/send_arp</filename>)にあります。<command>send_arp</command>ツールはGratuitous ARP (余計なアドレス解決プロトコル)パケットを送信し、他のマシンのARPテーブルを更新するために使用できます。これは、フェールオーバープロセス後の通信問題の識別に役立ちます。Sambaのクラスタ化されたIPアドレスを表示しているのにも関わらず、ノードに接続またはpingできない場合は、<command>send_arp</command>コマンドを使用して、ノードはARPテーブルの更新のみが必要であるのかをテストします。
     </para>
     <para>
      詳細については、<ulink url="http://wiki.wireshark.org/Gratuitous_ARP"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   クラスタファイルシステムの特定の側面をテストするには、次の手順に従います。
  </para>

  <procedure>
   <title>クラスタファイルシステムのコヒーレンスとパフォーマンスをテストする</title>
   <step performance="required">
    <para>
     1つのノードで<command>ping_pong</command>コマンドを開始します。プレースホルダ<replaceable>N</replaceable>はノード数+1で置き換えます。共有ストレージでは<filename><replaceable>ABSPATH</replaceable>/data.txt</filename>ファイルが使用可能で、すべてのノード上でアクセスできます(<replaceable>ABSPATH</replaceable>は絶対パスを示しています)。
    </para>
<screen><command>ping_pong</command> <replaceable>ABSPATH</replaceable>/data.txt <replaceable>N</replaceable></screen>
    <para>
     1つのノードでだけ実行しているので、ロッキングレートは非常に高いと予想してください。プログラムがロッキングレートを出力しない場合は、クラスタファイルシステムを置き換えます。
    </para>
   </step>
   <step performance="required">
    <para>
     同じパラメータを使用して、別のノードで<command>ping_pong</command>の2つ目のコピーを開始します。
    </para>
    <para>
     ロッキングレートが大幅に下がることを予想できます。使用しているクラスタファイルシステムに次のどれかが当てはまる場合は、クラスタファイルシステムを置き換えます。
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       <command>ping_pong</command>がロッキングレート(秒単位)を出力しない。
      </para>
     </listitem>
     <listitem>
      <para>
       2つのインスタンスのロッキングレートがほぼ同じではない。
      </para>
     </listitem>
     <listitem>
      <para>
       2つ目のインスタンスの開始後にロッキングレートが下がらなかった。
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step performance="required">
    <para>
     <command>ping_pong</command>の3つ目のコピーを開始します。もう1つノードを追加し、ロッキングレートの変化に注目します。
    </para>
   </step>
   <step performance="required">
    <para>
     <command>ping_pong</command>コマンドを1つずつ終了させます。単一ノードの状態に戻るまで、ロッキングレートの増加が観察されるはずです。予想したような振る舞いが見られなかった場合には、<xref linkend="cha-ha-ocfs2"/>に記されている詳細を参照してください。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec-ha-samba-moreinfo">
  <title>その他の情報</title>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <ulink url="http://linux-ha.org/wiki/CTDB_(resource_agent)"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://wiki.samba.org/index.php/CTDB_Setup"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://ctdb.samba.org"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://wiki.samba.org/index.php/Samba_%26_Clustering"/>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
