<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE glossary PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<glossary xml:base="ha_glossary.xml" id="gl-heartb">
 <title>用語集</title>
 <glossentry><glossterm>アクティブ/アクティブ、アクティブ/パッシブ</glossterm>
  <glossdef>
   <para>
    
    サービスがノード上で実行される方法の概念。アクティブ/パッシブシナリオでは、1つ以上のサービスがアクティブノード上で実行され、パッシブノードはアクティブノードの失敗を待機します。アクティブ/アクティブでは、各ノードがアクティブであると同時にパッシブです。たとえば、一部の<emphasis/>サービスは実行されていますが、それ以外のサービスは他のノードから引き継ぐことができます。DRBDのプライマリ/セカンダリとデュアルプライマリに類似しています。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>アービトレータ</glossterm>
  <glossdef>
   <para>
    Geoクラスタ内の追加インスタンスで、サイト間にまたがるリソースのフェールオーバーなどの決定に関する合意の形成を手助けします。アービトレータは専用モードで1つまたは複数のブースインスタンスを実行する単一のマシンです。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>AutoYaST</glossterm>
  <glossdef>
   <para>
    AutoYaSTは、ユーザの介入なしで、1つ以上のSUSE Linux Enterpriseシステムを自動的にインストールするためのシステムです。 
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm><systemitem>bindnetaddr</systemitem> (バインドネットワークアドレス)</glossterm>
  <glossdef>
   <para>
    Corosyncエグゼクティブのバインド先のネットワークアドレス。 
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>ブース</glossterm>
  <glossdef>
   <para>
    Geoクラスタのサイト間のフェールオーバープロセスを管理するインスタンス。その目的は、1つのサイトのみでマルチサイトリソースをアクティブにすることです。これは、サイトをダウンする必要のある場合、クラスタサイト間のフェールオーバードメインとして処理される、いわゆるチケットを使用することで可能になります。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm><systemitem class="daemon">boothd</systemitem> (ブースデーモン)</glossterm>
  <glossdef>
   <para>
    Geoクラスタ内のそれぞれの参加クラスタおよびアービトレータが、サービスである<systemitem class="daemon">boothd</systemitem>を実行します。これは、別のサイトで実行しているブースデーモンに接続し、接続性の詳細を交換します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>CCM (コンセンサスクラスタメンバーシップ)</glossterm>
  <glossdef>
   <para>
    CCMは、どのノードがクラスタを設定するか決定し、この情報をクラスタで共有します。ノードまたはクォーラムの新規追加および損失は、CCMによって通知されます。CCMモジュールはクラスタの各ノード上で実行されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>CIB (クラスタ情報ベース)</glossterm>
  <glossdef>
   <para>
    クラスタの設定とステータス(クラスタオプション、ノード、リソース、制約、相互の関係性)の全体的な表現。XMLで作成され、メモリに常駐します。マスタCIBは、<xref linkend="glos-dc" xrefstyle="select:nopage"/>で保持および保守され、他のノードに複製されます。CIBに対する通常の読み書き操作は、マスタCIBによってシリアルに処理されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>クラスタ</glossterm>
  <glossdef>
   <para>
    <emphasis/>「ハイパフォーマンス」クラスタは、結果を早く出すためにアプリケーション負荷を共有するコンピュータ(実際または仮想のコンピュータ)のグループです。<emphasis>高可用性</emphasis>クラスタは、サービスの可用性を最大にすることを第一に設計されています。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>クラスタパーティション</glossterm>
  <glossdef>
   <para>
    1つ以上のノードとその他のクラスタ間で通信が失敗した場合は、常にクラスタパーティションが発生します。クラスタのノードはパーティションに分割されますが、アクティブなままです。これらは同じパーティション内のノードのみと通信可能で、切り離されたノードは認識しません。つまり、他のパーティションのノードの損失は確認できないため、スプリットブレインシナリオが作成されます(<xref linkend="glos-splitbrain"/>も参照)。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>同時実行違反</glossterm>
  <glossdef>
   <para>
    クラスタ内の1つのノードだけで実行する必要があるリソースが、複数のノード上で実行されています。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>conntrackツール</glossterm>
  <glossdef>
   <para>
    カーネル内の接続トラッキングシステムとやり取りできるようにして、iptablesでの<emphasis>ステートフルな</emphasis>パケット検査を可能にします。High Availability Extensionによって、クラスタノード間の接続ステータスを同期化するために使用されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>CRM (クラスタリソースマネージャ)</glossterm>
  <glossdef>
   <para>
    すべての非ローカルインタラクションの調整に責任を負う主要管理エンティティ。High Availability Extensionでは、PacemakerをCRMとして使用します。 クラスタの各ノードにはノード独自のCRMインスタンスがありますが、DC上で実行されるCRMインスタンスは、決定を他の非ローカルCRMに中継し、それらからの入力を処理するために選択されたものです。CRMは、いくつかのコンポーネント(CRM自身のノードとその他のノード両方のローカルリソースマネージャ、非ローカルCRM、管理コマンド、フェンシング機能、メンバーシップ層、およびブース)と対話します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm><systemitem class="daemon">crmd</systemitem> (クラスタリソースマネージャデーモン)</glossterm>
  <glossdef>
   <para>
    CRMは、crmdというデーモンとして実装されます。 crmdは各クラスタノード上にインスタンスを持ちます。マスタとして動作するcrmdインスタンスを1つ選択することにより、クラスタのすべての意思決定が一元化されます。選択したcrmdプロセス(またはそのプロセスが実行されているノード)で障害が発生したら、新しいcrmdプロセスが確立されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
   <glossterm>crmsh</glossterm>
   <glossdef>
     <para>コマンドラインユーティリティcrmshは、クラスタ、ノード、およびリソースを管理します。 </para>
     <para>詳細については、<xref linkend="cha-ha-manual-config"/>を参照してください。</para>     
   </glossdef>
 </glossentry>
  <glossentry><glossterm>Csync2</glossterm>
  <glossdef>
   <para>
    クラスタ内のすべてのノード、およびGeoクラスタ全体に設定ファイルを複製するために使用できる同期ツールです。
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="glos-dc"><glossterm>DC (指定コーディネータ)</glossterm>
  <glossdef>
   <para>
    クラスタ内のCRMは、指定コーディネータ(DC)として選択されます。DCは、ノードのフェンシングやリソースの移動など、クラスタ全体におよぶ変更が必要かどうかを判断できる、クラスタ内で唯一のエンティティです。DCは、CIBのマスターコピーが保持されるノードでもあります。その他すべてのノードは、現在のDCから設定とリソース割り当て情報を取得します。DCは、メンバーシップの変更後、クラスタ内のすべてのノードから選抜されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>障害</glossterm>
  <glossdef>
   <para>
    自然、人、ハードウェアのエラー、ソフトウェアのバグなどによって引き起こされる重要なインフラストラクチャの想定外の障害
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>障害復旧</glossterm>
  <glossdef>
   <para>
    障害復旧は、障害発生後、ビジネス機能を通常どおりの、安定した状態に修復するプロセスです。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>障害復旧プラン</glossterm>
  <glossdef>
   <para>
    ITインフラストラクチャへの影響を最小限に抑えながら障害から復旧する戦略。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>DLM (分散ロックマネージャ)</glossterm>
  <glossdef>
   <para>
    DLMは、クラスタファイルシステムのディスクアクセスを調整し、ファイルロッキングを管理して、パフォーマンスと可用性を向上します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>DRBD</glossterm>
  <glossdef>
   <para>
    <trademark class="registered">DRBDは、高可用性クラスタを構築するためのブロックデバイスです。</trademark>ブロックデバイス全体が専用ネットワーク経由でミラーリングされ、ネットワークRAID-1として認識されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>既存のクラスタ</glossterm>
  <glossdef>
   <para>
      <quote>既存のクラスタ</quote>という用語は、1つ以上のノードで構成されるクラスタを指すものとして使用されます。既存のクラスタは、通信チャネルを定義する基本的なCorosync設定を持ちますが、必ずしもリソース設定を持つとは限りません。
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="glo-failover"><glossterm>フェールオーバー</glossterm>
  <glossdef>
   <para>
    リソースまたはノードが1台のマシンで失敗し、影響を受けるリソースが別のノードで起動されたときに発生します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>フェールオーバードメイン</glossterm>
  <glossdef>
   <para>
    ノード障害の発生時にクラスタサービスを実行することができる、指定されたクラスタノードのサブセット。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>フェンシング</glossterm>
  <glossdef>
   <para>
    孤立または失敗したクラスタメンバーによる共有リソースへのアクセス防止の概念を示しています。クラスタノードが失敗した場合は、シャットダウンまたはリセットすることで問題の発生を防止します。つまり、ステータスが不明なノードからリソースがロックアウトされます。

    
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>geoクラスタ(地理的に離れたクラスタ)</glossterm>
  <glossdef>
   <para>
    詳細については、<xref linkend="glos-geo"/>を参照してください。
     
   </para>
  </glossdef>
 </glossentry>


 
  <glossentry id="glos-lb">
   <glossterm>負荷分散</glossterm>
   <glossdef>
     <para>複数のサーバを同じサービスに参加させて、同じ作業を行わせる機能。</para>
   </glossdef>
 </glossentry>
  
 <glossentry><glossterm>ローカルクラスタ</glossterm>
  <glossdef>
   <para>
    1つのロケーション内の単一のクラスタ(たとえば、すべてのノードが1つのデータセンターにある)。ネットワークの遅延時間は無視できます。ストレージは通常、すべてのノードに同時にアクセスされます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>LRM (ローカルリソースマネージャ)</glossterm>
  <glossdef>
   <para>
    リソースに対する操作の実行を担当します。リソースエージェントスクリプトを使用してこれらの操作を実行します。LRMはポリシーを認識していないという点で、<quote>ダム</quote>です。何をすべきか認識させるにはDCが必要です。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm><systemitem>mcastaddr</systemitem> (マルチキャストアドレス)</glossterm>
  <glossdef>
   <para>
      Corosyncエグゼクティブによるマルチキャストに使用されるIPアドレス。このIPアドレスはIPv4またはIPv6のいずれかに設定できます。 
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm><systemitem>mcastport</systemitem> (マルチキャストポート)</glossterm>
  <glossdef>
   <para>
      クラスタ通信に使用されるポート。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>メトロクラスタ</glossterm>
  <glossdef>
   <para>
    すべてのサイトがファイバチャネルで接続された、複数の建物またはデータセンターにわたってストレッチできる単一のクラスタ。ネットワークの遅延時間は通常は短くなります(約20マイルの距離で&lt;5ms)。 ストレージは頻繁にレプリケートされます(ミラーリングまたは同期レプリケーション)
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>multicast (マルチキャスト)</glossterm>
  <glossdef>
   <para>
      ネットワーク内で一対多数の通信に使用される技術で、クラスタ通信に使用できます。Corosyncはマルチキャストとユニキャストの両方をサポートしています。
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="glos-geo"><glossterm>Geoクラスタ</glossterm>
  <glossdef>
   <para>
    それぞれにローカルクラスタを持つ、複数の地理的に離れたサイトで構成されます。サイトはIPによって交信します。サイト全体のフェールオーバーはより高いレベルのエンティティ(ブース)によって調整されます。Geoクラスタは限られたネットワーク帯域幅および高レイテンシに対応する必要があります。ストレージは同期的にレプリケートされます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>ノード</glossterm>
  <glossdef>
   <para>
    クラスタのメンバで、ユーザには見えない(実際または仮想の)コンピュータ。
   </para>
  </glossdef>
 </glossentry>

 <glossentry><glossterm>PE (ポリシーエンジン)</glossterm>
  <glossdef>
   <para>
    ポリシーエンジンはCIBでのポリシー変更を実装するために必要な処理を計算します。PEは(リソース)アクションのリストと、次のクラスタ状態に移るために必要な依存性を含む遷移グラフも作成します。PEは常にDC上で実行されます。
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss-quorum"><glossterm>クォーラム</glossterm>
  <glossdef>
   <para>
    クラスタでは、クラスタパーティションは、ノード(投票)の大多数を保有する場合、クォーラムを持つ(<quote>定数に達している</quote>)と定義されます。クォーラムはただ1つのパーティションで識別されます。複数の切断されたパーティションまたはノードが処理を続行してデータおよびサービスが破損されないようにする、アルゴリズムの一部です(スプリットブレイン)。クォーラムはフェンシングの前提条件で、このためクォーラムは一意になります。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>RA (リソースエージェント)</glossterm>
  <glossdef>
   <para>
    プロキシとして機能してリソースを管理する(リソースの開始、停止、監視などを行う)スクリプト。High Availability Extensionは、OCF (Open Cluster Framework)リソースエージェント、LSB (Linux Standards Base)リソースエージェント(標準のLSB initスクリプト)、Heartbeatリソースエージェントという3種類のリソースエージェントをサポートしています。詳細については、<xref linkend="sec-ha-config-basics-raclasses"/>を参照してください。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>Rear (Relaxおよび回復)</glossterm>
  <glossdef>
   <para>
    障害復旧イメージを作成するための管理ツールセット。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>リソース</glossterm>
  <glossdef>
   <para>
    Pacemakerに認識されている、任意のタイプのサービスまたはアプリケーション。IPアドレス、ファイルシステム、データベースなどです。
   </para>
    <para><quote>リソース</quote>という用語は、DRBDでも使用されており、レプリケーション用の一般的な接続を使用しているブロックデバイスのセットの名前を表します。</para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>RRP (冗長リングプロトコル)</glossterm>
  <glossdef>
   <para>
     ネットワーク障害の一部または全体に対する災害耐性のために、複数の冗長ローカルエリアネットワークが使用できるようになります。この方法では、ひとつのネットワークが作動中である限り、クラスタ通信を維持できます。Corosyncはトーテム冗長リングプロトコルをサポートします。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>SBD (STONITHブロックデバイス)</glossterm>
  <glossdef>
   <para>
    すべてのノードが共有ストレージへのアクセスを持つ環境で、小さなパーティションを使用してディスクベースのフェンシングを行います。
   </para>
  </glossdef>
 </glossentry>

 <glossentry><glossterm>SFEX (共有ディスクファイル排他制御)</glossterm>
  <glossdef>
   <para>
    SFEXはSANにおけるストレージ保護機能を提供します。
   </para>
  </glossdef>
 </glossentry>

 <glossentry id="glos-splitbrain"><glossterm>スプリットブレイン</glossterm>
  <glossdef>
   <para>
    クラスタノードが(ソフトウェアまたはハードウェア障害によって)互いに認識しない2つ以上のグループに分割される場合のシナリオです。STONITHによって、スプリットブレインがクラスタ全体に悪影響をおよぼさなくなります。<quote>パーティションされたクラスタ</quote>シナリオとも呼ばれます。
   </para>
   <para>
    スプリットブレインという用語は、DRBDでも使用されますが、2つのノードに異なるデータが含まれることを意味します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>SPOF (シングルポイント障害)</glossterm>
  <glossdef>
   <para>
    失敗するとクラスタ全体の障害をトリガしてしまう、クラスタのコンポーネント。
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="glo-stonith"><glossterm>STONITH</glossterm>
  <glossdef>
   <para>
    <quote>Shoot the other node in the head</quote>の略です。動作異常のノードをシャットダウンすることでクラスタに問題を発生させないようにするフェンシングメカニズムを指しています。
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
   <glossterm>スイッチオーバー</glossterm>
   <glossdef>
     <para>クラスタ内の他のノードへの、予定されたオンデマンドのサービス移動。詳細については、<xref linkend="glo-failover"/>を参照してください。
     </para>
   </glossdef>
 </glossentry>
  <glossentry><glossterm>チケット</glossterm>
  <glossdef>
   <para>
    Geoクラスタで使用されるコンポーネント。チケットは指定のクラスタサイトの特定のリソースを実行する権利を付与します。チケットは1度に1つのサイトだけが所有できます。リソースを特定のチケットに依存させることができます。定義されたチケットがサイトで使用できる場合のみそれぞれのリソースが始動します。その逆に、チケットが削除されると、そのチケットに依存するリソースが自動的に停止します。
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>ユニキャスト</glossterm>
  <glossdef>
   <para>
    ひとつのあて先ネットワークにメッセージを送信する技術Corosyncはマルチキャストとユニキャストの両方をサポートしています。Corosyncでは、ユニキャストはUDP-unicast (UDPU)として実装されます。
   </para>
  </glossdef>
 </glossentry>
</glossary>
