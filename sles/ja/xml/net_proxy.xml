<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>


<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="net_proxy.xml" xml:id="cha-squid"><title>Squidプロキシサーバ</title><info><abstract>
  <para>
   Squidは、LinuxおよびUNIXプラットフォームで普及しているプロキシキャッシュです。これは、WebまたはFTPサーバなど、要求されたインターネットオブジェクトを、サーバよりも要求しているワークステーションに近いマシン上に格納することを意味します。Squidは、応答時間や低帯域幅の使用を最適化するために複数の階層上でセットアップされます。エンドユーザにとって透過的なモードである場合さえあります。squidGuardを利用すれば、Webコンテンツをフィルタリングすることができます。
  </para>
 </abstract></info>
 <indexterm> <primary>Squid</primary> </indexterm> <indexterm> <primary>プロキシ</primary> <see>Squid</see> </indexterm>
 <indexterm> <primary>Squid</primary> <secondary>キャッシュ</secondary> </indexterm> <indexterm> <primary>プロキシ</primary> <secondary>キャッシュ</secondary> </indexterm>
 <para>
  Squidはプロキシキャッシュとして機能します。クライアント(この場合はWebブラウザ)からのオブジェクト要求をサーバにリダイレクトします。要求されたオブジェクトがサーバから到着すると、クライアントに配信され、そのコピーがディスクキャッシュに格納されます。キャッシングの利点の1つは、様々なクライアントが同じオブジェクトを要求した場合に、これらのオブジェクトをハードディスクのキャッシュから提供できることです。これにより、クライアントはインターネットから取得する場合に比べてはるかに高速にデータを受信できます。また、ネットワークトラフィックも減少します。<indexterm><primary>プロキシ</primary><secondary>利点</secondary> </indexterm>
 </para>
 <para>
  <indexterm><primary>Squid</primary><secondary>機能</secondary></indexterm>Squidは、実際のキャッシングとともに、プロキシサーバの通信階層にまたがる負荷の分散、プロキシにアクセスする全クライアントの厳密なアクセス制御リストの定義、他のアプリケーションを使用した特定のWebページへのアクセスの許可または拒否、ユーザのアクセスパターンの調査を目的としたアクセス回数の多いWebサイトに関する統計の生成など、多様な機能を備えています。Squidは汎用プロキシではありません。通常は、HTTP接続のみのプロキシを行います。また、FTP、Gopher、SSL、およびWAISの各プロトコルをサポートしていますが、Real Audio、news、またはビデオ会議など、他のインターネットプロトコルはサポートしていません。Squidは様々なキャッシュ間に通信を提供するUDPプロトコルのみをサポートしているため、他の多くのマルチメディアプログラムはサポートされません。
 </para>
 <section xml:id="sec-squid-cacheinfos">
  <title>プロキシキャッシュに関する注意事項</title>

  <para>
   プロキシキャッシュとして、Squidは複数の方法で使用されます。ファイアウォールと組み合わせると、セキュリティに役立ちます。複数のプロキシを一緒に使用できます。また、キャッシュされるオブジェクトのタイプ、およびその期間も決定できます。
  </para>

  <section xml:id="sec-squid-security">
   <title>Squidとセキュリティ</title><indexterm> <primary>Squid</primary> <secondary>セキュリティ</secondary> </indexterm> <indexterm> <primary>セキュリティ</primary> <secondary>Squid</secondary> </indexterm>
   <para>
    Squidをファイアウォールと併用し、プロキシキャッシュを使用して社内ネットワークを外部から保護することもできます。ファイアウォールは、Squidを除く外部サービスに対する全クライアントのアクセスを拒否します。すべてのWeb接続は、プロキシを使用して確立する必要があります。この設定では、SquidはWebアクセスを完全に制御します。
   </para>
   <para>
    <indexterm><primary>Squid</primary><secondary>セキュリティ</secondary></indexterm>ファイアウォール設定にDMZが含まれている場合、プロキシはこのゾーン内で動作しなければなりません。「<emphasis>透過的な</emphasis>」プロキシの実装方法については、<xref linkend="sec-squid-proxyconfigtrans"/>を参照してください。この場合、プロキシに関する情報が必要とされないので、クライアントの設定が簡略化されます。
   </para>
  </section>

  <section xml:id="sec-squid-morecaches">
   <title>複数のキャッシュ</title><indexterm> <primary>Squid</primary> <secondary>キャッシュ</secondary> </indexterm>
   <para>
    複数のSquidインスタンスを設定して、これらの間でオブジェクトを交換できます。これにより、システム全体の負荷を削減し、ローカルネットワーク内の既存のオブジェクトの検出率を高めることができます。また、キャッシュから兄弟キャッシュまたは親キャッシュにオブジェクト要求を転送できるように、キャッシュ階層を設定することも可能です。これにより、ローカルネットワーク内の他のキャッシュから、またはソースから直接、オブジェクトを取得できるようになります。
   </para>
   <para>
    ネットワークトラフィック全体が増大することは望ましくないため、キャッシュ階層に適切なトポロジを選択することがきわめて重要です。大規模ネットワークの場合は、サブネットワークごとにプロキシサーバを設定して親プロキシに接続し、親プロキシはISPのプロキシキャッシュに接続すると有効です。
   </para>
   <para>
    この通信はすべて、UDPプロトコルの最上位で実行されるICP (Internet cache protocol)により処理されます。キャッシュ間のデータ転送は、TCPベースのHTTP (hyper text transmission protocol)により処理されます。
   </para>
   <para>
    どのサーバからオブジェクトを取得するのが最も適切であるかを検出するために、あるキャッシュからすべての兄弟プロキシにICPリクエストが送信されます。各兄弟プロキシは、オブジェクトが検出された場合はHITコード、検出されなかった場合はMISSを使用し、ICPレスポンスを介してリクエストに応答します。複数のHITレスポンスが検出された場合、プロキシサーバは、最も短時間で応答したキャッシュまたは最も近接するキャッシュなどのファクタに従ってダウンロード元のサーバを決定します。リクエストを満たすレスポンスが受信されなければ、リクエストは親キャッシュに送信されます。
   </para>
   <tip>
    <para>
     ネットワーク上の様々なキャッシュ内でオブジェクトの重複を回避するために、CARP (Cache Array Routing Protocol)やHTCP (Hypertext Cache Protocol)など、他のICPプロトコルが使用されます。ネットワーク上で維持されるオブジェクトが多くなるほど、必要なオブジェクトを検出できる可能性が高くなります。
    </para>
   </tip>
  </section>

  <section xml:id="sec-squid-latching">
   <title>インターネットオブジェクトのキャッシュ</title><indexterm> <primary>Squid</primary> <secondary>オブジェクトステータス</secondary> </indexterm>
   <para>
    ネットワーク上で使用可能なオブジェクトがすべてスタティックであるとは限りません。動的に生成されるCGIページ、アクセス件数カウンタ、暗号化されたSSLコンテンツドキュメントが多数存在します。この種のオブジェクトは、アクセスされるたびに変化するためキャッシュされません。
   </para>
   <para>
    その他のオブジェクトについても、キャッシュにどのくらいの期間残しておくかという問題があります。これを決定するために、オブジェクトが取り得るさまざまな状態を定義し、キャッシュ内のすべてのオブジェクトに1つの状態を割り当てます。Webサーバとプロキシサーバは、これらのオブジェクトに<quote>Last modified</quote>や<quote>Expires</quote>などのヘッダおよび対応する日付を追加することで、オブジェクトの状態を検出します。その他、オブジェクトをキャッシュしないように指定するヘッダも使用されます。
   </para>
   <para>
    ハードディスクの空き容量不足が原因で、通常、キャッシュ内のオブジェクトはLRU (Least Recently Used)などのアルゴリズムを使用して置換されます。これは、基本的には、長期間要求されていないオブジェクトがプロキシにより消去されることを意味します。
   </para>
  </section>
 </section>
 <section xml:id="sec-squid-sysneeds">
  <title>システム要件</title><indexterm> <primary>Squid</primary> <secondary>システム要件</secondary> </indexterm>

  <para>
   最も重要なのは、システムにかかる最大ネットワーク負荷を判断することです。ピーク時の負荷は1日の平均負荷の4倍を超えることもあるため、負荷のピークに注意する必要があります。疑わしい場合は、システム要件を多めに見積もることをお勧めします。これは、Squidの動作状態が処理能力の限界に近づくと、サービス品質が著しく低下する可能性があるためです。次の各項では、システム要件を重要度に従って説明します。
  </para>

  <section xml:id="sec-squid-sysneeds-disk">
   <title>ハードディスク</title>
   <para>
    速度はキャッシュ処理に重要な役割を果たすため、この要件には特に注意する必要があります。ハードディスクの場合、このパラメータは<emphasis>ランダムシーク時間</emphasis>と呼ばれ、ミリ秒単位で計測されます。Squidがハードディスクとの間で読み書きするデータブロックは比較的少数である傾向があるため、データのスループットよりもハードディスクのシーク時間の方が重要です。プロキシに使用する場合は、回転速度の高い(つまり読取り/書込みヘッドが必要な位置に迅速に移動する)ハードディスクを選択するのが適切です。システムを高速化するには、同時に多数のディスクを使用する方法や、ストライピングRAIDアレイを使用する方法があります。
   </para>
  </section>

  <section>
   <title>ディスクキャッシュのサイズ</title><indexterm> <primary>Squid</primary> <secondary>キャッシュ</secondary> <tertiary>サイズ</tertiary> </indexterm>
   <para>
    キャッシュ容量が小さいと、簡単にいっぱいになってしまい、要求頻度の低いオブジェクトが新規オブジェクトで置換されるため、HIT (要求された既存のオブジェクトの検出)の可能性は低くなります。逆に、キャッシュに1GBが使用可能で、ユーザが1日に10MB分しかアクセスしなければ、キャッシュがいっぱいになるまでに100日以上かかることになります。
   </para>
   <para>
    必要なキャッシュサイズを判断する場合に最も簡単なのは、接続の最大転送速度を考慮することです。1MBit/sの接続の場合、最大転送速度は125KB/sになります。このトラフィックがすべてキャッシュに入ると、1時間で合計450MBとなり、このトラフィックがすべて8時間の営業時間帯にのみ発生すると仮定すれば、1日に3.6GBに達します。通常、接続が上限まで使用されることはないため、キャッシュで処理される合計データ量は約2GBと想定できます。このため、Squidで1日にブラウズされたデータをキャッシュに保持する例では、2GBのディスク容量が必要となります。
   </para>
  </section>

  <section xml:id="sec-squid-ram">
   <title>RAM</title><indexterm> <primary>Squid</primary> <secondary>RAM</secondary> </indexterm>
   <para>
    Squidに必要なメモリ容量(RAM)は、キャッシュ内のオブジェクト数に比例します。また、Squidでは、キャッシュオブジェクト参照と要求頻度の高いオブジェクトの検索を高速化するために、これらのデータがメインメモリに格納されます。ランダムアクセスメモリの方が、ハードディスクよりも高速です。
   </para>
   <para>
    その他、Squidでは、処理された全IPアドレスの表、正確なドメインネームキャッシュ、最もアクセス頻度の高いオブジェクト、アクセス制御リスト、バッファなどのデータもメモリに保持する必要があります。
   </para>
   <para>
    ディスクにスワップする必要があるとシステムパフォーマンスが大幅に低下するため、Squidプロセス用に十分なメモリを用意する必要があります。キャッシュメモリの管理には、cachemgr.cgiツールを使用できます。このツールの詳細については、<xref linkend="sec-squid-cachemgr"/>を参照してください。

   </para>
  </section>

  <section xml:id="sec-squid-cpu">
   <title>CPU</title><indexterm> <primary>Squid</primary> <secondary>CPU</secondary> </indexterm>
   <para>
    Squidは、CPU集約型のプログラムではありません。プロセッサの負荷が増大するのは、キャッシュの内容がロードまたはチェックされる間のみです。マルチプロセッサマシンを使用しても、システムパフォーマンスは向上しません。効率を高めるには、高速ディスクまたは増設メモリを購入することをお薦めします。
   </para>
  </section>
 </section>
 <section xml:id="sec-squid-start">
  <title>Squidの起動</title><indexterm> <primary>Squid</primary> <secondary>開始</secondary> </indexterm>

  <para>
   まだインストールしていない場合は、<systemitem>squid</systemitem>パッケージをインストールします。<systemitem>squid</systemitem>はデフォルトのSUSE Linux Enterprise Serverインストールスコープに含まれていません。
  </para>

  <para>
   SquidはSUSE® Linux Enterprise Serverで事前に設定されているため、インストール直後に起動できます。スムーズに起動するように、インターネットおよび少なくとも1つのネームサーバにアクセスできるようにネットワークを設定してください。ダイナミックDNS設定でダイヤルアップ接続を使用すると、問題が発生する可能性があります。このような場合は、少なくともネームサーバを明確に入力してください。というのは、<filename>/etc/resolv.conf</filename>内でDNSサーバが検出されないとSquidが起動しないためです。
  </para><indexterm> <primary>環境設定ファイル </primary><secondary>resolv.conf</secondary> </indexterm>

  <section>
   <title>Squidの起動コマンドと停止コマンド</title><indexterm> <primary>Squid</primary> <secondary>ディレクトリ</secondary> </indexterm> <indexterm> <primary>スクリプト</primary> <secondary>init.d</secondary> <tertiary>squid</tertiary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>パーミッション</secondary> </indexterm> <indexterm> <primary>環境設定ファイル</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    Squidを起動するには、<systemitem class="username">root</systemitem>権限でコマンドラインに「<command>rcsquid</command> <option>start</option>」と入力します。初期起動時には、最初に <filename>/var/cache/squid</filename>内でキャッシュのディレクトリ構造を定義する必要があります。この操作は、<filename>/etc/init.d/squid</filename>起動スクリプトにより自動的に実行され、完了までに数秒ないし数分かかります。右側に緑で<literal>完了</literal>と表示されたら、Squidは正常にロードされています。ローカルシステム上でSquidの機能をテストするには、ブラウザでプロキシとして「<option>localhost</option>」、ポートとして「<option>3128</option>」を入力します。
   </para>
   <para>
    ユーザ全員にSquidおよびインターネットへのアクセスを許可するには、設定ファイル<filename>/etc/squid/squid.conf</filename>内のエントリを<option>http_access deny all</option>から<option>http_access allow all</option>に変更します。ただし、その場合は、この操作によりSquidが完全に誰でもアクセス可能になることに注意してください。したがって、プロキシへのアクセスを制御するACLを定義します。この詳細については、<xref linkend="sec-squid-acl"/>ファイルを参照してください。
   </para><indexterm> <primary>Squid</primary> <secondary>停止</secondary> </indexterm>
   <para>
    設定ファイル<filename>/etc/squid/squid.conf</filename>を変更した後、Squidで変更後の設定ファイルを再ロードする必要があります。それには、<command>rcsquid</command> <option>reload</option>を使用します。または、「<command>rcsquid</command> <option>restart</option>」と入力してSquidを完全に再起動します。
   </para>
   <para>
    プロキシが稼動しているかどうかを確認するには、<command>rcsquid</command><option>status</option>コマンドを使用します。Squidをシャットダウンするには、<command>rcsquid</command><option>stop</option>コマンドを使用します。Squidは、クライアントへの接続が切断されてデータがディスクに書き込まれるまで最大30秒(<filename>/etc/squid/squid.conf</filename>の<option>shutdown_lifetime</option>オプション）待機するため、終了までに少し時間がかかることがあります。
   </para>
   <warning>
    <title>Squidの終了</title>
    <para>
     <indexterm><primary>Squid</primary><secondary>キャッシュ</secondary><tertiary>破損</tertiary></indexterm><command>kill</command>または<command>killall</command>を使ってSquidを終了すると、キャッシュが破損してしまう可能性があります。Squidを再起動できるようにするには、破損したキャッシュを完全に削除する必要があります。
    </para>
   </warning><indexterm> <primary>Squid</primary> <secondary>ログファイル</secondary> </indexterm> <indexterm> <primary>ログファイル</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>トラブルシューティング</secondary> </indexterm>
   <para>
    Squidが正常に起動しても短時間で停止する場合は、ネームサーバエントリに誤りがないかどうかと、<filename>/etc/resolv.conf</filename>ファイルが欠落していないかどうかを確認してください。起動エラーの原因は、Squidにより<filename>/var/log/squid/cache.log</filename>ファイルに記録されます。システムのブート時にSquidを自動的にロードする必要がある場合は、YaSTランレベルエディタを使用してSquidを必要なランレベルで有効にしてください。詳細については、<xref linkend="sec-boot-runlevel-edit"/>を参照してください。
   </para><indexterm> <primary>Squid</primary> <secondary>アンインストール</secondary> </indexterm>
   <para>
    Squidをアンインストールしても、キャッシュ階層やログファイルは削除されません。これらを削除するには、<filename>/var/cache/squid</filename>ディレクトリを手動で削除します。
   </para>
  </section>

  <section>
   <title>ローカルDNSサーバ</title><indexterm> <primary>DNS</primary> <secondary>Squid and</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>DNS</secondary> </indexterm> <indexterm> <primary>環境設定ファイル</primary> <secondary>named.conf</secondary> </indexterm>
   <para>
    サーバで独自ドメインを管理しない場合も、ローカルDNSサーバをセットアップすると有効です。ローカルDNSサーバは単にキャッシュ専用ネームサーバとして機能し、特に設定しなくてもルートネームサーバを介してDNSリクエストを解決できます(<xref linkend="sec-dns-bind"/>を参照)。ローカルDNSサーバを有効にする方法は、インターネット接続の設定時にダイナミックDNSを選択したかどうかによって異なります。
   </para>
   <variablelist>
    <varlistentry>
     <term>ダイナミックDNS</term>
     <listitem>
      <para>
       通常、ダイナミックDNSを使用すると、インターネット接続の確立時にプロバイダによってDNSサーバが設定され、ローカルの<filename>/etc/resolv.conf</filename>ファイルが自動的に調整されます。この動作は<filename>/etc/sysconfig/network/config</filename>ファイルの<constant>NETCONFIG_DNS_POLICY</constant> sysconfig変数で制御されます。YaST sysconfigエディタで、<constant>NETCONFIG_DNS_POLICY</constant>を<constant>""</constant>に設定します(<xref linkend="sec-boot-sysconfig-edit"/>を参照)。次に、<filename>/etc/resolv.conf</filename>ファイルに、ローカルのDNSサーバとして「<systemitem class="domainname">localhost</systemitem>」、そのIPアドレスとして「<systemitem class="ipaddress">127.0.0.1</systemitem>」を入力します。このようにすれば、Squidは常に、起動時にローカルのネームサーバを検出できます。
      </para>
      
      <para>
       プロバイダのネームサーバにアクセスするには、<filename>/etc/named.conf</filename>設定ファイル内の<systemitem>forwarders</systemitem>にサーバ名とそのIPアドレスを入力します。ダイナミックDNSを使用すると、sysconfig変数の<constant>NETCONFIG_DNS_POLICY</constant>を「<constant>auto</constant>」に設定することによって、この動作を接続の確立時に自動的に実行することができます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>スタティックDNS</term>
     <listitem>
      <para>
       スタティックDNSを使用する場合は、接続の確立時にいずれの自動DNS調整も行われないため、sysconfig変数を変更する必要はありません。ただし、<filename>/etc/resolv.conf</filename>ファイルにローカルのDNSサーバを入力する必要があります。また、プロバイダのスタティックなネームサーバにアクセスするには、<filename>/etc/named.conf</filename>ファイルに、サーバ名<systemitem>forwarders</systemitem>とそのIPアドレスを手動で入力する必要があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>DNSとファイアウォール</title>
    <para>
     ただし、ファイアウォールを実行している場合は、DNSリクエストがファイアウォールを通過できることを確認してください。
    </para>
   </tip>
  </section>
 </section>
 <section xml:id="sec-squid-configfile">
  <title>etc/squid/squid.conf設定ファイル</title><indexterm> <primary>Squid</primary> <secondary>設定</secondary> </indexterm> <indexterm> <primary>設定</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>環境設定ファイル</primary> <secondary>squid.conf</secondary> </indexterm>

  <para>
   Squidのプロキシサーバ設定は、すべて<filename>/etc/squid/squid.conf</filename>ファイル内で行います。Squidを初めて起動する場合、このファイル内で設定を変更する必要はありませんが、外部クライアントは最初はアクセスを拒否されます。プロキシは<systemitem class="domainname">localhost</systemitem>に使用できます。デフォルトポートは<option>3128</option>です。プリインストール済みの<filename>/etc/squid/squid.conf</filename>設定ファイルには、オプションの詳細と多数の例が用意されています。ほぼすべてのエントリは(コメント行を示す) <literal>#</literal>記号で始まり、関連する指定が行末にあります。示されている値は、ほぼ常にデフォルト値に関係しているため、パラメータを実際に変更せずにコメント記号を削除しても、ほとんどの場合に影響はありません。サンプルはそのまま残し、変更したパラメータと共にオプションを次の行に挿入することをお勧めします。この方法では、簡単にデフォルト値に戻し、変更と比較することができます。
  </para>

  <tip>
   <title>更新後の設定ファイルの変更について</title>
   <para>
    Squidを旧バージョンから更新した場合は、新規の<filename>/etc/squid/squid.conf</filename>を編集し、旧バージョンのファイルで行った変更のみを適用することをお勧めします。旧バージョンの<filename>squid.conf</filename>ファイルを使用すると、オプションが変更されたり新たな変更が加えられているために、設定が機能しなくなる危険性があります。
   </para>
  </tip>

  <section>
   <title>一般設定オプション(選択)</title>
   <variablelist>
    <varlistentry>
     <term>http_port 3128</term>
     <listitem>
      <para>
       これは、Squidがクライアントリクエストをリスンするポートです。デフォルトポートは<option>3128</option>ですが、<option>8080</option>も一般的です。必要な場合は、複数のポート番号を空白で区切って指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      cache_peer <replaceable>hostname</replaceable><replaceable>type</replaceable><replaceable>proxy-port</replaceable><replaceable>icp-port</replaceable>
     </term>
     <listitem>
      <para>
       ここでは、たとえばISPのプロキシを使用する場合に、親プロキシを入力します。<replaceable>hostname</replaceable>には、使用するプロキシの名前またはIPアドレスを入力し、<replaceable>type</replaceable>には<option>親</option>プロキシを入力します。<replaceable>proxy-port</replaceable>には、ブラウザで使用する親の演算子でも指定されているポート番号(通常は<option>8080</option>)を入力します。icp-port<replaceable>は、</replaceable>7<option>に設定するか、親のICPポートが不明で、その使用がプロバイダに無関係な場合は</option>0<option>に設定します。</option>また、ICPプロトコルの使用を禁止するため、ポート番号に続けて<option>default</option>および<option>no-query</option>を指定することもできます。このように指定すると、Squidはプロバイダのプロキシに関する限り通常のブラウザのように動作します。
       
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_mem 8 MB</term>
     <listitem>
      <para>
       このエントリは、Squidで頻繁に求められる応答に対して使用できるメモリ容量を定義します。デフォルトは<option>8MB</option>です。これは、Squidのメモリ使用量を指定せず、メモリ使用量を超えても構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_dir ufs /var/cache/squid/ 100 16 256</term>
     <listitem>
      <para>
       <emphasis>cache_dir</emphasis>エントリは、すべてのオブジェクトが格納されるディスク上のディレクトリを定義します。末尾の数値は、使用される最大ディスク領域(単位MB)と第1レベルと第2レベルのディレクトリ数を示します。<option>ufs</option>パラメータは残しておく必要があります。デフォルトでは、<filename>/var/cache/squid</filename>ディレクトリに 100MBのディスク領域を使用して 16個のサブディレクトリが作成され、各サブディレクトリにぞれぞれ 256個以上のサブディレクトリが含まれます。使用するディスク領域を指定するときには、予備のディスク領域を十分に残しておきます。ここでは、使用可能ディスク領域の50～80%が最も有効です。ディレクトリが多すぎるとパフォーマンスが低下する可能性があるため、ディレクトリに関する最後の2つの数値を増やす場合は注意してください。複数のディスクでキャッシュを共有する場合は、複数の<emphasis>cache_dir</emphasis>行を入力します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_access_log /var/log/squid/access.log</term>
     <term>cache_log /var/log/squid/cache.log</term>
     <term>cache_store_log /var/log/squid/store.log</term>
     <listitem>
      <para>
       <indexterm><primary>Squid</primary><secondary>ログファイル</secondary></indexterm><indexterm><primary>ログファイル</primary><secondary>Squid</secondary></indexterm>これらの3つのエントリは、Squidによるすべてのアクションの記録先のパスを指定します。通常、ここでは何も変更しません。Squidの使用負荷が大きい場合は、キャッシュとログファイルを複数のディスクに分散すると有効な場合があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>emulate_httpd_log off</term>
     <listitem>
      <para>
       このエントリを<emphasis>on</emphasis>に設定すると、読込み可能なログファイルが生成されます。ただし、一部の評価プログラムではこの形式のログファイルを解釈できません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>client_netmask 255.255.255.255</term>
     <listitem>
      <para>
       このエントリを使用して、ログファイルでクライアントのIPアドレスをマスクします。ここで「<systemitem class="netmask">255.255.255.0</systemitem>」と入力すると、IPアドレスの最終桁はゼロに設定されます。このようにして、クライアントのプライバシーを保護できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ftp_user Squid@</term>
     <listitem>
      <para>
       このエントリでは、Squidで匿名FTPログインに使用する必要のあるパスワードを設定します。一部のFTPサーバには電子メールアドレスの妥当性が確認されるため、ここでは有効な電子メールアドレスを指定できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_mgr webmaster</term>
     <listitem>
      <para>
       Squidが予期せずにクラッシュした場合のメッセージ送信先となる電子メールアドレスを指定します。デフォルトは<emphasis>webmaster</emphasis>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>logfile_rotate 0</term>
     <listitem>
      <para>
       <command>squid</command> <option>-k rotate</option>を実行すると、<command>Squid</command>は保護されたログファイルを循環利用することができます。このプロセス中にファイルに番号が割り当てられ、指定した値に達すると最も古いファイルが上書きされます。SUSE Linux Enterprise Serverではログファイルのアーカイブと削除が設定ファイル<option>/etc/logrotate/squid</option>内に設定されたcronジョブより実行されるため、デフォルト値は<filename>0</filename>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>append_domain &lt;domain&gt;</term>
     <listitem>
      <para>
       append_domain<emphasis>には、未指定の場合に自動的に追加されるドメインを指定します。</emphasis>通常、ブラウザに「<emphasis>www</emphasis>」と入力して独自Webサーバにアクセスできるように、このエントリには独自ドメインを入力します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>forwarded_for on</term>
     <listitem>
      <para>
       このエントリを<emphasis>off</emphasis>に設定すると、SquidではHTTPリクエストからクライアントのIPアドレスとシステム名が削除されます。設定しない場合は、次のような行がヘッダに追加されます。
      </para>
<screen>X-Forwarded-For: 192.168.0.1</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>negative_ttl 5 minutes; negative_dns_ttl 5 minutes</term>
     <listitem>
      <para>
       通常、これらのlを変更する必要はありません。ただし、ダイヤルアップ接続を使用する場合は、インターネットが一時的にアクセス不能になる場合があります。Squidは、失敗したリクエストを記録してから新規リクエストの発行を拒絶しますが、インターネット接続は再確立されています。このような場合は、<emphasis>minutes</emphasis>を<emphasis>seconds</emphasis>に変更します。次にブラウザの<emphasis>更新</emphasis>をクリックすると、数秒後にダイヤルアッププロセスが再開されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>never_direct allow <replaceable>acl_name</replaceable>
     </term>
     <listitem>
      <para>
       Squidがインターネットからリクエストを直接取り込むのを防ぐには、上記のコマンドを使用して他のプロキシに強制的に接続します。このプロキシは、あらかじめ<emphasis>cache_peer</emphasis>に入力しておく必要があります。<replaceable>acl_name</replaceable>として<option>all</option>を指定すると、すべてのリクエストは「<emphasis>親</emphasis>」に直接転送されます。たとえば、プロキシの使用を奨励しているプロバイダや、ファイアウォールによるインターネットへのダイレクトアクセスを拒否しているプロバイダを使用している場合は、この設定が必要な場合があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

  <section xml:id="sec-squid-acl">
   <title>アクセス制御オプション</title><indexterm> <primary>Squid</primary> <secondary>ACL</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>パーミッション</secondary> </indexterm>
   <para>
    Squidには、プロキシへのアクセスを制御する詳細システムが用意されています。ACLを実装することで、このシステムを簡単かつ包括的に設定できます。そのためには、順次処理されるルールを持ったリストが必要です。ACLは定義しなければ使用できません。<emphasis>all</emphasis>や<emphasis>localhost</emphasis>などのデフォルトACLがいくつか用意されています。ただし、ACLを定義しただけで、実際に適用されるわけではありません。実際に適用するには、<emphasis>http_access</emphasis>ルールも共に定義する必要があります。
   </para>
   <variablelist>
    <varlistentry>
     <term>acl &lt;acl_name&gt; &lt;type&gt; &lt;data&gt;</term>
     <listitem>
      <para>
       <indexterm><primary>設定ファイル</primary><secondary>squid.conf</secondary></indexterm>ACLの定義には、3つ以上の指定が必要です。名前<emphasis>&lt;acl_name&gt;</emphasis>は任意に選択できます。&lt;type&gt;<emphasis> は、</emphasis>/etc/squid/squid.conf<emphasis>ファイルの</emphasis>ACCESS CONTROLS<filename>セクションにある多数のオプションから選択できます。</filename><emphasis>&lt;data&gt;</emphasis>の指定は個々のACLタイプに応じて異なり、ホスト名、IPアドレスまたはURLを使用するなど、ファイルから読み込むこともできます。次に単純な例を示します。
      </para>
<screen>
acl mysurfers srcdomain .my-domain.com
acl teachers src 192.168.1.0/255.255.255.0
acl students src 192.168.7.0-192.168.9.0/255.255.255.0
acl lunch time MTWHF 12:00-15:00
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>http_access allow &lt;acl_name&gt;</term>
     <listitem>
      <para>
       <emphasis>http_access</emphasis>では、プロキシの使用を許可されるユーザと、インターネット上でどのユーザが何にアクセスできるかを定義します。この場合、ACLを設定する必要があります。<emphasis>localhost</emphasis>および<emphasis>all</emphasis>の定義はすでに前述しており、この2つのACLでは<emphasis>deny</emphasis>または<emphasis>allow</emphasis>を介してアクセスを拒否または許可できます。多数の<emphasis>http_access</emphasis>エントリを含むリストを作成できます。各エントリは上から下へと処理され、発生順に従って個々のURLへのアクセスが許可または拒否されます。最後のエントリは、常に<emphasis>http_access deny all</emphasis>にする必要があります。次の例では、<emphasis>localhost</emphasis>はすべてに自由にアクセスできますが、他のホストはいずれもアクセスを完全に拒否されます。
      </para>
<screen>
http_access allow localhost
http_access deny all
</screen>
      <para>
       また、このルールの使用を示す次の例では、グループ<systemitem class="groupname">teachers</systemitem>は常にイン^ーネットへのアクセス権を持ちます。グループ<systemitem class="groupname">students</systemitem>は月曜日から金曜日のランチタイム中にのみアクセス権を取得します。
      </para>
<screen>
http_access deny localhost
http_access allow teachers
http_access allow students lunch time
http_access deny all
</screen>
      <para>
       <emphasis>http_access</emphasis>エントリを含むリストは、読みやすいよう<filename>に/etc/squid/squid.conf</filename>ファイルの指定の位置にのみ入力してください。つまり、次の2つの間に入力します。
      </para>
<screen>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR
# CLIENTS
</screen>
      <para>
       および最後の
      </para>
<screen>http_access deny all</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>redirect_program /usr/bin/squidGuard</term>
     <listitem>
      <para>
       このオプションでは、squidGuardなど、望ましくないURLをブロックできるリダイレクタを指定します。プロキシ認証と適切なACLを利用すれば、さまざまなユーザグループ個別にインターネットアクセスを制御することができます。squidGuardを使用する場合は、個別にインストール、設定する必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>auth_param basic program /usr/sbin/pam_auth</term>
     <listitem>
      <para>
       ユーザのプロキシ認証が必要な場合は、pam_authなどの対応するプログラムを設定します。ユーザがpam_authに初めてアクセスすると、ログインウィンドウが表示され、ユーザ名とパスワードを入力することになります。また、有効なログインを持つクライアント以外はインターネットを使用できないように、ACLも必要です。
      </para>
<screen>
acl password proxy_auth REQUIRED

http_access allow password
http_access deny all
</screen>
      <para>
       <emphasis>proxy_auth</emphasis>の後の<emphasis>REQUIRED</emphasis>は、許可されるユーザ名のリストまたはそのリストへのパスで置き換えることができます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ident_lookup_access allow &lt;acl_name&gt;</term>
     <listitem>
      <para>
       ここでは、ACLで定義されたクライアントすべてについてidentリクエストを実行させ、各ユーザの識別情報を検索させます。<emphasis>&lt;acl_name&gt;</emphasis> に <emphasis>all</emphasis> を適用すると、すべてのクライアントに対して有効になります。また、すべてのクライアントでidentデーモンを実行する必要があります。Linuxの場合、そのためにはpidentdパッケージをインストールします。Microsoft Windowsの場合は、インターネットからダウンロードできるフリーソフトウェアが提供されています。identが正常に検索されたクライアントのみが許可されるように、対応するACLをここで定義します。
      </para>
<screen>
acl identhosts ident REQUIRED

http_access allow identhosts
http_access deny all
</screen>
      <para>
       この場合も、<emphasis>REQUIRED</emphasis>を許可されるユーザ名のリストで置き換えることができます。<emphasis>ident</emphasis>を使用すると、その検索がリクエストごとに繰り返されるため、アクセス速度が少し低下する場合があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
 </section>
 <section xml:id="sec-squid-proxyconfigtrans">
  <title>透過型プロキシの設定</title><indexterm> <primary>プロキシ</primary> <secondary>透過型</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>透過型プロキシ</secondary> </indexterm>

  <para>
   一般的なプロキシサーバの作業では、Webブラウザがプロキシサーバの特定のポートに要求を送信し、プロキシが要求に応じて必要なオブジェクトを提供します。ネットワークで操作する場合には、次のような状況が発生することがあります。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     セキュリティ上の理由から、すべてのクライアントがインターネットでのナビゲーションにはプロキシを使用することを推奨される場合。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのクライアントが、認識するかどうかに関係なくプロキシを使用する必要がある場合。
    </para>
   </listitem>
   <listitem>
    <para>
     ネットワーク上でプロキシが移動しても、既存のクライアントは古い設定を保持する必要がある場合。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   いずれの場合も、透過型プロキシを使用できます。原則はきわめて簡単で、プロキシはWebブラウザのリクエストを捕捉して応答するため、Webブラウザは要求したページを出所を認識せずに受信します。透過型プロキシと呼ばれるのは、このプロセス全体が透過的に実行されるためです。
  </para>

  <section>
   <title>/etc/squid/squid.conf内の設定オプション</title><indexterm> <primary>環境設定ファイル</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    squidを透過的なプロキシとして動作させるには、メインの設定ファイル<filename>/etc/squid/squid.conf</filename>内で<systemitem>http_port</systemitem>タグの<systemitem>transparent</systemitem>オプションを使用します。squidの再起動後に必要なことは、httpポートを<systemitem>http_port</systemitem>で指定されたポートにリダイレクトするようファイアウォールを再設定することだけです。次のsquid設定ラインでは、これはポート3128になっています。
   </para>
<screen>http_port 3128 transparent</screen>
  </section>

  <section>
   <title>SuSEfirewall2を使用したファイアウォール設定</title><indexterm> <primary>Squid</primary> <secondary>ファイアウォール</secondary> </indexterm> <indexterm> <primary>ファイアウォール</primary> <secondary>Squidおよび</secondary> </indexterm>
   <para>
    ファイアウォールを介して受信するリクエストをすべて、Squidポートへのポート転送ルールに従ってリダイレクトします。そのためには、<xref linkend="sec-fire-SuSE-yast"/>で説明しているように、同梱のツールであるSuSEfirewall2を使用します。このツールの設定ファイルは<filename>/etc/sysconfig/SuSEfirewall2</filename>にあります。この設定ファイルは、適切なエントリで構成されています。透過型プロキシを設定するには、次に示すようにいくつかのファイアウォールオプションを設定する必要があります。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      インターネットを指すデバイス:<systemitem>FW_DEV_EXT</systemitem>="eth1"
     </para>
    </listitem>
    <listitem>
     <para>
      インターネットを指すデバイス:<systemitem>FW_DEV_INT</systemitem>="eth0"
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <indexterm><primary>環境設定ファイル</primary><secondary>サービス</secondary></indexterm>インターネットなど、信頼されない(外部)ネットワークからアクセスが許可される、ファイアウォール上のポートとサービスを定義します(<filename>/etc/services</filename>を参照)。この例では、外部に対してWebサービスのみが提供されます。
   </para>
<screen>
FW_SERVICES_EXT_TCP="www"
</screen>
   <para>
    安全な(内部)ネットワークからのアクセスが許可される、ファイアウォール上のポートとサービス(TCPサービスとUDPサービスの両方)を定義します(<filename>/etc/services</filename>を参照)。
   </para>
<screen>
FW_SERVICES_INT_TCP="domain www 3128"
FW_SERVICES_INT_UDP="domain"
</screen>
   <para>
    この例では、WebサービスとSquid (デフォルトポートは<option>3128</option>)へのアクセスが許可されます。domain<quote>サービスはDNS (ドメインネームサービス)を意味します。</quote>このサービスは一般に使用されます。一般に公開しない場合は、単に上記のエントリから削除して次のオプションを<literal>no</literal>に設定します。
   </para>
<screen>
FW_SERVICE_DNS="yes"
</screen>
   <para>
    最も重要なのは<option>15</option>番目のオプションです。
   </para>
   <example xml:id="dat-fw-opt15">
    <title>ファイアウォールの設定:オプション15</title>
<screen># 15.)
# Which accesses to services should be redirected to a local port on
# the firewall machine?
#
# This option can be used to force all internal users to surf via
# your squid proxy, or transparently redirect incoming webtraffic to
# a secure webserver.
#
# Format: 
# list of &lt;source network&gt;[,&lt;destination network&gt;,&lt;protocol&gt;[,dport[:lport]]
# Where protocol is either tcp or udp. dport is the original
# destination port and lport the port on the local machine to
# redirect the traffic to
#
# An exclamation mark in front of source or destination network
# means everything EXCEPT the specified network
#
# Example: "10.0.0.0/8,0/0,tcp,80,3128 0/0,172.20.1.1,tcp,80,8080"
</screen>
   </example>
   <para>
    上記のコメントは、次の構文を示しています。最初に、プロキシファイアウォールにアクセスする内部ネットワークのIPアドレスとネットマスクを入力します。次に、これらのクライアントからのリクエストの送信先となるIPアドレスとネットマスクを入力します。Webブラウザの場合は、ネットワーク<systemitem>0/0</systemitem>を指定します。これは、<quote>あらゆる場所」を意味するワイルドカードです。</quote>その後、これらのリクエストの送信先となるオリジナルポートを入力し、最後に全リクエストのリダイレクト先となるポートを入力します。SquidはHTTP以外のプロトコルをサポートしているため、要求は他のポートからFTP (ポート21)、HTTPSまたはSSL (ポート443)などのプロキシにリダイレクトされます。この例では、Webサービス(ポート<option>80</option>)がプロキシポート(ポート<option>3128</option>)にリダイレクトされます。他にも追加するネットワークやサービスがある場合は、対応するエントリに空白1個で区切って指定する必要があります。
   </para>
<screen>
FW_REDIRECT="192.168.0.0/16,0/0,tcp,80,3128"
</screen>
   <para>
    ファイアウォールとそれを使用した新規設定を開始するには、<filename>/etc/sysconfig/SuSEfirewall2</filename>ファイル内のエントリを変更します。エントリ<systemitem>START_FW</systemitem>を<literal>"yes"</literal>に設定する必要があります。
   </para>
   <para>
    <indexterm> <primary>ログファイル</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>ログファイル</secondary> </indexterm><xref linkend="sec-squid-start"/>のように、Squidを起動します。すべてが正常に機能していることを確認するには、<filename>/var/log/squid/access.log</filename>のSquidログを確認します。<indexterm> <primary>ポート</primary> <secondary>スキャニング</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>透過型プロキシ</secondary> </indexterm>すべてのポートが正常に設定されていることを確認するには、ネットワーク外部の任意のコンピュータから、マシンのポートスキャンを実行します。Webサービス(ポート80)のみがオープンしている必要があります。nmapコマンドを使用してポートを検索する場合の構文は、<command>nmap</command> <option>-O IP_address</option>です。
   </para>
  </section>
 </section>
 <section xml:id="sec-squid-cachemgr">
  <title>cachemgr.cgi</title><indexterm> <primary>Squid</primary><secondary>統計情報</secondary></indexterm><indexterm><primary>Squid</primary><secondary>cachemgr.cgi </secondary></indexterm>

  <para>
   キャッシュマネージャ(cachemgr.cgi)は、実行中のSquidプロセスによるメモリ使用状況に関する統計を表示するCGIユーティリティです。また、キャッシュを管理し、サーバのロギングなしで統計を表示できる便利な手段でもあります。
  </para>

  <section>
   <title>設定</title><indexterm> <primary>Squid</primary> <secondary>Apache</secondary> </indexterm> <indexterm> <primary>Apache</primary> <secondary>Squid</secondary> </indexterm>
   <para>
    最初に、システムでWebサーバを稼働させる必要があります。で説明しているように、Apacheを設定します。<xref linkend="cha-apache2"/>Apacheがすでに稼働しているかどうかを確認するには、<systemitem class="username">root</systemitem>として「<command>rcapache</command><option>status</option>」コマンドを入力します。次のようなメッセージが表示される場合は、マシンでApacheが実行されています。
   </para>
<screen>
Checking for service httpd: OK 
Server uptime: 1 day 18 hours 29 minutes 39 seconds   
</screen>
   <para>
    Apacheはそのマシンで実行されています。稼働していない場合は、「<command>rcapache</command> <option>start</option>」と入力して、SUSE Linux Enterprise Serverのデフォルト設定でApacheを起動します。最後に、<filename>cachemgr.cgi</filename>ファイルをApacheのディレクトリ<filename>cgi-bin</filename>にコピーします。32ビットの場合は次のようになります。
   </para>
<screen>cp /usr/lib/squid/cachemgr.cgi /srv/www/cgi-bin/</screen>
   <para>
    64ビット環境では、<filename>cachemgr.cgi</filename>ファイルは<filename>/usr/lib64/squid/</filename>の下に位置しており、これをApacheディレクトリにコピーするコマンドは次のとおりです。
   </para>
<screen>cp /usr/lib64/squid/cachemgr.cgi /srv/www/cgi-bin/</screen>
  </section>

  <section>
   <title>/etc/squid/squid.conf内のキャッシュマネージャACL</title><indexterm> <primary>Squid</primary> <secondary>アクセス制御</secondary> </indexterm> <indexterm> <primary>環境設定ファイル</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    キャッシュマネージャの場合は、オリジナルファイル内で次のようなデフォルト設定が必要です。最初に、2つのACLを定義し、http_accessオプションがこれらのACLを使用して、CGIスクリプトからSquidへのアクセスを付与するようにします。キャッシュマネージャはcache_objectプロトコルを用いてSquidと通信するため、最初のACLが最も重要です。
   </para>
<screen>
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255
</screen>
   <para>
    次の規則によって、ApacheにSquidへのアクセス権が付与されます。
   </para>
<screen>
http_access allow manager localhost
http_access deny manager
</screen>
   <para>
    これらの規則は、WebサーバとSquidが同じマシンで実行されている場合を想定しています。キャッシュマネージャとSquidとの通信が他のコンピュータ上のWebサーバで開始される場合は、<xref linkend="dat-acl"/>に示すACLを追加します。
   </para>
   <example xml:id="dat-acl">
    <title>アクセスルール</title>
<screen>
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255
acl webserver src 192.168.1.7/255.255.255.255 # webserver IP
</screen>
   </example>
   <para>
    次に、<xref linkend="dat-access"/>に規則を追加して、Webサーバからのアクセスを許可します。
   </para>
   <example xml:id="dat-access">
    <title>アクセスルール</title>
<screen>
http_access allow manager localhost
http_access allow manager webserver
http_access deny manager
</screen>
   </example>
   <para>
    キャッシュのリモートクローズやキャッシュ詳細情報の表示など、より多数のオプションにアクセスする場合は、マネージャのパスワードを設定します。そのためには、マネージャ用のパスワードと表示するオプションのリストを指定してエントリ<systemitem>cachemgr_passwd</systemitem>を設定します。このリストは、<filename>/etc/squid/squid.conf</filename>にエントリのコメントの一部として表示されます。
   </para>
   <para>
    設定ファイルを変更するたびにSquidを再起動してください。それには、<command>rcsquid</command> <option>reload</option>コマンドを使用します。
   </para>
  </section>

  <section>
   <title>統計情報の表示</title>
   <para>
    対応するWebサイトの<link xlink:href="http://webserver.example.org/cgi-bin/cachemgr.cgi"/>にアクセスします。<guimenu>続行</guimenu>をクリックして様々な統計情報をブラウズします。<indexterm> <primary>Squid</primary><secondary>統計情報</secondary></indexterm><indexterm><primary>Squid</primary><secondary>cachemgr.cgi </secondary></indexterm>
   </para>
  </section>
 </section>
 <section xml:id="sec-squid-squidguard">
  <title>squidGuard</title><indexterm> <primary>Squid</primary> <secondary>squidGuard</secondary> </indexterm>

  <para>
   このセクションでは、squidGuardの詳細な設定については説明しません。ごく基本的な設定のみを紹介し、squidGuardの使用法についていくつか助言するに留めます。詳細な設定については、squidGuardのWebサイト<link xlink:href="http://www.squidguard.org"/>を参照してください。
  </para>

  <para>
   squidGuardは、Squid用の無償(GPL)で柔軟で高速なフィルタ、リダイレクタおよびアクセスコントローラプラグインです。squidGuardを利用すれば、Squidキャッシュ上にある異なるユーザグループに対して、異なる制限を持つ複数のアクセスルールを定義することができます。squidGuardは、Squidの標準リダイレクタインタフェースを使用しています。squidGuardの機能を以下に示します。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     一部のユーザによるWebアクセスを、許可されているか既知のWebサーバまたはURLのリストに限定します。
    </para>
   </listitem>
   <listitem>
    <para>
     リストまたはブラックリストに含まれたWebサーバまたはURLへの、一部のユーザによるアクセスをブロックします。
    </para>
   </listitem>
   <listitem>
    <para>
     正規表現または語のリストと一致するURLへの、一部のユーザによるアクセスをブロックします。
    </para>
   </listitem>
   <listitem>
    <para>
     ブロックしたURLを<quote>インテリジェント</quote>CGIベースの情報ページにリダイレクトします。
    </para>
   </listitem>
   <listitem>
    <para>
     未登録ユーザを登録フォームにリダイレクトします。
    </para>
   </listitem>
   <listitem>
    <para>
     バナーを空のGIFにリダイレクトします。
    </para>
   </listitem>
   <listitem>
    <para>
     時刻、曜日、日付などに基づいて異なるアクセスルールを使用します。
    </para>
   </listitem>
   <listitem>
    <para>
     ユーザグループごとに異なるルールを使用します。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   squidGuardとSquidは、以下の用途には使用できません。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     ドキュメント内のテキストの編集、フィルタ処理または検閲。
    </para>
   </listitem>
   <listitem>
    <para>
     JavaScriptやVBscriptなど、HTML埋込みスクリプト言語の編集、フィルタ処理または検閲。
    </para>
   </listitem>
  </itemizedlist><indexterm> <primary>環境設定ファイル</primary> <secondary>squidguard.conf</secondary> </indexterm> <indexterm> <primary>環境設定ファイル</primary> <secondary>squid.conf</secondary> </indexterm>

  <para>
   squidGuard<systemitem class="resource">を使用するにははじめに、インストールします。</systemitem>最小限の設定ファイルとして<filename>/etc/squidguard.conf</filename>を設定します。に設定例が用意されています。<link xlink:href="http://www.squidguard.org/Doc/examples.html"/>最小限の設定で正常に動作したら、より複雑な設定を試してみてください。
  </para>

  <para>
   次に、クライアントがブラックリストに含まれるWebサイトを要求した場合にSquidをリダイレクトするために、ダミーの<quote>アクセス拒否</quote>ページまたは複雑度の異なるCGIページを作成します。Apacheを使用することをお薦めします。
  </para>

  <para>
   ここで、squidGuardを使用するようにSquidを設定します。/etc/squid.conf<filename>ファイル内の次のエントリを使用してください。</filename>
  </para>

<screen>
redirect_program /usr/bin/squidGuard
</screen>

  <para>
   他の<systemitem>redirect_children</systemitem>と呼ばれるオプションには、コンピュータ上で動作するリダイレクト(この場合はsquidGuard)プロセス数を設定します。<quote/> プロセスをより多く設定すると、RMMもそれだけ多く必要になります。最初は少ない数(4など)を試してみください。
  </para>

<screen>
redirect_children 4
</screen>

  <para>
   最後に、<command>rcsquid</command><option>reload</option>を実行し、Squidに新規設定をロードさせます。ここで、ブラウザで設定をテストします。
  </para>
 </section>
 <section xml:id="sec-squid-calamaris">
  <title>Calamarisを使用したキャッシュレポート生成</title><indexterm> <primary>Squid</primary> <secondary>Calamaris</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>レポート</secondary> </indexterm>

  <para>
   Calamarisは、ASCIIまたはHTML形式でキャッシュアクティビティレポートを生成するためのPerlスクリプトです。このスクリプトはネイティブのSquidアクセスログファイルを処理します。Calamarisのホームページは<link xlink:href="http://Calamaris.Cord.de/"/>にあります。このツールはSUSE Linux Enterprise Serverのデフォルトインストールスコープには含まれていません。これを使用するには、<systemitem>calamaris</systemitem>パッケージをインストールしてください。
  </para>

  <para>
   <systemitem class="username">root</systemitem>としてログインし、<command>「cat access.log | calamaris</command> <replaceable>options</replaceable> &gt; reportfile」と入力します。複数のログファイルをパイプする場合は、各ログファイルを古いものから時系列順に指定する必要があります。このプログラムには、次のようなオプションがあります。
  </para>

  <tip>
   <title>シェルとファイルの順序</title>
   <para>
    <filename>access.log.1</filename>、<filename>access.log.2</filename> などのような類似ファイルが複数ある場合、  デフォルトのシェルbashはこれらのファイルを番号以外の順序でソートして、<filename>access.log.を一覧表示します。*</filename>. この問題を解決するには、次の構文を使用できます。<filename>access.log.{1..42}</filename>。これによって1～42の数字拡張子の付いたファイルのリストが生成されます。
   </para>
  </tip>

  <variablelist>
   <varlistentry>
    <term>-a</term>
    <listitem>
     <para>
      使用可能な全レポートを出力
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-w</term>
    <listitem>
     <para>
      HTMLレポートとして出力
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-l</term>
    <listitem>
     <para>
      レポートヘッダにメッセージまたはロゴを挿入
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   各種オプションの詳細については、「<command>man</command><option>calamaris</option>」と入力してプログラムのマニュアルページで参照できます。
  </para>

  <para>
   典型的な例を次に示します。
  </para>

<screen>
cat access.log.{10..1} access.log | calamaris -a -w \ 
&gt; /usr/local/httpd/htdocs/Squid/squidreport.html
</screen>

  <para>
   このコマンドでは、レポートがWebサーバのディレクトリに生成されます。レポートを表示するにはApacheが必要です。
  </para>

  
 </section>
 <section xml:id="sec-squid-moreinfo">
  <title>詳細情報</title>

  <para>
   にあるSquidのホームページにアクセスしてください。<link xlink:href="http://www.squid-cache.org/"/>ここにはS<quote>quid User Guide</quote>が置かれており、Squidに関する広範囲なFAQ集もあります。
  </para>

  <para>
   透過型プロキシの使用方法に関する簡潔な情報は、<systemitem class="resource">/usr/share/doc/howto/en/txt/TransparentProxy.gz</systemitem>に<filename>howtoenh</filename>として含まれています。また、<link xlink:href="squid-users@squid-cache.org"/>で、Squidに関するメーリングリストに登録できます。このアーカイブは<link xlink:href="http://www.squid-cache.org/mail-archive/squid-users/"/>にあります。
  </para>
 </section>
</chapter>
