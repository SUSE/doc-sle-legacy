<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="deployment_firstboot.xml" id="cha-deployment-firstboot">
 <title>カスタマイズした事前インストールの配布</title>
 <para>
  
  カスタマイズした<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>の事前インストールを多数の同じコンピュータにロールアウトすると、各コンピュータに個別にインストールする手間を省けます。また、エンドユーザには標準化されたインストールを提供できます。YaST Firstbootを使用して、カスタマイズした事前インストールのイメージを作成し、エンドユーザが介入する最後のパーソナライズ手順のワークフローを決定します(完全に自動化したインストールができるAutoYaSTとは対照的。詳細については、<xref linkend="cha-deployment-autoinst"/>を参照)。
  
 </para>
 <para>
  カスタムインストールを作成し、それを展開して各自の要件に合わせた環境設定を行わせるには、次のような作業を行います。
 </para>
 <procedure>
  <step performance="required">
   <para>
    クライアントコンピュータに複製する必要のあるディスクを持つマスタコンピュータを準備します。詳細については、<xref linkend="sec-fb-master"/>を参照してください。
   </para>
  </step>
  <step performance="required">
   <para>
    ワークフローをカスタマイズします。詳細については、<xref linkend="sec-fb-customize"/>を参照してください。
   </para>
  </step>
  <step performance="required">
   <para>
    マスタコンピュータのディスクを複製し、そのイメージをクライアントのディスクに展開します。詳細については、<xref linkend="sec-fb-clone"/>を参照してください。
   </para>
  </step>
  <step performance="required">
   <para>
    エンドユーザに、各自の要件に合わせて<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のインスタンスをパーソナライズしてもらいます。詳細については、<xref linkend="sec-fb-personalize"/>を参照してください。
   </para>
  </step>
 </procedure>
 <sect1 id="sec-fb-master">
  <title>マスタマシンの準備</title>

  <para>
   firstbootワークフロー用のマスタマシンを準備するには、以下の手順に従ってください。
  </para>

  <procedure>
   <step id="st-master1" performance="required">
    <para>
     インストールメディアをマスタコンピュータに挿入します。
    </para>
   </step>
   <step id="st-master2" performance="required">
    <para>
     コンピュータを起動します。
    </para>
   </step>
   <step id="st-master3" performance="required">
    <para>
     
     標準のインストールと必要なすべての設定作業を行い、そのコンピュータのブートが完了するまで待ちます。<systemitem>yast2-firstboot</systemitem> パッケージもインストールします。
    </para>
   </step>
   <step id="st-master4" performance="required">
    <para>
     エンドユーザ用のYaST環境設定ワークフローを定義したり、このワークフローに独自のYaSTモジュールを追加したりする場合は、<xref linkend="sec-fb-customize"/>に進んでください。それ以外の場合は、<xref linkend="st-master5"/>に進んでください。
    </para>
   </step>
   <step id="st-master5" performance="required">
    <para>
     <systemitem class="username">root</systemitem>としてfirstbootを有効にします。
    </para>


    <para>
     firstbootの実行をトリガする空のファイル<filename>/var/lib/YaST2/reconfig_system</filename>を作成します。firstbootの環境設定が正しく完了すると、このファイルは削除されます。このファイルを作成するには、次のコマンドを使用します。
    </para>
<screen>touch /var/lib/YaST2/reconfig_system</screen>







   </step>
   <step performance="required">
    <para>
     <xref linkend="sec-fb-clone"/>に進みます。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec-fb-customize">
  <title>firstbootインストールのカスタマイズ</title>

  <para>
   firstbootインストールのワークフローのカスタマイズには、さまざまなコンポーネントが含まれる場合があります。それらのカスタマイズは省略することもできます。何も変更を行わなかった場合、firstbootはデフォルトの設定を使ってインストールを行います。次のオプションを指定できます。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     ユーザへのメッセージのカスタマイズ(<xref linkend="sec-fb-customize-msg"/>参照)
    </para>
   </listitem>
   <listitem>
    <para>
     ライセンスおよびライセンス動作のカスタマイズ(<xref linkend="sec-fb-customize-license"/>参照)
    </para>
   </listitem>
   <listitem>
    <para>
     表示するリリースノートのカスタマイズ(<xref linkend="sec-fb-customize-rn"/>参照)
    </para>
   </listitem>
   <listitem>
    <para>
     インストールに含まれるコンポーネントの順序と数のカスタマイズ(<xref linkend="sec-fb-customize-wf"/>参照)
    </para>
   </listitem>
   <listitem>
    <para>
     追加オプションスクリプトの設定(<xref linkend="sec-fb-customize-script"/>参照)
    </para>
   </listitem>
  </itemizedlist>

  <para>
   これらのコンポーネントをカスタマイズするには、次の環境設定ファイルを変更します。
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>/etc/sysconfig/firstboot</filename>
    </term>
    <listitem>
     <para>
      firstbootのさまざまな側面(リリースノート、スクリプト、ライセンス動作など)を設定します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/etc/YaST2/firstboot.xml</filename>
    </term>
    <listitem>
     <para>
      コンポーネントを有効/無効にしたり、カスタムコンポーネントを追加して、インストールワークフローの環境設定を行います。
     </para>
     <para>
      このようなカスタマイズしたインストールワークフローの翻訳を提供します(<xref linkend="sec-fb-provide-trans"/>参照)。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>



  

  <para>
   カスタマイズの対象がワークフローコンポーネントだけでない場合は、<filename>control.xml</filename>の文書を<phrase os="sled;sles"><ulink url="http://doc.opensuse.org/projects/YaST/SLES11/tdg/inst_in_general_chap.html#product_control"/></phrase>で参照してください。
  </para>

  <sect2 id="sec-fb-customize-msg">
   <title>YaSTメッセージのカスタマイズ</title>
   <para>
    デフォルトでは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のインストールにはさまざまなデフォルトメッセージが含まれています。これらのメッセージは、インストールの進み具合に応じて適宜表示されます。たとえば、歓迎のメッセージ、ライセンスメッセージ、およびインストールの完了を知らせるメッセージなどが含まれます。これらのメッセージを独自のメッセージに変更したり、翻訳したメッセージを入れることができます。独自の歓迎メッセージを入れるには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      <systemitem class="username">root</systemitem>としてログインします。
     </para>
    </step>
    <step performance="required">
     <para>
      環境設定ファイル<filename>/etc/sysconfig/firstboot</filename>を開いて、次の変更を行います。
     </para>
     <substeps performance="required">
      <step performance="required">
       <para>
        <envar>FIRSTBOOT_WELCOME_DIR</envar>に、歓迎メッセージとローカライズ版を含むファイルを保存するディレクトリパスを設定します。次に例を示します。
       </para>
<screen>FIRSTBOOT_WELCOME_DIR="/usr/share/firstboot/"
</screen>
      </step>
      <step performance="required">
       <para>
        歓迎メッセージのファイル名が<filename>welcome.txt</filename>および<filename>welcome_<replaceable>locale</replaceable>.txt</filename> (<replaceable>locale</replaceable>は<quote>cs</quote>や<quote>de</quote>などのISO 639言語コードに一致する)以外の場合、ファイル名のパターンを<envar>FIRSTBOOT_WELCOME_PATTERNS</envar>で指定してください。たとえば、次のようにします。
       </para>
<screen>FIRSTBOOT_WELCOME_PATTERNS="mywelcome.txt"</screen>
       <para>
        このパラメータを設定しない場合、デフォルトの<filename>welcome.txt</filename>が使用されます。
       </para>
      </step>
     </substeps>
    </step>
    <step performance="required">
     <para>
      歓迎メッセージファイルとそのローカライズ版を作成し、それを環境設定ファイル<filename>/etc/sysconfig/firstboot</filename>に指定されているディレクトリに保管します。
     </para>
    </step>
   </procedure>
   <para>
    ライセンスメッセージやインストール完了メッセージも、同じような方法でカスタマイズすることができます。これらの変数は、それぞれ<envar>FIRSTBOOT_LICENSE_DIR</envar>(ライセンス)および<envar>FIRSTBOOT_FINISH_FILE</envar>(完了)になります。
   </para>
   <para>
    インストールの直後にYaSTを起動できる必要がある場合は、<envar>SHOW_Y2CC_CHECKBOX</envar>を「yes」<quote/>に変更します。
   </para>
  </sect2>

  <sect2 id="sec-fb-customize-license">
   <title>ライセンス動作のカスタマイズ</title>
   <para>
    ユーザが使用許諾契約に同意しない場合のインストールシステムの動作をカスタマイズできます。このシナリオに対するシステムの動作には、次の3つがあります。
   </para>
   <variablelist>
    <varlistentry>
     <term>halt</term>
     <listitem>
      
      <para>
       firstbootインストールを中止し、システムをシャットダウンします。デフォルトの設定です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>continue</term>
     <listitem>
      <para>
       firstbootインストールを続行します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>abort</term>
     <listitem>
      <para>
       firstbootインストールを中止しますが、システムのブートを試行します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    動作を決めたら、<envar>LICENSE_REFUSAL_ACTION</envar>に適切な値を設定します。
   </para>
  </sect2>

  <sect2 id="sec-fb-customize-rn">
   <title>リリースノートのカスタマイズ</title>
   <para>
    firstbootで展開する<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のインスタンスを変更したかどうかによって、新しいオペレーティングシステムの重要な情報をエンドユーザに知らせることが必要な場合があります。標準インストールでは、リリースノートを使用して、ユーザに重要な情報を知らせます(リリースノートは、インストールの最終段階の1つで表示されます)。firstbootのインストール完了時に、独自のリリースノートを表示するには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      独自のリリースノートファイルを作成します。<filename>/usr/share/doc/release-notes</filename>にあるサンプルファイルのようなRTF形式を使用して、結果を<filename>RELEASE-NOTES.en.rtf</filename>ファイルに保存してください。
     </para>
    </step>
    <step performance="required">
     <para>
      オプションのローカライズ版をオリジナル版の次に保存し、ファイル名の<literal>en</literal>の部分を該当するISO 639言語コードに置き換えます。たとえば、日本語版の場合は<literal>ja</literal>になります。
     </para>
    </step>
    <step performance="required">
     <para>
      <filename>/etc/sysconfig/firstboot</filename>にあるfirstboot環境設定ファイルを開いて、<envar>FIRSTBOOT_RELEASE_NOTES_PATH</envar>にリリースノートを保存したディレクトリを指定します。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec-fb-customize-wf">
   <title>ワークフローのカスタマイズ</title>
   <para>
    デフォルトでは、標準のfirstbootワークフローには、次のコンポーネントが含まれています。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      言語の選択
     </para>
    </listitem>
    <listitem>
     <para>
      ようこそ
     </para>
    </listitem>

    <listitem>
     <para>
      使用許諾契約
     </para>
    </listitem>
    <listitem>
     <para>
      ホスト名
     </para>
    </listitem>

    <listitem>
     <para>
      Network
     </para>
    </listitem>

    <listitem>
     <para>
      日付と時刻
     </para>
    </listitem>

    <listitem>
     <para>
      Desktop
     </para>
    </listitem>

    <listitem>
     <para>
      rootのパスワード
     </para>
    </listitem>
    <listitem>
     <para>
      ユーザ認証方法
     </para>
    </listitem>
    <listitem>
     <para>
      ユーザ管理
     </para>
    </listitem>
    <listitem>
     <para>
      ハードウェア設定
     </para>
    </listitem>
    <listitem>
     <para>
      セットアップの完了
     </para>
    </listitem>
   </itemizedlist>
   <para>
    このfirstbootインストールワークフローの標準レイアウトは、必須ではありません。特定のコンポーネントを有効/無効にしたり、独自のモジュールをワークフローに統合できます。firstbootワークフローを変更するには、firstboot環境設定ファイル<filename>/etc/YaST2/firstboot.xml</filename>を編集します。このXMLファイルは、YaSTがインストールワークフローを制御するために使用する標準の<filename>control.xml</filename>ファイルのサブセットになります。
   </para>
   <para>
    提案に関する概要は、<xref linkend="ex-fb-proposal"/>を参照してください。firstbootインストールワークフローの変更の概要が示されています。この例では、firstboot環境設定ファイルの基本的な構文(および主要要素の設定方法)が説明されています。
   </para>
   <example id="ex-fb-proposal">
    <title>提案画面の設定</title>
<screen>
    …
    &lt;proposals config:type="list"&gt;<co id="co-fb-plist"/>
        &lt;proposal&gt;<co id="co-fb-p"/>
            &lt;name&gt;firstboot_hardware&lt;/name&gt;<co id="co-fb-pname"/>
            &lt;mode&gt;installation&lt;/mode&gt;<co id="co-fb-pmode"/>
            &lt;stage&gt;firstboot&lt;/stage&gt;<co id="co-fb-pstage"/>
            &lt;label&gt;Hardware Configuration&lt;/label&gt;<co id="co-fb-plabel"/>
            &lt;proposal_modules config:type="list"&gt;<co id="co-fb-pmodl"/>
                &lt;proposal_module&gt;printer&lt;/proposal_module&gt;<co id="co-fb-pmod"/>
            &lt;/proposal_modules&gt;
        &lt;/proposal&gt;
        &lt;proposal&gt;
        …
        &lt;/proposal&gt;
    &lt;/proposals&gt;
   </screen>
   </example>
   <calloutlist>
    <callout arearefs="co-fb-plist">
     <para>
      firstbootワークフローの一部となるすべての提案用のコンテナです。
     </para>
    </callout>
    <callout arearefs="co-fb-p">
     <para>
      個人提案用のコンテナです。
     </para>
    </callout>
    <callout arearefs="co-fb-pname">
     <para>
      提案の内部名です。
     </para>
    </callout>
    <callout arearefs="co-fb-pmode">
     <para>
      この提案のモードです。ここは変更しないでください。firstbootインストールを行う場合、<literal>installation</literal>と設定する必要があります。
     </para>
    </callout>
    <callout arearefs="co-fb-pstage">
     <para>
      この提案を行う、インストールプロセスのステージです。ここは変更しないでください。firstbootインストールを行う場合、<literal>firstboot</literal>と設定する必要があります。
     </para>
    </callout>
    <callout arearefs="co-fb-plabel">
     <para>
      提案に表示するラベルです。
     </para>
    </callout>
    <callout arearefs="co-fb-pmodl">
     <para>
      提案画面の一部となるすべてのモジュール用コンテナです。
     </para>
    </callout>
    <callout arearefs="co-fb-pmod">
     <para>
      提案画面の一部となる、1つまたは複数のモジュールです。
     </para>
    </callout>
   </calloutlist>
   <para>
    firstboot環境設定ファイルの次のセクションは、ワークフロー定義から成り立っています。ここには、firstbootインストールワークフローの一部とするすべてのモジュールを記載する必要があります。
   </para>
   <example id="ex-fb-wf">
    <title>Workflow(ワークフロー)セクションの設定</title>
<screen>
    &lt;workflows  config:type="list"&gt;
        &lt;workflow&gt;
            &lt;defaults&gt;
                &lt;enable_back&gt;yes&lt;/enable_back&gt;
                &lt;enable_next&gt;yes&lt;/enable_next&gt;
                &lt;archs&gt;all&lt;/archs&gt;
            &lt;/defaults&gt;
            &lt;stage&gt;firstboot&lt;/stage&gt;
            &lt;label&gt;Configuration&lt;/label&gt;
            &lt;mode&gt;installation&lt;/mode&gt;
            … &lt;!–– list of modules  ––&gt;
            &lt;/modules&gt;
        &lt;/workflow&gt;
    &lt;/workflows&gt;
    …
  </screen>
   </example>
   <para>
    <literal>workflow</literal>セクションの全体的な構造は、<literal>proposal</literal>セクションと似ています。コンテナには、ワークフロー要素が保持されます。すべてのワークフロー要素にはステージ、ラベル、およびモード情報が含まれます(<xref linkend="ex-fb-proposal"/>に示されている提案と同様)。一番大きな違いは、<filename>defaults</filename>セクションです。このセクションには、ワークフローコンポーネントの基本的なデザイン情報が含まれています。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>enable_back</literal>
     </term>
     <listitem>
      <para>
       すべてのダイアログに、<guimenu>Back(戻る)</guimenu>ボタンを入れます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>enable_next</literal>
     </term>
     <listitem>
      <para>
       すべてのダイアログに、<guimenu>Next(次へ)</guimenu>ボタンを入れます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>archs</literal>
     </term>
     <listitem>
      <para>
       このワークフローを使用するハードウェアアーキテクチャを指定します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <example id="ex-fb-wfmod">
    <title>ワークフローコンポーネントリストの設定</title>
<screen>
    &lt;modules  config:type="list"&gt;<co id="co-fb-modl"/>
        &lt;module&gt;<co id="co-fb-mod"/>
            &lt;label&gt;Language&lt;/label&gt;<co id="co-fb-label"/>
            &lt;enabled config:type="boolean"&gt;false&lt;/enabled&gt;<co id="co-fb-en"/>
            &lt;name&gt;firstboot_language&lt;/name&gt;<co id="co-fb-name"/>
        &lt;/module&gt;
    &lt;modules&gt;
  </screen>
   </example>
   <calloutlist>
    <callout arearefs="co-fb-modl">
     <para>
      ワークフローの全コンポーネントのコンテナです。
     </para>
    </callout>
    <callout arearefs="co-fb-mod">
     <para>
      モジュール定義です。
     </para>
    </callout>
    <callout arearefs="co-fb-label">
     <para>
      モジュールと一緒に表示するラベルです。
     </para>
    </callout>
    <callout arearefs="co-fb-en">
     <para>
      ワークフローでこのコンポーネントを有効/無効にするためのスイッチです。
     </para>
    </callout>
    <callout arearefs="co-fb-name">
     <para>
      モジュール名です。モジュールは、<filename>/usr/share/YaST2/clients</filename>にファイル拡張子<filename>.ycp</filename>で保管する必要があります。
     </para>
    </callout>
   </calloutlist>
   <para>
    firstbootインストール時の提案画面数または表示順序を変更するには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      <filename>/etc/YaST2/firstboot.xml</filename>にあるfirstboot環境設定ファイルを開きます。
     </para>
    </step>
    <step performance="required">
     <para>
      提案画面を追加、削除したり、既存の画面の順序を変更します。
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        提案全体を削除するには、<literal>proposal</literal>セクションから<literal>proposals</literal>要素とそのサブ要素を削除して、ワークフローから対応する<literal>module</literal>要素とサブ要素を削除します。
       </para>
      </listitem>
      <listitem>
       <para>
        新しく提案を追加するには、新たに<literal>proposal</literal>要素を作成し、必要なサブ要素を指定します。提案がYaSTモジュールとして<filename>/usr/share/YaST2/clients</filename>に存在するようにしてください。
       </para>
      </listitem>
      <listitem>
       <para>
        提案の順序を変更するには、ワークフロー内で該当する提案を含む<literal>module</literal>要素を移動します。特定の順序で提案やワークフローコンポーネントを実施しなければならないような、他のインストールステップとの依存関係がある場合もあることに注意してください。
       </para>
      </listitem>
     </itemizedlist>
    </step>
    <step performance="required">
     <para>
      変更内容を反映し、環境設定ファイルを閉じます。
     </para>
    </step>
   </procedure>
   <para>
    デフォルト設定がニーズに合わない場合は、環境設定ステップのワークフローを随時変更することができます。ワークフロー内の特定のモジュールを有効または無効にします(あるいは、独自のカスタムモジュールを追加します)。
   </para>
   <para>
    firstbootワークフローのモジュールのステータスを切り替えるには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      <filename>/etc/YaST2/firstboot.xml</filename>環境設定ファイルを開きます。
     </para>
    </step>
    <step performance="required">
     <para>
      モジュールを無効にする場合は、<literal>enabled</literal>要素の値を、<literal>true</literal>から<filename>false</filename>に変更します。有効にする場合は、<literal>false</literal>から<literal>true</literal>に変更します。
     </para>
<screen>
&lt;module&gt;
    &lt;label&gt;Time and Date&lt;/label&gt;
    &lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
    &lt;name&gt;firstboot_timezone&lt;/name&gt;
&lt;/module&gt;
</screen>
    </step>
    <step performance="required">
     <para>
      変更内容を反映し、環境設定ファイルを閉じます。
     </para>
    </step>
   </procedure>
   <para>
    独自のカスタムモジュールをワークフローに追加するには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      独自のYaSTモジュールを作成し、ファイル名<filename><replaceable>module_name</replaceable>.ycp</filename>で<filename>/usr/share/YaST2/clients</filename>に保存します。
     </para>
    </step>
    <step performance="required">
     <para>
      <filename>/etc/YaST2/firstboot.xml</filename>環境設定ファイルを開きます。
     </para>
    </step>
    <step performance="required">
     <para>
      新しいモジュールを実行するワークフロー内のポイントを決定します。そのためには、ワークフロー内の他のステップとの依存関係を検討し、必要に応じてそれを解消する必要があります。
     </para>
    </step>
    <step performance="required">
     <para>
      <literal>modules</literal>コンテナ内に新たな<literal>module</literal>要素を作成し、適切なサブ要素を追加します。
     </para>
<screen>&lt;modules config:type="list"&gt;
     …
     &lt;module&gt;
        &lt;label&gt;<replaceable>my_module</replaceable>&lt;/label&gt;
        &lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
        &lt;name&gt;<replaceable>filename_my_module</replaceable>&lt;/name&gt;
     &lt;/module&gt;
&lt;/modules&gt;
</screen>
     <substeps performance="required">
      <step performance="required">
       <para>
        モジュールに表示するラベルを<literal>label</literal>要素に入力します。
       </para>
      </step>
      <step performance="required">
       <para>
        ワークフロー内にモジュールを入れるために、<literal>enabled</literal>に<literal>true</literal>が設定されていることを確認します。
       </para>
      </step>
      <step performance="required">
       <para>
        <literal>name</literal>要素に、モジュールのファイル名を入力します。このときに、フルパスと拡張子<filename>.ycp</filename>は省略してください。
       </para>
      </step>
     </substeps>
    </step>
    <step performance="required">
     <para>
      設定内容を反映し、環境設定ファイルを閉じます。
     </para>
    </step>
   </procedure>
   <tip>
    <title>自動設定用に接続されたネットワークインタフェースの検出</title>
    <para>
     ターゲットハードウェアが複数のネットワークインタフェースをもつ可能性がある場合は、 アプリケーションのイメージに<systemitem>network-autoconfig</systemitem>パッケージを追加します。<systemitem>network-autoconfig</systemitem>によって、firstbootの実行時に、1つのEthernetインタフェースがDHCPで正常に設定されるまで、すべての使用可能なEthernetインタフェースがサイクルされます。
    </para>
   </tip>
  </sect2>

  <sect2 id="sec-fb-customize-script">
   <title>追加スクリプトの設定</title>
   
   <para>
    firstbootワークフローの完了後に、firstbootが追加スクリプトを実行するように設定できます。firstbootシーケンスに他のスクリプトを追加するには、以下の手順に従ってください。
   </para>
   <procedure>
    <step performance="required">
     <para>
      <filename>/etc/sysconfig/firstboot</filename>環境設定ファイルを開いて、<envar>SCRIPT_DIR</envar>に指定されているパスが正しいことを確認します。デフォルトは<filename>/usr/share/firstboot/scripts</filename>です。
     </para>
    </step>
    <step performance="required">
     <para>
      シェルスクリプトを作成し、指定したディレクトリに保存します。次に、そのファイルに適切なファイルパーミッションを設定します。
     </para>
    </step>
   </procedure>
  </sect2>



  <sect2 id="sec-fb-provide-trans">
   <title>インストールワークフローの翻訳の提供</title>
   <para>
    エンドユーザによっては、カスタマイズしたワークフローの翻訳を提供することが望ましい場合があります。それらの翻訳が必要になるのは、<filename>/etc/YaST2/firstboot.xml</filename>ファイルの変更によってワークフローをカスタマイズした場合です(<xref linkend="sec-fb-customize-wf"/>参照).。これは、<xref linkend="sec-fb-customize-msg"/>ですでに説明されているカスタマイズされたYaSTメッセージのローカライゼーションとは異なります。
   </para>
   <para>
    <filename>/etc/YaST2/firstboot.xml</filename>を変更し、文字列変更を導入した場合は、新しい翻訳テンプレートファイル(<filename>.pot</filename>ファイル)を生成し、<systemitem>gettext</systemitem>ツールチェーンで翻訳して、翻訳したファイルをYaST localeディレクトリ(<filename>/usr/share/YaST2/locale</filename>)にコンパイル済みの<filename>.mo</filename>ファイルとしてインストールします。次の手順に従います。
   </para>
   <procedure>
    <step performance="required">
     <para>
      次の<systemitem>textdomain</systemitem>設定を変更します。
     </para>
<screen>&lt;textdomain&gt;firstboot&lt;/textdomain&gt;</screen>
     <para>
      たとえば、
     </para>
<screen>&lt;textdomain&gt;firstboot-oem&lt;/textdomain&gt;</screen>
    </step>
    <step performance="required">
     <para>
      <command>xgettext</command>を使用して、翻訳可能な文字列を翻訳テンプレートファイル(<filename>.pot</filename>ファイル)に抽出します（たとえば、<filename>firstboot-oem.pot</filename>のようになります)。
     </para>
<screen>xgettext -L Glade -o firstboot-oem.pot /etc/YaST2/firstboot.xml</screen>
    </step>
    <step performance="required">
     <para>
      翻訳処理を開始します。次に、翻訳済みファイル(<filename><replaceable>LL_code</replaceable>.po</filename>ファイル)を、他のプロジェクトの翻訳と同様にパッケージ化し、コンパイル済みの<filename>firstboot-oem.mo</filename>ファイルをインストールします。
     </para>
    </step>
   </procedure>
   <para>
    追加または変更したYaSTモジュールに翻訳が必要な場合は、そのモジュール内で翻訳を提供します。既存モジュールを変更した場合は、望ましくない副作用を避けるため、そのtext domainステートメントも必ず変更してください。
   </para>
   <tip>
    <title>その他の情報</title>
    <para>
     YaST開発の詳細については、<ulink url="http://en.opensuse.org/openSUSE:YaST_development"/>を参照してください。YaST firstbootの詳細については、<phrase os="sled;sles"><ulink url="http://doc.opensuse.org/projects/YaST/SLES11/tdg/bk09ch01s02.html"/></phrase>を参照してください。
    </para>
   </tip>
  </sect2>
 </sect1>

 <sect1 id="sec-fb-clone">
  <title>マスタインストールの複製</title>

  <para>
   利用できる任意のイメージング機能を使って、マスタコンピュータのディスクを複製し、そのイメージをターゲットコンピュータに展開/配布します。イメージ処理の詳細については、<xref linkend="cha-kiwi"/>を参照してください。
  </para>
 </sect1>
 <sect1 id="sec-fb-personalize">
  <title>インストールの個人設定</title>

  <para>
   複製されたディスクイメージがブートされると、firstbootが開始され、<xref linkend="sec-fb-customize-wf"/>で設計したようにインストールが開始されます。firstbootワークフロー設定に含まれているコンポーネントだけが開始されます。他のインストールステップは、すべてスキップされます。エンドユーザは、言語、キーボード、ネットワーク、およびパスワードを各自の要件に応じて設定し、ワークステーションの個人設定を行います。 作業が完了すると、firstbootでインストールされたシステムは他の<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>インスタンスと同様に動作します。
  </para>
 </sect1>
</chapter>
