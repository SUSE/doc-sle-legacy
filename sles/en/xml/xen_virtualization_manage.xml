<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
  [
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- TODO:
  - migrations
  - snapshots (fate # 305055 )
    or with LVM:
    So if I use LVM,  good process is (?) :
     - Freeze VM
     - Save memory to disk (and copy the file with a different name)
     - Do snapshot
     - Unfreeze VM
     - dd snapshot LV to a file in a dedicated snpshot area (lars.pinne)
     - remove snapshot LV

    To restore :
     - Freeze VM (or stop ?)
     - Save memory to disk, next replace with the snapshot memory
     - Restore LVM snapshot
     - Unfreeze VM ( or start )
  - xmclone (/etc/xen/scripts/xmclone.sh) as virt-clone replacement
  -->
<chapter id="cha.xen.manage">
 <title>Managing a Virtualization Environment</title>
 <para>
  Graphical utilities, text-based commands, and modified configuration files
  are methods you can choose from to manage your virtualization
  environment.Virtual Machine Manager is a graphical utility available in
  &yast; that can be launched from the virtual machine &dom0;.
 </para>
 <figure>
  <title>Desktop Showing Virtual Machine Manager and Virtual Machines</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="xen_fullscreen.png" width="80%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="xen_fullscreen.png" width="80%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  From a command line interface on the virtual machine host, you can use the
  <command>vm-install</command> and <command>xm</command> commands to create
  and manage virtual machines. You can also edit configuration files to
  change the settings of the virtual machine host or a virtual machine.
 </para>
 <sect1 id="sec.xen.manage.vmm">
  <title>Virtual Machine Manager</title>

  <para>
   The &yast; Virtual Machine Manager provides a graphical user interface
   you can use to create and manage virtual machines. This utility can be
   run either locally on the &vmhost; or remote. The connection is then
   secured either with an SSL/TLS with x509 certificate, or with a tunnel
   over SSH.
  </para>

<!-- bg: remove this for next release -->

  <note>
   <para>
    Close Virtual Machine Manager if you are not actively using it and
    restart it when needed. Closing Virtual Machine Manager does not affect
    the state of virtual machines.
   </para>
  </note>

  <figure>
   <title>Virtual Machine Manager Main Console</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="xen_vmm.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="xen_vmm.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   When starting the Virtual Machine Manager locally on the controlling
   &dom0;, it is directly connected to the &xen; managing demon. All locally
   managed domains are displayed and can be modified.
  </para>

  <para>
   From remote, the Virtual Machine Manager can also be started as normal
   user without administrative rights. To start it, run the command
   <command>virt-manager</command>. If the local machine does not manage
   virtual domains, the Virtual Machine Manager first has to connect the
   managing domain of a &xen; &vmhost;. To do this, use the following
   procedure:
  </para>

  <procedure>
   <step>
    <para>
     Make sure that &dom0; on the &vmhost; accepts incoming SSH connections.
     If in doubt, run <menuchoice><guimenu>&yast;</guimenu><guimenu>Security
     and Users</guimenu><guimenu>Firewall</guimenu></menuchoice> and make
     sure that <guimenu>Secure Shell Server</guimenu> is added to the
     <guimenu>Allowed Services</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Run <menuchoice><guimenu>File</guimenu><guimenu>Add
     Connection</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select &xen; at the <guimenu>Hypervisor</guimenu> pull-down menu.
    </para>
   </step>
   <step>
    <para>
     Check <guimenu>Connect to remote host</guimenu>
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>SSH</guimenu> at the <guimenu>Method</guimenu> pull
     down menu.
    </para>
   </step>
   <step>
    <para>
     Enter the username for the SSH connection into the <guimenu>
     Username</guimenu> text field.
    </para>
   </step>
   <step>
    <para>
     Enter the hostname of the controlling &dom0; into the
     <guimenu>Hostname</guimenu> text field.
    </para>
   </step>
   <step>
    <para>
     Press <guimenu>Connect</guimenu> to initiate the connection.
    </para>
   </step>
   <step>
    <para>
     On request, enter the password of the user of the controlling &dom0;.
     This is not necessary when using SSH keys and configuring the local
     user as authorized for <systemitem class="username">root</systemitem>
     access on the controlling &dom0;.
<!--For more details, see <xref
      linkend="sec.ssh.authentic"/>. -->
    </para>
   </step>
  </procedure>

  <para>
   When connected to a controlling &dom0;, the Virtual Machine Manager
   offers several configuration possibilities.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Select a virtual machine and click <guimenu>Open</guimenu> to display
     the virtual machine window showing the virtual machine’s current
     state.
    </para>
   </listitem>
   <listitem>
    <para>
     Click <guimenu>Run</guimenu> on the virtual machine window to boot the
     virtual machine and display the user interface or text console running
     on the virtual machine.
    </para>
   </listitem>
   <listitem>
    <para>
     Select a virtual machine and click <guimenu>Details</guimenu> to let
     you view performance and configure hardware details associated with the
     virtual machine.
    </para>
   </listitem>
   <listitem>
    <para>
     Click <guimenu>New</guimenu> in Virtual Machine Manager to launch the
     <guimenu>Create Virtual Machine Wizard</guimenu>, which walks you
     through the steps required to set up a virtual machine. See also
     <xref linkend="sec.xen.vm.create"/>. This option is only available when
     the &xen; host is selected.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 id="sec.xen.manage.xend">
  <title>Controlling the Host by Modifying Xend Settings</title>

  <para>
   The Xend is a key component of &xen; virtualization. It performs
   management functions and stores settings that relate to the host
   environment and each virtual machine. You can customize Xend to meet your
   specific configuration requirements.
  </para>

  <para>
   Important services that must be configured in this file are:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Settings for live migrations, define migration hosts
    </para>
   </listitem>
   <listitem>
    <para>
     Path to Xend <systemitem>lock</systemitem> files. These can be used to
     prevent &xen; from starting a guest a second time on a migration host.
    </para>
   </listitem>
   <listitem>
    <para>
     To specify Xend operating parameters, edit the
     <filename>/etc/xen/xend-config.sxp</filename> file. The settings take
     effect the next time Xend starts.
    </para>
<screen>
# -*- sh -*-

#
# Xend configuration file.
#

# This example configuration is appropriate for an installation that
# uses a bridged network configuration. Access to Xend via http
# is disabled.

# Commented out entries show the default for that entry, unless otherwise
# specified.

#(logfile /var/log/xen/xend.log)
#(loglevel DEBUG)


# The Xen-API server configuration.
#
# This value configures the ports, interfaces, and access controls for the
# Xen-API server. Each entry in the list starts with either unix, or a port</screen>
   </listitem>
   <listitem>
    <para>
     To start the Xend daemon, enter <command>rcxend start</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     To stop the Xend daemon, enter <command>rcxend stop</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     To restart the Xend daemon, enter <command>rcxend restart</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     To check the status of the Xend daemon, enter <command>rcxend
     status</command>.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The parameters in the <filename>xend-config.sxp</filename> file can be
   customized to meet your requirements for virtualization. For a full list
   of all available options, read the manual page of
   <systemitem>xend-config.sxp</systemitem>.
  </para>
 </sect1>
 <sect1 id="sec.xen.manage.vmachine">
  <title>Configuring a Virtual Machine by Modifying its Xend Settings</title>

  <para>
   The machine settings of each virtual guest are stored in an internal
   database managed by <command>xend</command>. You can change a virtual
   machine’s settings by modifying the settings stored in Xend. This
   process requires you to export a virtual machine’s settings from the
   Xend database to a text file, edit the settings in the file to meet your
   configuration requirements, import the file back into Xend, and restart
   the virtual machine.
  </para>

  <para>
   Some commonly used configurations can be done online with the
   <command>xm</command> command. These include the attachment or detachment
   of virtual block, network or PCI devices. For more details, see the
   manual page of <command>xm</command>.
  </para>

  <note>
   <para>
    It is no longer recommended that you edit the initial start-up files
    stored in <filename>/etc/xen/vm</filename>, because they are used only
    during the creation of a new virtual machine.
   </para>
  </note>

  <para>
   To modify a virtual machine’s settings that is administrated with the
   virtual machine manager, first shut it down and then:
  </para>

  <procedure>
   <step>
    <para>
     At &dom0;, enter
    </para>
<screen><command>xm list -l <replaceable>vm_name</replaceable> &gt; <replaceable>filename</replaceable></command></screen>
    <para>
     where <command> <replaceable>vm_name</replaceable> </command> is the
     name of the virtual machine you want to modify and <command>
     <replaceable>filename</replaceable> </command> is whatever you want to
     name the text file.
    </para>
   </step>
   <step>
    <para>
     Use a text editor to make and save any desired changes.
    </para>
<screen>
(domain                                               
    (domid 1)                                         
    (bootloader /usr/bin/pygrub)                      
    (on_crash destroy)                                
    (uuid aa6969f3-8012-24f0-1e3a-35f150001950)       
    (bootloader_args -q)                              
    (vcpus 2)                                         
    (name sles11)                                     
    (cpus (() ()))                                    
    (on_reboot restart)                               
    (on_poweroff destroy)                             
    (maxmem 512)                                      
    (memory 512)                                      
    (shadow_memory 0)                                 
    (features )                                       
    (on_xend_start ignore)                            
    (on_xend_stop ignore)                             
    (start_time 1240210933.16)                        
    (cpu_time 35.841108115)                           
    (online_vcpus 2)                                  
....
</screen>
   </step>
   <step>
    <para>
     Delete the existing configuration from Xend with the command
     <command>xm del <replaceable>vm_name</replaceable></command>
    </para>
   </step>
   <step>
    <para>
     Enter <command>xm new -F <replaceable>filename</replaceable> </command>
     to import the virtual machine’s new settings into Xend.
    </para>
   </step>
   <step>
    <para>
     Enter <command>xm start <replaceable>vm_name</replaceable> </command>
     to start the virtual machine with its new settings.
    </para>
    <para>
     You should repeat the entire process of exporting the file each time
     you want to make changes to a virtual machine’s settings.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.xen.manage.xm">
  <title>The <command>xm</command> Command</title>

<!-- TODO: add some more explanations to xm -->

  <para>
   The <command>xm</command> command provides a command line interface for
   managing virtual machines. It can be used to create, pause, and shut down
   virtual machines. It can also be used to list the current domains, enable
   or pin virtual CPUs, and attach or detach block devices. For a complete
   list of the available <command>xm</command> commands, run <command>xm
   help</command>. For each command, there is a more detailed help available
   that is obtained with the extra parameter
   <systemitem>--help</systemitem>. More information about the respective
   subcommands is available in the manual page of <command>xm</command>.
  </para>

  <para>
   For example, the <command>xm list --help</command> displays all options
   that are available to the list command. As an example, the <command>xm
   list</command> command displays the status of all virtual machines.
  </para>

<screen>
# xm list
Name                                 ID    Mem VCPUs        State   Time(s)
Domain-0                              0    457     2       r-----   2712.9
OES                                   7    512     1       -b----     16.3
SLES10                                     512     1                  12.9
</screen>

  <para>
   The <guimenu>State</guimenu> information tells if a machine is running,
   and in which state it is. The most common flags are <literal>r</literal>
   (running) and b (blocked) where blocked means it is either waiting for
   IO, or just sleeping because there is nothing to do. For more details
   about the state flags, see <command>man 1 xm</command>. The syntax of the
   <command>xm</command> command usually follows the format:
  </para>

<screen><command>xm  &lt;subcommand&gt; [domain-id] [OPTIONS]</command></screen>

  <para>
   where <command>subcommand</command> is the xm command to run,
   <command>domain-id</command> is the ID number assigned to a domain or the
   name of the virtual machine, and <command>OPTIONS</command> indicates
   subcommand-specific options.
  </para>

  <para>
   Other useful <command>xm</command> commands include:
  </para>

  <remark>mdejmek: maybe add titles to every listitem here, so the command appears above the explanation</remark>

  <remark>bg: I don't see that titles are allowed in here...</remark>

  <itemizedlist>
   <listitem>
    <para>
     <command>xm start</command> starts a virtual machine
    </para>
   </listitem>
   <listitem>
    <para>
     <command>xm reboot </command>reboots a virtual machine
    </para>
   </listitem>
   <listitem>
    <para>
     <command>xm destroy</command> immediately terminates a virtual machine
    </para>
   </listitem>
   <listitem>
    <para>
     <command>xm block-list</command> displays all virtual block devices
     attached to a virtual machine
    </para>
   </listitem>
  </itemizedlist>

  <itemizedlist>
   <listitem>
    <para>
<!-- LANGUAGE: require be running? Please check -->
     All <command>xm</command> operations require that the &xen; control
     daemon, Xend, be running. For this reason, you should make sure Xend
     starts whenever the host boots.
    </para>
   </listitem>
   <listitem>
    <para>
     Most <command>xm</command> commands require root privileges to allow
     interaction with the &xen; hypervisor. Entering the
     <command>xm</command> command when you are not logged in as root
     returns an error.
    </para>
   </listitem>
   <listitem>
    <para>
     Some <command>xm</command> commands return no textual information even
     though the action is completed. In some instances, for example, when
     shutting down a virtual machine, the action can take several seconds to
     complete. To verify that the action has completed, you might need to
     view its status another way, such as, using the <command>xm
     list</command> command.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 id="sec.xen.manage.autostart">
  <title>Automatic Starting of Domains</title>

  <para>
   If you need automatic starting of domains at boot time, or after a crash,
   the Xend must be configured to execute the desired behavior. There are
   five different situations that need to be handled.
  </para>

  <variablelist>
   <varlistentry>
    <term>After boot of the Hypervisor</term>
    <listitem>
     <para>
      Set the Xend variable <literal>on_xend_start</literal> to the desired
      value. For more details, see <xref linkend="domain.on_xend_start"/>.
      Example:
     </para>
<screen>(on_xend_start start)</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>When shutting down Xend</term>
    <listitem>
     <para>
      Xend can tell the &vmguest; system to shut down. However, it does not
      to check if the guest was stopped when doing a system shutdown of
      &dom0;. Thus, it is not recommended to rely on this feature. Example:
     </para>
<screen>(on_xend_stop shutdown)</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>When rebooting the &vmguest;</term>
    <listitem>
     <para>
      Xend has control about what to do when a &vmguest; does a reboot. By
      default, it is restart the guest:
     </para>
<screen>(on_reboot restart)</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>During poweroff of a &vmguest;</term>
    <listitem>
     <para>
      When a guest is shut off, the Xend by default destroys the guest
      without shutting it down.
     </para>
<screen>(on_poweroff destroy)</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>After a crash of the &vmguest;</term>
    <listitem>
     <para>
      After a &vmguest; crashes, the Xend can restart the guest. This is
      also the default:
     </para>
<screen>(on_crash restart)</screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
<!-- 2009-05-13 bg: conversion of images to qcow images is broken
                     see bnc 503332
 <sect1 id="sec.xen.manage.snapshots">
  <title>Creating Snapshots of &vmguest; Systems</title>
  <para>
  </para>
 </sect1>
 -->
 <sect1 id="sec.xen.manage.migrate">
  <title>Migrating &xen; &vmguest; Systems</title>

  <para>
   With &xen; it is possible to migrate a &vmguest; system from one &vmhost;
   to another with almost no service interruption. This could be used for
   example to move a busy &vmguest; to a &vmhost; that has stronger hardware
   or is not yet loaded. Or, if a service of a &vmhost; is required, all
   &vmguest; systems running on this machine can be migrated to other
   machines in order to avoid interruption of service. These are only two
   examples, many more reasons may apply to your personal situation.
  </para>

  <para>
   Before starting, some preliminary considerations regarding the &vmhost;
   should be taken:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     All &vmhost; systems should use a similar CPU. The frequency is not so
     important, but they should be using the same CPU family. To get more
     information about the used CPU, see <command>cat
     /proc/cpuinfo</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     All resources that are used by a specific guest system must be
     available on all involved &vmhost; systems. This means, the network
     bridges must be in the same subnet, and all used block devices must
     exist on both &vmhost; systems.
    </para>
   </listitem>
   <listitem>
    <para>
     Using special features like <literal>&pciback;</literal> may be
     problematic. Do not implement these when deploying for an environment
     that should migrate &vmguest; systems between different &vmhost;
     systems.
    </para>
   </listitem>
   <listitem>
    <para>
     For fast migrations, a fast network is mandatory. If possible, use GB
     Ethernet and fast Switches. Deploying VLAN might also help avoiding
     collisions.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 id="sec.xen.manage.migrate.xend">
   <title>Configuring Xend for Migrations</title>
   <para>
    To prepare a &vmhost; system for migrating, edit the configuration file
    <filename>/etc/xen/xend-config.sxp</filename>. Search for the following
    lines:
   </para>
<screen>
#(xend-relocation-server no)
#(xend-relocation-port 8002)
(xend-relocation-hosts-allow '^localhost$ ^localhost\\.localdomain$')
  </screen>
   <para>
    Change the lines to match the following strings:
   </para>
<screen>
(xend-relocation-server yes)
(xend-relocation-port 8002)
(xend-relocation-hosts-allow '^localhost$ ^localhost\\.localdomain$ \
   ^&lt;relocation_host&gt;')
  </screen>
   <para>
    These changes must be done on all &vmhost; systems that should
    participate in migrating guests.
   </para>
  </sect2>

  <sect2 id="sec.xen.manage.migrate.block">
   <title>Preparing Block Devices for Migrations</title>
   <para>
    The block devices needed by the &vmguest; system must be available on
    all involved &vmhost; systems. This is done by implementing some kind of
    shared storage that serves as container for the root file system of the
    migrated &vmguest; system. Common possibilities include:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>iSCSI</literal> can be set up to give access to the same
      block devices from different systems at the same time. For more
      information about iSCSI, see
      <ulink url="http://www.suse.com/doc/sles11/stor_admin/data/cha_inst_system_iscsi.html"/>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>NFS</literal> is a widely used root file system that can
      easily be accessed from different locations.
<!-- For more information, see <xref
      linkend="cha.nfs"/>. -->
     </para>
    </listitem>
    <listitem>
     <remark>mdejmek: check whether DRBD is used for the first time in this text; explain it??</remark>
     <para>
      <literal>DRBD</literal> can be used, if only two &vmhost; systems are
      involved. This gives some extra data security, because the used data
      is mirrored over the network. For more information, see
      <ulink
      url="http://www.suse.com/doc/sles11/book_sleha/data/cha_ha_drbd.html"/>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>SCSI</literal> can also be used, if the available hardware
      permits shared access to the same disks.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>NPIV</literal> is a special mode to use fibre channel disks.
      However, in this case all migration hosts must be attached to the same
      fibre channel switch. For more information about NPIV, see
      <xref
      linkend="sec.xen.config.disk"/>. Commonly, this works if
      the fibre channel environment supports 4 GBit or faster connections.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 id="sec.xen.manage.migrate.xm">
   <title>Migrating &vmguest; Systems</title>
   <para>
    The actual migration of the &vmguest; system is done with the command:
   </para>
<screen>xm migrate --live &lt;domain_name&gt; &lt;host&gt;</screen>
   <para>
    The option <systemitem>--live</systemitem> must be set to migrate a
    system that is currently running.
   </para>
   <para>
    The speed of the migration depends on how fast the memory print can be
    saved to disk, sent to the new &vmhost; and loaded there. This means,
    that small &vmguest; systems can be migrated faster than big systems
    with a lot of memory.
   </para>
  </sect2>
 </sect1>
</chapter>
