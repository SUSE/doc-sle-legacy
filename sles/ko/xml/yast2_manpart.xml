<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<sect1 xml:base="yast2_manpart.xml" id="sec.yast2.i_y2_part_expert">
 <title>YaST 파티션 도구 사용</title><indexterm> <primary>YaST</primary> <secondary>파티셔닝</secondary> </indexterm> <indexterm> <primary>파티션</primary> <secondary>생성</secondary> </indexterm>

 <para>
  <xref linkend="fig.yast2.i_y2_disk_part"/>에 표시된 고급 파티션 도구로, 하나 또는 여러 개의 하드 디스크 파티션을 수동으로 수정할 수 있습니다. 파티션을 추가, 삭제, 크기 조정 및 편집할 뿐만 아니라, 소프트 RAID 및 LVM 구성에 액세스할 수도 있습니다.
 </para>

 <warning>
  <title>실행 중인 시스템 다시 분할</title>
  <para>
   실행 중인 시스템을 다시 분할할 수 있지만, 데이터 유실이 발생할 위험이 상당히 높습니다. 설치된 시스템을 다시 분할하는 것을 피하고 분할하기 전에 항상 데이터의 전체 백업을 수행하십시오.
  </para>
 </warning>

 <figure id="fig.yast2.i_y2_disk_part">
  <title>YaST 파티션 도구</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="i_y2_disk_part.png" width="75%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="i_y2_disk_part.png" width="75%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>

 <tip arch="zseries" os="sles">
  <title>IBM System z: 장치 이름</title>
  <para>
   IBM System z는 DASD 및 SCSI 하드 디스크만 인식합니다. IDE 하드 디스크는 지원되지 않습니다. 이러한 장치는 첫 번째로 인식된 장치에 대한 <filename>dasda</filename> 또는 <filename>sda</filename>로 파티션 테이블에 나타나기 때문입니다.
  </para>
 </tip>

 <para>
  연결된 모든 하드 디스크에 존재하거나 제안된 파티션은 YaST <guimenu>고급 파티션 도구</guimenu> 대화 상자의 <guimenu>사용 가능한 저장소</guimenu> 목록에 표시됩니다. 전체 하드 디스크는 <filename>/dev/sda</filename><phrase arch="zseries" os="sles">(또는 <filename>/dev/dasda</filename>)</phrase>와 같은 번호가 없는 장치로 나열됩니다. <filename>/dev/sda1</filename><phrase arch="zseries" os="sles">(또는 <filename>/dev/dasda1</filename>)</phrase>과 같은 파티션이 이러한 장치의 부분으로 나열됩니다. 하드 디스크 및 파티션의 크기, 유형, 암호화 상태, 파일 시스템 및 탑재 지점도 표시됩니다. 탑재 지점은 파티션이 Linux 파일 시스템 트리에서 나타나는 위치를 알려줍니다.
 </para>

 <para>
  왼쪽 <guimenu>시스템 보기</guimenu>에서 여러 가지 기능 보기를 사용할 수 있습니다. 이 보기를 사용하여 기존 저장소 구성에 대한 정보를 수집하거나 <literal>RAID</literal>, <literal>볼륨 관리</literal>, <literal>파일 암호화</literal>와 같은 기능을 구성하거나 <literal>BTRFS</literal>, <literal>NFS</literal> 또는 <literal>TMPFS</literal>와 같은 추가 기능을 포함한 파일 시스템을 볼 수 있습니다.
 </para>

 <para>
  설치 중 고급 대화 상자를 실행하면 사용 가능한 하드 디스크 공간도 나열되고 자동으로 선택됩니다. <phrase role="productname"><phrase os="sles">SUSE® Linux Enterprise Server</phrase></phrase>에 추가 디스크 공간을 제공하려면 목록의 맨 아래에서 시작하여 위쪽으로(하드 디스크의 마지막 파티션에서 첫 번째 파티션 쪽으로) 필요한 공간을 확보하십시오.
 </para>

 <sect2 id="sec.IB.part.typen">
  <title>파티션 유형</title><indexterm> <primary>파티션</primary> <secondary>유형</secondary> </indexterm>
  <tip arch="zseries" os="sles">
   <title>IBM System z: 하드 디스크</title>
   <para>
    IBM System z 플랫폼에서 SUSE Linux Enterprise Server는 DASD(직접 액세스 저장 장치)뿐만 아니라 SCSI 하드 디스크도 지원합니다. SCSI 디스크는 아래에 설명된 대로 분할될 수 있지만, DASD는 해당 파티션 테이블에 세 개 이상의 파티션 항목을 가질 수 없습니다.
   </para>
  </tip>
  <para>
   모든 하드 디스크는 네 개 항목을 위한 공간이 있는 파티션 테이블을 가집니다. 파티션 테이블의 모든 항목은 기본 파티션 또는 확장 파티션에 해당합니다. 그러나 확장 파티션 항목은 하나만 허용됩니다.
  </para>
  <para>
   주 파티션은 특정 운영 체제에 할당된 연속 실린더 범위(실제 디스크 영역)로 구성됩니다. 주 파티션을 사용하는 경우에는 하드 디스크당 파티션 4개로 제한됩니다. 4개가 넘으면 파티션 테이블 공간에 맞지 않기 때문입니다. 그 이유는 확장 파티션이 사용되기 때문입니다. 또한 확장 파티션은 연속 디스크 실린더 범위이지만, <emphasis>논리 파티션</emphasis>으로 자체 세분될 수 있습니다. 논리 파티션은 파티션 테이블의 항목이 필요 없습니다. 다시 말하면 확장 파티션은 논리 파티션의 컨테이너입니다.
  </para>
  <para>
   파티션이 5개 이상 필요하면 확장 파티션을 네 번째 파티션 또는 그 이전 파티션으로 생성하십시오. 이 확장 파티션은 나머지 사용 가능한 전체 실린더 범위여야 합니다. 그런 다음 확장 파티션에 여러 논리 파티션을 생성하십시오. 최대 논리 파티션 수는 디스크 유형에 상관 없이 63입니다. Linux에 사용되는 파티션 유형은 중요하지 않으며, 주 파티션과 논리 파티션 모두 정상적으로 작동합니다.
  </para>
  <tip os="sles">
   <title>GPT 파티션 테이블</title>
   <para>
    하드 디스크 하나에 4개보다 많은 주 파티션을 생성하려면 GPT 파티션 유형을 사용해야 합니다. 이 유형의 경우 주 파티션 수가 제한되지 않으며 2TB 이상의 파티션도 지원합니다.
   </para>
   <para>
    GPT를 사용하려면 YaST 파티션 도구를 실행하고, <guimenu>시스템 보기</guimenu>에서 관련 디스크 이름을 클릭한 후 <menuchoice><guimenu>고급</guimenu> <guimenu>새 파티션 테이블 생성</guimenu> <guimenu>GPT</guimenu></menuchoice>를 선택합니다.
   </para>
  </tip>
 </sect2>

 <sect2 id="sec.yast2.i_y2_part_expert.newpart">
  <title>파티션 생성</title><indexterm> <primary>파티션</primary> <secondary>생성</secondary> </indexterm>
  <para>
   처음 파티션을 생성하려면 <guimenu>하드 디스크</guimenu>를 선택한 다음 사용 가능한 공간을 포함한 하드 디스크를 선택하십시오. <guimenu>파티션</guimenu> 탭에서 실제 수정 작업을 할 수 있습니다.
  </para>
  <procedure>
   <step performance="required">
    <para>
     <guimenu>추가</guimenu>를 선택하고 파티션 유형(주 또는 확장)을 지정합니다. 최대 4개의 주 파티션 또는 최대 세 개의 주 파티션과 한 개의 확장 파티션을 생성합니다. 확장 파티션 내에 여러 개의 논리 파티션을 생성합니다(<xref linkend="sec.IB.part.typen"/> 참조).
    </para>
   </step>
   <step performance="required">
    <para>
     새 파티션의 크기를 지정합니다. 분할되지 않은 모든 사용 가능한 공간을 사용하도록 선택하거나 사용자 정의 크기를 입력할 수 있습니다.
    </para>
   </step>
   <step performance="required">
    <para>
     사용할 파일 시스템과 탑재 지점을 선택합니다. YaST는 생성된 각 파티션에 대한 탑재 지점을 제안합니다. 레이블별 탑재와 같은 다른 탑재 방법을 사용하려면 <guimenu>Fstab 옵션</guimenu>을 선택하십시오. 지원되는 파일 시스템에 대한 자세한 내용은 <systemitem class="username">root</systemitem>를 참조하십시오.
    </para>
   </step>
   <step performance="required">
    <para>
     설치에 필요하면 추가 파일 시스템 옵션을 지정합니다. 예를 들어 영구 장치 이름이 필요한 경우 추가 파일 시스템 옵션이 필요합니다. 사용 가능한 옵션에 대한 자세한 내용은 <xref linkend="sec.yast2.i_y2_part_expert.options"/>을 참조하십시오.
    </para>
   </step>
   <step performance="required">
    <para>
     <guimenu>마침</guimenu>을 클릭하여 파티셔닝 설정을 적용하고 파티셔닝 모듈을 종료합니다.
    </para>
    <para>
     설치 중 파티션을 생성한 경우 설치 개요 화면으로 돌아갑니다.
    </para>
   </step>
  </procedure>
  <sect3 id="yast2.btrfs">
   <title>BTRFS 파티셔닝</title>
   <para>
    Btrfs(<xref linkend="cha.snapper"/><phrase os="sles"> 및 <xref linkend="filesystems"/></phrase> 참조)를 새로 설치된 시스템의 기본 파일 시스템으로 사용할 경우 <guimenu>설치 설정</guimenu> 화면에서 <guimenu>파티셔닝</guimenu>을 클릭하고 <guimenu>Btrfs를 기본 파일 시스템으로 사용</guimenu>을 선택합니다. 그러면 설치 시스템에서 Ext3 파일 시스템으로 포맷된 <filename>/boot</filename> 파티션과 기본 하위 볼륨 세트를 보유하는 BTRFS로 포맷된 루트 <filename>/</filename> 파티션을 만들라고 제안하는 메시지가 표시됩니다. 나중에 <guimenu>고급 파티션 도구</guimenu>를 사용하여 수정할 수 있습니다.
   </para>
   <para>
    루트 파일 시스템은 기본 하위 볼륨이고 작성된 하위 볼륨 목록에 표시되지 않습니다. 기본 BTRFS 하위 볼륨은 일반 파일 시스템으로 마운트할 수 있습니다.
   </para>
   <para>
    시스템 이벤트에 따라 수동 또는 자동으로 BTRFS 하위 볼륨의 스냅샷을 작성할 수 있습니다. 예를 들어, 파일 시스템을 변경할 경우 <command>zypper</command>에서 <command>snapper</command> 명령을 호출하여 변경 전과 후에 스냅샷을 작성합니다. 이 기능은 <command>zypper</command>에서 변경한 내용을 취소하고 이전 상태를 복원할 경우 유용합니다. <command>zypper</command>가 호출한 <command>snapper</command>에서 기본적으로 <emphasis>루트</emphasis> 파일 시스템 스냅샷을 작성하기 때문에 보관하는 데이터 특성에 따라 특정 디렉토리를 스냅샷 작성에서 제외하는 것이 좋습니다. 이런 이유로 YaST에서는 다음과 같은 별도 하위 볼륨을 작성할 것을 제안합니다.
   </para>
   <variablelist>
    <title>제안된 BTRFS 하위 볼륨</title>
    <varlistentry>
     <term><filename>/tmp/var/tmp/var/run</filename>
     </term>
     <listitem>
      <para>
       자주 변경되는 컨텐트가 포함된 디렉토리입니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/var/spool</filename>
     </term>
     <listitem>
      <para>
       사용자 데이터(예: 메일)가 포함되어 있습니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/var/log</filename>
     </term>
     <listitem>
      <para>
       롤백하면 안 되는 시스템 및 응용 프로그램의 로그 파일이 포함되어 있습니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/var/crash</filename>
     </term>
     <listitem>
      <para>
       손상된 커널의 메모리 덤프가 포함되어 있습니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/srv</filename>
     </term>
     <listitem>
      <para>
       FTP 및 HTTP 서버에 속하는 데이터 파일이 포함되어 있습니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/opt</filename>
     </term>
     <listitem>
      <para>
       타사 소프트웨어가 포함되어 있습니다.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>BTRFS 파티션의 크기</title>
    <para>
     저장된 스냅샷에 많은 디스크 공간이 필요하기 때문에 스냅샷을 작성할 수 없는 파티션(예: Ext3)보다 BTRFS 파티션에 더 많은 공간을 예약하는 것이 좋습니다. 제안된 하위 볼륨이 포함된 루트 BTRFS 파티션의 권장 크기는 20GB입니다.
    </para>
   </tip>
   <sect4 id="yast2.btrfs.yast">
    <title>YaST를 사용하여 BTRFS 하위 볼륨 관리</title>
    <para>
     이제 BTRFS 파티션의 하위 볼륨을 YaST <guimenu>고급 파티션 도구</guimenu> 모듈을 사용하여 관리할 수 있습니다. 새로운 하위 볼륨을 추가하거나 기존 하위 볼륨을 제거할 수 있습니다.
    </para>
    <procedure>
     <title>YaST가 포함된 BTRFS 하위 볼륨</title>
     <step performance="required">
      <para>
       <menuchoice><guimenu>시스템</guimenu><guimenu>파티션 도구</guimenu></menuchoice>와 함께 YaST <guimenu>고급 파티션 도구</guimenu>를 시작합니다.
      </para>
     </step>
     <step performance="required">
      <para>
       왼쪽 <guimenu>시스템 보기</guimenu> 창에서 <guimenu>BTRFS</guimenu>를 선택합니다.
      </para>
     </step>
     <step performance="required">
      <para>
       하위 볼륨을 관리해야 할 BTRFS 파티션을 선택하고 <guimenu>편집</guimenu>을 클릭합니다.
      </para>
     </step>
     <step performance="required">
      <para>
       <guimenu>하위 볼륨 처리</guimenu>를 클릭합니다. 선택한 BTRFS 파티션의 모든 기존 하위 볼륨 목록을 확인할 수 있습니다. <literal>@/.snapshots/xyz/snapshot</literal> 항목 개수를 확인할 수 있습니다. 이 하위 볼륨이 하나의 기존 스냅샷에 속합니다.
      </para>
     </step>
     <step performance="required">
      <para>
       하위 볼륨을 추가 또는 제거할지 여부에 따라 다음 작업을 수행합니다.
      </para>
      <substeps performance="required">
       <step performance="required">
        <para>
         하위 볼륨을 제거하려면 <guimenu>기존 하위 볼륨</guimenu> 목록에서 선택하고 <guimenu>제거</guimenu>를 클릭합니다.
        </para>
       </step>
       <step performance="required">
        <para>
         새 하위 볼륨을 추가하려면 <guimenu>새 하위 볼륨</guimenu> 텍스트 필드에 이름을 입력하고 <guimenu>새로 추가</guimenu>를 클릭합니다.
        </para>
        <figure id="fig.yast2.btrfs.subvolumes">
         <title>YaST 파티션 도구의 BTRFS 하위 볼륨</title>
         <mediaobject>
          <imageobject role="fo">
           <imagedata fileref="yats2_btrfs_subvolumes.png" width="75%" format="PNG"/>
          </imageobject>
          <imageobject role="html">
           <imagedata fileref="yats2_btrfs_subvolumes.png" width="75%" format="PNG"/>
          </imageobject>
         </mediaobject>
        </figure>
       </step>
      </substeps>
     </step>
     <step performance="required">
      <para>
       <guimenu>확인</guimenu>을 클릭하여 확인하고 <guimenu>완료</guimenu>를 클릭합니다.
      </para>
     </step>
     <step performance="required">
      <para>
       <guimenu>완료</guimenu>를 클릭하여 파티션 도구를 종료합니다.
      </para>
     </step>
    </procedure>
   </sect4>
  </sect3>
 </sect2>

 <sect2 id="sec.yast2.i_y2_part_expert.options">
  <title>파티션 편집</title><indexterm> <primary>파티션</primary> <secondary>파라미터</secondary> </indexterm>
  <para>
   새 파티션을 생성하거나 기존 파티션을 수정할 때 다양한 파라미터를 설정할 수 있습니다. 새 파티션의 경우 일반적으로 YaST에서 설정된 기본 파라미터로 충분하며 수정할 필요는 없습니다. 파티션 설정을 수동으로 편집하려면 다음 단계를 수행하십시오.
  </para>
  <procedure>
   <step performance="required">
    <para>
     파티션을 선택합니다.
    </para>
   </step>
   <step performance="required">
    <para>
     <guimenu>편집</guimenu>을 클릭하여 파티션을 편집하고 파라미터를 설정합니다.
    </para>
    <variablelist>
     <varlistentry>
      <term>파일 시스템 ID</term>
      <listitem>
       <para>
        <indexterm> <primary>파티션</primary> <secondary>LVM</secondary> </indexterm> <phrase os="sles"> </phrase> <indexterm> <primary>파티션</primary> <secondary>RAID</secondary> </indexterm> 이 단계에서 파티션을 포맷하지 않은 경우에도 해당 파티션에 파일 시스템 ID를 할당하여 파티션이 올바르게 등록되었는지 확인합니다. 일반적인 값은 <guimenu>Linux</guimenu>, <guimenu>Linux 스왑</guimenu>, <guimenu>Linux LVM</guimenu> 및 <guimenu>Linux RAID</guimenu>입니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       파일 시스템
      </term>
      <listitem>
       <para>
        <indexterm> <primary>파일 시스템</primary> <secondary>변경</secondary> </indexterm> <indexterm> <primary>파티션</primary> <secondary>다시 포맷</secondary> </indexterm> 파티션 파일 시스템을 변경하려면 <guimenu>파티션 포맷</guimenu>을 클릭하고 <guimenu>파일 시스템</guimenu> 목록에서 파일 시스템 유형을 선택합니다.
       </para>
       <para>
        <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서는 여러 유형의 파일 시스템을 지원합니다. BTRFS는 개선된 기능 때문에 고급 Linux 파일 시스템입니다. 이것은 COW(Copy-On-Write) 기능을 지원하여 스냅샷, 다중 장치 스패닝, 하위 볼륨 및 기타 유용한 기능을 만듭니다. ReiserFS, JFS, XFS 및 Ext3은 저널링 파일 시스템입니다. 이러한 파일 시스템은 시스템 작동 중지 후 신속하게 시스템을 복원하여 작업 중 기록된 쓰기 프로세스를 이용할 수 있습니다. Ext2는 저널링 파일 시스템이 아니지만, 관리를 위해 많은 디스크 공간을 요구하지 않으므로 작은 파티션에 적당합니다.
       </para>
       <note>
        <title>Ext4 파일 시스템에 대한 지원</title>
        <para>
         BtrFS는 Ext4보다 더 효율적이고 확장성이 좋은 것으로 입증되었기 때문에 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> SP2는 Ext4 파티션에 대한 읽기 전용 액세스만 지원합니다. 그러나 읽기-쓰기 모드에서 계속 Ext4 파티션에 액세스할 수 있지만, <systemitem>ext4-writeable</systemitem> 패키지를 설치해야 합니다. 이 작업은 지원되지 않으며 커널을 손상시킵니다.
        </para>
       </note>
       <para>
        스왑은 파티션을 가상 메모리로 사용할 수 있게 하는 특수 형식입니다. 256MB 이상의 스왑 파티션을 만듭니다. 그러나 스왑 공간을 모두 사용할 경우에는 더 많은 스왑 공간을 추가하는 대신 시스템에 메모리를 추가할 것을 고려하십시오.
       </para>
       <warning>
        <title>파일 시스템 변경</title>
        <para>
         파일 시스템을 변경하거나 파티션을 다시 포맷하면 파티션의 모든 데이터가 삭제됩니다.
        </para>
       </warning>
       <para>
        다양한 파일 시스템에 대한 자세한 내용은 <emphasis>저장소 관리 가이드</emphasis>를 참조하십시오.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       장치 암호화 
      </term>
      <listitem>
       <para>
        암호화를 활성화하면 모든 데이터가 암호화된 형태로 하드 디스크에 기록됩니다. 이것은 중요 데이터의 보안 수준을 높이지만, 암호화하는 데 시간이 걸리기 때문에 시스템 속도는 느려집니다. 파일 시스템 암호화에 대한 자세한 내용은 <xref linkend="cha.security.cryptofs"/>에서 찾을 수 있습니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       탑재 지점
      </term>
      <listitem>
       <para>
        파일 시스템 트리에서 파티션을 탑재할 디렉토리를 지정합니다. YaST 제안사항에서 선택하거나 다른 이름을 입력합니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       Fstab 옵션
      </term>
      <listitem>
       <para>
        전체 파일 시스템 관리 파일(<filename>/etc/fstab</filename>)에 포함된 다양한 파라미터를 지정합니다. 대부분의 설치에서 기본 설정이면 충분합니다. 예를 들어 장치 이름에서 볼륨 레이블로 파일 시스템 ID를 변경할 수 있습니다. 볼륨 레이블에는 <literal>/</literal>와 공백을 제외한 모든 문자를 사용합니다.
       </para>
       <para>
        영구 장치 이름을 가져오려면<guimenu>장치 ID</guimenu>, <guimenu>UUID</guimenu> 또는 <guimenu>LABEL</guimenu> 탑재 옵션을 사용하십시오. <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서는 영구 장치 이름이 기본적으로 활성화됩니다.
       </para>
       <note os="sles" arch="zseries">
        <title>IBM System z: 경로로 탑재</title>
        <para>
         복제 목적을 위해 디스크 간 복사를 사용할 때 ID로 탑재하면 IBM System z에서 문제가 발생하므로, 기본적으로 IBM System z에서는 <filename>/etc/fstab</filename>의 경로로 장치가 탑재됩니다.
        </para>
       </note>
       <para>
        레이블별로 파티션을 탑재하고자 할 경우 <guimenu>볼륨 레이블</guimenu> 텍스트 항목에서 레이블을 정의해야 합니다. 예를 들어 <filename>/home</filename>에 탑재할 파티션에 대해 <literal>HOME</literal> 파티션 레이블을 사용할 수 있습니다.
       </para>
       <para>
        파일 시스템에서 할당량을 사용하려면 <guimenu>할당량 지원 활성화</guimenu> 탑재 옵션을 사용합니다. YaST <guimenu>사용자 관리</guimenu> 모듈에서 사용자에 대한 할당량을 정의하려면 먼저 이 옵션을 선택해야 합니다. 사용자 할당량을 구성하는 방법에 대한 자세한 내용은 <xref linkend="sec.y2.userman.adv.quota"/>를 참조하십시오.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </step>
   <step performance="required">
    <para>
     <guimenu>마침</guimenu>을 선택하여 변경 사항을 저장합니다.
    </para>
   </step>
  </procedure>
  <note>
   <title>파일 시스템 크기 조정</title>
   <para>
    기존 파일 시스템의 크기를 조정하려면 파티션을 선택하고 <guimenu>크기 조정</guimenu>을 사용하십시오. 그러나 탑재 중에는 파티션 크기를 조정할 수 없습니다. 파티션 크기를 조정하려면 파티션 도구를 실행하기 전에 각 파티션의 탑재를 해제하십시오.
   </para>
  </note>
 </sect2>

 <sect2 id="sec.yast2.i_y2_part_expert.options2">
  <title>고급 옵션</title>
  <para>
   <guimenu>시스템 보기</guimenu> 창에서 하드 디스크 장치(예: <guimenu>sda</guimenu>)를 선택한 후 <guimenu>고급 파티션 도구</guimenu> 창의 오른쪽 아래에서 <guimenu>고급...</guimenu> 메뉴에 액세스할 수 있습니다. 이 메뉴의 명령은 다음과 같습니다.
  </para>
  <variablelist>
   <varlistentry>
    <term>새 파티션 테이블 생성</term>
    <listitem>
     <para>
      이 옵션을 선택하면 선택한 장치에서 새 파티션 테이블을 생성할 수 있습니다.
     </para>
     <warning>
      <title>새 파티션 테이블 생성</title>
      <para>
       장치에 새 파티션 테이블을 생성하면 모든 파티션과 데이터가 해당 장치에서 제거됩니다.
      </para>
     </warning>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>이 디스크 복제</term>
    <listitem>
     <para>
      이 옵션을 선택하면 장치 파티션 레이아웃(데이터는 아님)을 기타 사용 가능한 디스크 장치로 복제할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 id="sec.yast2.i_y2_part_expert.configure_options">
  <title>고급 옵션</title>
  <para>
   컴퓨터의 호스트 이름(<guimenu>시스템 보기</guimenu> 창에서 트리의 최상위)을 선택하면 <guimenu>고급 파티션 도구</guimenu> 창의 오른쪽 하단에 있는 <guimenu>구성...</guimenu> 메뉴에 액세스할 수 있습니다. 메뉴에 포함되는 명령은 다음과 같습니다.
  </para>
  <variablelist>
   <varlistentry>
    <term>iSCSI 구성</term>
    <listitem>
     <para>
      IP 블록 장치를 통해 SCSI에 액세스하려면 먼저 iSCSI를 구성해야 합니다. 그 결과 기본 파티션 목록에서 장치를 추가로 사용할 수 있게 됩니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>다중 경로 구성</term>
    <listitem>
     <para>
      이 옵션을 선택하면 지원되는 대용량 저장 장치에 대해 다중 경로의 향상된 기능을 구성할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 id="sec.yast2.i_y2_part_expert.info">
  <title>파티션 작업 추가 정보</title>
  <para>
   다음 절에는 시스템을 설정하는 동안 올바른 파티션 작업을 수행하기 위한 힌트와 추가 정보가 있습니다.
  </para>
  <tip>
   <title>실린더 수</title>
   <para>
    다양한 파티션 도구가 파티션의 실린더를 <literal>0</literal> 또는 <literal>1</literal>부터 계산할 수 있습니다. 항상 마지막 실린더 번호와 첫 번째 실린더 번호의 차에 1을 더하면 실린더 수가 계산됩니다.
   </para>
  </tip>

  <sect3>
   <title><literal>스왑</literal> 사용</title>
   <para>
    스왑은 실제로 사용할 수 있는 메모리를 확장하는 데 사용됩니다. 그리고 나면, 사용할 수 있는 실제 RAM보다 더 많은 메모리를 사용할 수 있습니다. 2.4.10 이전 커널의 메모리 관리 시스템에서는 스왑이 보안을 위해 필요했습니다. 이런 경우 스왑에 RAM 크기의 두 배 공간이 없는 경우 시스템 성능에 문제가 있었습니다. 이러한 제한 사항은 더 이상 없습니다.
   </para>
   <para>
    Linux는 <quote>최근 사용 페이지</quote>(LRU)라는 페이지를 사용하여 메모리에서 디스크로 이동할 수 있는 페이지를 선택합니다. 따라서 실행 중인 응용 프로그램이 더 많은 메모리를 사용할 수 있고 캐싱도 보다 원활하게 작동합니다.
   </para>
   <para>
    응용 프로그램이 허용된 최대 메모리를 할당하려고 시도하면 스왑 문제가 발생할 수 있습니다. 문제가 발생하는 세 가지 주요 경우는 다음과 같습니다.
   </para>
   <variablelist>
    <varlistentry>
     <term>스왑이 없는 시스템</term>
     <listitem>
      <para>
       응용 프로그램이 허용된 최대 메모리를 가져옵니다. 모든 캐시가 삭제되므로 실행 중인 다른 모든 응용 프로그램의 속도가 느려집니다. 몇 분 후에 커널의 메모리 부족 강제 종료 메커니즘이 활성화되고 프로세스가 강제 종료됩니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>중간 크기(128MB ~ 512MB)의 스왑을 포함한 시스템</term>
     <listitem>
      <para>
       처음에는 스왑이 없는 시스템처럼 속도가 느립니다. 모든 실제 RAM이 할당된 후에 스왑 공간도 사용됩니다. 이때 시스템은 매우 느려지고 원격으로 명령을 실행할 수 없게 됩니다. 스왑 공간을 실행하는 하드 디스크의 속도에 따라 커널의 메모리 부족 강제 종료 메커니즘이 문제를 해결할 때까지 시스템은 약 10-15분 동안 이 상태로 계속 있습니다. 컴퓨터에서 <quote>디스크 일시 중단</quote>을 수행해야 할 경우 특정 스왑 공간이 필요합니다. 이런 경우 스왑 공간은 메모리의 필요한 데이터를 포함할 수 있는 크기여야 합니다(512MB ~ 1GB).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>스왑이 많은 시스템(몇 GB)</term>
     <listitem>
      <para>
       이 경우 제어할 수 없고 지나치게 스와핑되는 응용 프로그램은 사용하지 않는 것이 좋습니다. 이러한 응용 프로그램을 사용하게 되면 복구하는 데 많은 시간이 걸립니다. 다른 프로세스에서 시간 초과 및 오류가 발생할 수 있으므로, 오류가 있는 프로세스가 강제 종료되더라도 시스템은 정의되지 않은 상태가 될 수 있습니다. 이 경우 시스템을 재부팅하고 다시 실행해 보십시오. 많은 스왑은 이러한 기능에 의존하는 응용 프로그램이 있는 경우에만 유용합니다. 데이터베이스나 그래픽 조작 프로그램과 같은 응용 프로그램에는 필요에 따라 하드 디스크 공간을 바로 사용하는 옵션이 있습니다. 많은 스왑 공간을 사용하지 않고 이 옵션을 사용하는 것이 좋습니다.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    시스템을 제어할 수 있지만 일정 시간이 지난 후 추가 스왑이 필요한 경우 스왑 공간을 온라인으로 확장할 수 있습니다. 스왑 공간을 위해 파티션을 준비했으면 YaST를 사용하여 이 파티션을 추가하십시오. 사용할 수 있는 파티션이 없으면 스왑 파일을 사용하여 스왑을 확장할 수도 있습니다. 스왑 파일은 일반적으로 파티션보다 속도가 느리지만 실제 RAM과 비교했을 때 두 가지 항목 모두 속도가 매우 느리므로 실제 차이는 미미합니다.
   </para>
   <procedure>
    <title>수동으로 스왑 파일 추가</title>
    <para>
     실행 중인 시스템에서 스왑 파일을 추가하려면 다음 단계를 수행하십시오.
    </para>
    <step performance="required">
     <para>
      시스템에 빈 파일을 생성합니다. 예를 들어 <filename>/var/lib/swap/swapfile</filename>에 128MB의 스왑을 가지는 스왑 파일을 추가하려면 다음 명령을 사용하십시오.
     </para>
<screen>mkdir -p /var/lib/swap
dd if=/dev/zero of=/var/lib/swap/swapfile bs=1M count=128</screen>
    </step>
    <step performance="required">
     <para>
      다음 명령으로 이 스왑 파일을 초기화합니다.
     </para>
<screen>mkswap /var/lib/swap/swapfile</screen>
    </step>
    <step performance="required">
     <para>
      다음 명령으로 스왑을 활성화합니다.
     </para>
<screen>swapon /var/lib/swap/swapfile</screen>
     <para>
      스왑 파일을 비활성화하려면 다음 명령을 사용하십시오.
     </para>
<screen>swapoff /var/lib/swap/swapfile</screen>
    </step>
    <step performance="required">
     <para>
      다음 명령으로 현재 사용할 수 있는 스왑 공간을 확인합니다.
     </para>
<screen>cat /proc/swaps</screen>
     <para>
      이 공간은 임시 스왑 공간일 뿐입니다. 다음에 재부팅한 후에는 더 이상 사용되지 않습니다.
     </para>
    </step>
    <step performance="required">
     <para>
      스왑 파일을 영구적으로 활성화려면 <filename>/etc/fstab</filename>에 다음 줄을 추가하십시오.
     </para>
     
     
<screen>/var/lib/swap/swapfile swap swap defaults 0 0</screen>
    </step>
   </procedure>
  </sect3>
 </sect2>

 <sect2>
  <title>파티션과 LVM</title>
  <para>
   <guimenu>고급 파티션 도구</guimenu>의 <guimenu>시스템 보기</guimenu> 창에 있는 <guimenu>볼륨 관리</guimenu> 항목을 클릭하여 LVM 구성에 액세스합니다. 그러나 시스템에서 이미 LVM 구성이 작동 중이면 이 구성은 세션의 초기 LVM 구성을 입력할 때 자동으로 활성화됩니다. 이 경우 활성화된 볼륨 그룹에 속한 파티션을 포함하는 모든 디스크는 다시 분할할 수 없습니다. 이 디스크의 파티션이 사용 중일 때 Linux 커널은 하드 디스크의 수정된 파티션 테이블을 다시 읽을 수 없습니다. 시스템에서 이미 LVM 구성이 있는 경우 실제 파티셔닝을 다시 수행할 필요가 없습니다. 대신, 논리 볼륨의 구성을 변경하십시오.
  </para>
  <para>
   실제 볼륨(PV)의 시작 부분에 있는 파티션에 볼륨 정보가 기록됩니다. LVM 이외의 목적을 위해 이러한 파티션을 다시 사용하려면 이 볼륨의 시작 부분을 삭제하는 것이 좋습니다. 예를 들어 VG <literal>system</literal> 및 PV <filename>/dev/sda2</filename>에서 <command>dd</command> <option>if=/dev/zero of=/dev/sda2 bs=512 count=1</option> 명령을 사용하십시오.
  </para>
  <warning>
   <title>부팅 파일 시스템</title>
   <para>
    부팅에 사용된 파일 시스템(루트 파일 시스템 또는 <filename>/boot</filename>)을 LVM 논리 볼륨에 저장할 필요는 없습니다. 대신, 일반적인 실제 위치에 저장하십시오.
   </para>
  </warning>
  <para os="sles">
   LVM에 대한 자세한 내용은 <xref linkend="stor_admin"/>를 참조하십시오.
  </para>
 </sect2>
</sect1>
