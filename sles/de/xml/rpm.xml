<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<sect1 xml:base="rpm.xml" id="sec.rpm">
 <title>RPM - der Paket-Manager</title><indexterm id="idx.RPM" class="startofrange"> <primary>RPM</primary> </indexterm> <indexterm> <primary>Pakete</primary> <secondary>RPMs</secondary> </indexterm> <indexterm> <primary>Pakete</primary> <secondary>Paketmanager</secondary> </indexterm> <indexterm> <primary>Befehle</primary> <secondary>rpm</secondary> </indexterm>

 <para>
  RPM (RPM Package Manager) wird für die Verwaltung von Softwarepaketen verwendet. Seine Hauptbefehle lauten <command>rpm</command> und <command>rpmbuild</command>. In der leistungsstarken RPM-Datenbank können Benutzer, Systemadministratoren und Paketersteller ausführliche Informationen zur installierten Software abfragen.
 </para><indexterm> <primary>rpmbuild</primary> </indexterm> <indexterm> <primary>Befehle</primary> <secondary>rpmbuild</secondary> </indexterm>

 <para>
  Im Wesentlichen hat <command>rpm</command> fünf Modi: Installieren/Deinstallieren (oder Aktualisieren) von Software-Paketen, Neuaufbauen der RPM-Datenbank, Abfragen der RPM-Basis oder individuellen RPM-Archive, Integritätsprüfung der Pakete und Signieren von Paketen. <command>rpmbuild</command> ermöglicht das Aufbauen installierbarer Pakete von Pristine-Quellen.
 </para>

 <para>
  Installierbare RPM-Archive sind in einem speziellen binären Format gepackt. Diese Archive bestehen aus den zu installierenden Programmdateien und aus verschiedenen Metadaten, die bei der Installation von <command>rpm</command> benutzt werden, um das jeweilige Softwarepaket zu konfigurieren, oder die zu Dokumentationszwecken in der RPM-Datenbank gespeichert werden. RPM-Archive haben für gewöhnlich die Dateinamenserweiterung <filename>.rpm</filename>.
 </para><indexterm> <primary>Pakete</primary> <secondary>LSB</secondary> </indexterm> <indexterm> <primary>LSB</primary> <secondary>Installieren von Paketen</secondary> </indexterm>

 <tip>
  <title>Pakete zur Software-Entwicklung</title>
  <para>
   Bei etlichen Paketen sind die zur Software-Entwicklung erforderlichen Komponenten (Bibliotheken, Header- und Include-Dateien usw.) in eigene Pakete ausgelagert. Diese Entwicklungspakete werden nur benötigt, wenn Sie Software selbst kompilieren möchten (beispielsweise die neuesten GNOME-Pakete). Solche Pakete sind am Namenszusatz <literal>-devel</literal> zu erkennen, z. B. die Pakete <systemitem class="resource">alsa-devel</systemitem>, <systemitem class="resource">gimp-devel</systemitem> und <systemitem class="resource">libkde4-develdevel</systemitem>.
  </para>
 </tip>

 <sect2 id="sec.rpm.package_auth">
  <title>Prüfen der Authentizität eines Pakets</title><indexterm> <primary>RPM</primary> <secondary>Prüfen</secondary> </indexterm> <indexterm> <primary>Pakete</primary> <secondary>Prüfen</secondary> </indexterm>
  <para>
   RPM-Pakete sind mit GPG signiert. Verifizieren Sie die Signatur eines RPM-Pakets mit dem Kommando <command>rpm --checksig <replaceable>package</replaceable>-1.2.3.rpm</command>. So können Sie feststellen, ob das Paket von Novell/SUSE oder einer anderen verbürgten Einrichtung stammt. Dies ist insbesondere bei Update-Paketen aus dem Internet zu empfehlen. 
  </para>
 </sect2>

 <sect2 id="sec.rpm.packages_manage">
  <title>Verwalten von Paketen: Installieren, Aktualisieren und Deinstallieren</title><indexterm> <primary>Installieren</primary> <secondary>Pakete</secondary> </indexterm> <indexterm> <primary>Pakete</primary> <secondary>Installieren</secondary> </indexterm> <indexterm> <primary>Pakete</primary> <secondary>Deinstallieren</secondary> </indexterm> <indexterm> <primary>RPM</primary> <secondary>rpmorig</secondary> </indexterm> <indexterm> <primary>RPM</primary> <secondary>rpmsave</secondary> </indexterm> <indexterm> <primary>RPM</primary> <secondary>rpmnew</secondary> </indexterm>
  <para>
   In der Regel kann ein RPM-Archiv einfach installiert werden: <command>rpm -i <replaceable>package</replaceable>.rpm</command>. Mit diesem Kommando wird das Paket aber nur dann installiert, wenn seine Abhängigkeiten erfüllt sind und keine Konflikte mit anderen Paketen bestehen. <command>rpm</command>fordert per Fehlermeldung die Pakete an, die zum Erfüllen der Abhängigkeiten installiert werden müssen. Im Hintergrund wacht die RPM-Datenbank darüber, dass keine Konflikte entstehen: Eine spezifische Datei darf nur zu einem Paket gehören. Durch die Wahl anderer Optionen können Sie <command>rpm</command> zwingen, diese Standards zu ignorieren, jedoch ist dies nur für Spezialisten gedacht. Andernfalls wird damit die Integrität des Systems gefährdet und möglicherweise die Update-Fähigkeit aufs Spiel gesetzt.
  </para><indexterm> <primary>RPM</primary> <secondary>Abhängigkeiten</secondary> </indexterm>
  <para>
   Die Optionen <option>-U</option> oder <option>--upgrade</option> und <option>-F</option> oder <option>--freshen</option> können für das Update eines Pakets benutzt werden (z. B.: <command>rpm -F <replaceable>paket</replaceable>.rpm</command>). Dieser Befehl entfernt die Dateien der alten Version und installiert sofort die neuen Dateien. Der Unterschied zwischen den beiden Versionen besteht darin, dass mit <option>-U</option> auch Pakete installiert werden, die vorher nicht im System vorhanden waren, wohingegen mit <option>-F</option> nur zuvor installierte Pakete aktualisiert werden. Bei einem Update verwendet <command>rpm</command> zur sorgfältigen Aktualisierung der Konfigurationsdateien die folgende Strategie:
  </para><indexterm> <primary>RPM</primary> <secondary>Aktualisieren</secondary> </indexterm>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Falls eine Konfigurationsdatei vom Systemadministrator nicht geändert wurde, installiert <command>rpm</command> die neue Version der entsprechenden Datei. Es sind keine Eingriffe seitens des Administrators nötig.
    </para>
   </listitem>
   <listitem>
    <para>
     Falls eine Konfigurationsdatei vom Systemadministrator vor dem Update geändert wurde, speichert <command>rpm</command> die geänderte Datei mit der Erweiterung <filename>.rpmorig</filename> oder <filename>.rpmsave</filename> (Sicherungsdatei) und installiert nur dann die Version aus dem neuen Paket, wenn sich die ursprünglich installierte Datei und die neue Version unterscheiden. Vergleichen Sie in diesem Fall die Sicherungsdatei (<filename>.rpmorig</filename> oder <filename>.rpmsave</filename>) mit der neu installierten Datei und nehmen Sie Ihre Änderungen erneut in der neuen Datei vor. Löschen Sie anschließend unbedingt alle <filename>.rpmorig</filename>- und <filename>.rpmsave</filename>-Dateien, um Probleme mit zukünftigen Updates zu vermeiden.
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>.rpmnew</filename>-Dateien erscheinen immer dann, wenn die Konfigurationsdatei bereits existiert <emphasis>und</emphasis> wenn die Kennung <option>noreplace</option> mit der <filename>.spec</filename>-Datei angegeben wurde.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Im Anschluss an ein Update sollten alle <filename>.rpmsave</filename>- und <filename>.rpmnew</filename>-Dateien nach einem Abgleich entfernt werden, damit sie bei zukünftigen Updates nicht stören. Die Erweiterung <filename>.rpmorig</filename> wird zugewiesen, wenn die Datei zuvor nicht von der RPM-Datenbank erkannt wurde.
  </para>
  <para>
   Andernfalls wird <filename>.rpmsave</filename> verwendet. Mit anderen Worten: <filename>.rpmorig</filename> entsteht bei einem Update von einem Fremdformat auf RPM. <filename>.rpmsave</filename> entsteht bei einem Update aus einem älteren RPM auf einen neueren RPM. <filename>.rpmnew</filename> informiert nicht darüber, ob der Systemadministrator die Konfigurationsdatei geändert hat. Eine Liste all dieser Dateien ist in <filename>/var/adm/rpmconfigcheck</filename> verfügbar. Einige Konfigurationsdateien (wie <filename>/etc/httpd/httpd.conf</filename>) werden nicht überschrieben, um den weiteren Betrieb zu ermöglichen.
  </para>
  <para>
   Der Schalter <option>-U</option> ist <emphasis>nicht</emphasis> einfach gleichbedeutend mit der Deinstallation mit der Option <option>-e</option> und der Installation mit der Option <option>-i</option>. Verwenden Sie <option>-U</option>, wann immer möglich.
  </para>
  <para>
   Zum Entfernen eines Pakets geben Sie <command>rpm -e <replaceable>paket</replaceable></command> ein. <command>rpm</command> löscht das Paket nur, wenn keine ungelösten Abhängigkeiten vorhanden sind. Theoretisch ist es unmöglich, beispielsweise Tcl/Tk zu löschen, solange eine andere Anwendung Tcl/Tk noch benötigt. Auch in diesem Fall nutzt RPM die Datenbank zur Unterstützung. Falls in einem Ausnahmefall ein solcher Löschvorgang nicht möglich ist (selbst wenn <emphasis>keine</emphasis> Abhängigkeiten mehr bestehen), kann es nützlich sein, die RPM-Datenbank mit der Option <option>--rebuilddb</option> neu aufzubauen.
  </para><indexterm> <primary>RPM</primary> <secondary>Deinstallieren</secondary> </indexterm> <indexterm> <primary>RPM</primary> <secondary>database</secondary> <tertiary>Neu aufbauen</tertiary> </indexterm>
 </sect2>

 <sect2 id="sec.rpm.patches">
  <title>RPM und Patches</title><indexterm> <primary>RPM</primary> <secondary>Patches</secondary> </indexterm>
  <para>
   Um die Betriebssicherheit eines Systems zu garantieren, müssen von Zeit zu Zeit Update-Pakete auf dem System installiert werden. Bisher konnte ein Fehler in einem Paket nur eliminiert werden, indem das vollständige Paket ersetzt wurde. Umfangreiche Pakete mit Bugs in kleinen Dateien können leicht zu diesem Szenario führen. Jedoch bietet SUSE RPM nun eine Funktion, mit der Patches in Pakete installiert werden können.
  </para>
  <para>
   Die wichtigsten Überlegungen dazu werden am Beispiel <command>pine</command> aufgezeigt:
  </para>
  <variablelist>
   <varlistentry>
    <term>Ist der Patch-RPM für mein System geeignet?</term>
    <listitem>
     <para>
      Um dies zu prüfen, fragen Sie zunächst die installierte Version des Pakets ab. Im Fall von <command>pine</command> verwenden Sie das Kommando:
     </para>
<screen>rpm -q pine
pine-4.44-188</screen>
     <para>
      Prüfen Sie dann, ob der Patch-RPM sich für diese Version von <command>pine</command> eignet:
     </para>
<screen>rpm -qp --basedon pine-4.44-224.i586.patch.rpm
pine = 4.44-188
pine = 4.44-195
pine = 4.44-207</screen>
     <para>
      Dieser Patch passt zu drei verschiedenen Versionen von pine. Auch die im Beispiel installierte Version wird aufgeführt, d. h. der Patch kann installiert werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Welche Dateien werden durch den Patch ersetzt?</term>
    <listitem>
     <para>
      Die durch einen Patch betroffenen Dateien können leicht im Patch-RPM abgelesen werden. Der <command>rpm</command>-Parameter <option>-P</option> ermöglicht die Auswahl von speziellen Patch-Funktionen. Zeigen Sie die Dateiliste mit dem folgenden Befehl an:
     </para>
<screen>rpm -qpPl pine-4.44-224.i586.patch.rpm
/etc/pine.conf
/etc/pine.conf.fixed
/usr/bin/pine</screen>
     <para>
      Oder verwenden Sie, falls der Patch bereits installiert ist, den folgenden Befehl:
     </para>
<screen>rpm -qPl pine
/etc/pine.conf
/etc/pine.conf.fixed
/usr/bin/pine</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Wie kann ein Patch-RPM im System installiert werden?</term>
    <listitem>
     <para>
      Patch-RPMs werden wie normale RPMs verwendet. Der einzige Unterschied liegt darin, dass ein passender RPM bereits installiert sein muss.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     Welche Patches sind bereits auf dem System installiert und zu welchen Paketversionen gehören sie?
    </term>
    <listitem>
     <para>
      Eine Liste aller im System installierter Patches kann über den Befehl <command>rpm <option>-qPa</option></command> angezeigt werden. Wenn nur ein Patch in einem neuen System installiert ist (wie in unserem Beispiel), sieht die Liste wie folgt aus:
     </para>
<screen>rpm -qPa
pine-4.44-224</screen>
     <para>
      Wenn Sie zu einem späteren Zeitpunkt wissen möchten, welche Paketversion ursprünglich installiert war, können Sie auch diese Information der RPM-Datenbank entnehmen. Für <command>pine</command> rufen Sie diese Information mit dem folgenden Befehl ab:
     </para>
<screen>rpm -q --basedon pine
pine = 4.44-188</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Weitere Informationen, auch zur Patch-Funktion von RPM, stehen auf den man-Seiten von <command>rpm</command> und <command>rpmbuild</command> zur Verfügung.
  </para>
  <note>
   <title>Offizielle Aktualisierungen für <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase></title>
   <para>
    Damit die Download-Größe von Updates möglichst klein gehalten wird, werden offizielle Aktualisierungen für <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> nicht als Patch-RPMs, sondern als Delta-RPM-Pakete zur Verfügung gestellt. Weitere Informationen finden Sie unter <xref linkend="sec.rpm.delta"/>.
   </para>
  </note>
 </sect2>

 <sect2 id="sec.rpm.delta">
  <title>Delta-RPM-Pakete</title><indexterm> <primary>RPM</primary> <secondary>deltarpm</secondary> </indexterm> <indexterm> <primary>deltarpm</primary> </indexterm>
  <para>
   Delta-RPM-Pakete enthalten die Unterschiede zwischen einer alten und einer neuen Version eines RPM-Pakets. Wenn Sie ein Delta-RPM auf ein altes RPM anwenden, ergibt dies ein ganz neues RPM. Es ist nicht erforderlich, dass eine Kopie des alten RPM vorhanden ist, da ein Delta-RPM auch mit einem installierten RPM arbeiten kann. Die Delta-RPM-Pakete sind sogar kleiner als Patch-RPMs, was beim Übertragen von Update-Paketen über das Internet von Vorteil ist. Der Nachteil ist, dass Update-Vorgänge mit Delta-RPMs erheblich mehr CPU-Zyklen beanspruchen als normale oder Patch-RPMs.
  </para>
  <para>
   Die Binärdateien <command>prepdeltarpm</command>, <command>writedeltarpm</command> und <command>applydeltarpm</command> sind Teil der Delta-RPM-Suite (Paket <systemitem>deltarpm</systemitem>) und helfen Ihnen beim Erstellen und Anwenden von Delta-RPM-Paketen. Mit den folgenden Befehlen erstellen Sie ein Delta-RPM mit dem Namen <filename>new.delta.rpm</filename>. Der folgende Befehl setzt voraus, dass <filename>old.rpm</filename> und <filename>new.rpm</filename> vorhanden sind:
  </para>
<screen>prepdeltarpm -s seq -i info old.rpm &gt; old.cpio
prepdeltarpm -f new.rpm &gt; new.cpio
xdelta delta -0 old.cpio new.cpio delta
writedeltarpm new.rpm delta info new.delta.rpm</screen>
  <para>
   Entfernen Sie zum Schluss die temporären Arbeitsdateien <filename>old.cpio</filename>, <filename>new.cpio</filename> und <filename>delta</filename>.
  </para>
  <para>
   Mit <command>applydeltarpm</command> können Sie den neuen RPM aus dem Dateisystem rekonstruieren, wenn das alte Paket bereits installiert ist:
  </para>
<screen>applydeltarpm new.delta.rpm new.rpm</screen>
  <para>
   Um es aus dem alten RPM abzuleiten, ohne auf das Dateisystem zuzugreifen, verwenden Sie die Option <option>-r</option>:
  </para>
<screen>applydeltarpm -r old.rpm new.delta.rpm new.rpm</screen>
  <para>
   Technische Details finden Sie in <filename>/usr/share/doc/packages/deltarpm/README</filename>.
  </para>
 </sect2>

 <sect2 id="sec.rpm.query">
  <title> RPM Abfragen </title><indexterm> <primary>RPM</primary> <secondary>Abfragen</secondary> </indexterm>
  <para>
   Mit der Option <option>-q</option> initiiert <command>rpm</command> Abfragen und ermöglicht es, ein RPM-Archiv zu prüfen (durch Hinzufügen der Option <option>-p</option>) und auch die RPM-Datenbank nach installierten Paketen abzufragen. Zur Angabe der benötigten Informationsart stehen mehrere Schalter zur Verfügung. Weitere Informationen hierzu finden Sie unter <xref linkend="tab.rpm.query"/>.
  </para>
  <table id="tab.rpm.query">
   <title>Die wichtigsten RPM-Abfrageoptionen</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-i</option>
       </para>
      </entry>
      <entry>
       <para>
        Paketinformation
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-l</option>
       </para>
      </entry>
      <entry>
       <para>
        Dateiliste
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-f FILE</option>
       </para>
      </entry>
      <entry>
       <para>
        Abfrage nach Paket, das die Datei <replaceable>FILE</replaceable> enthält. (<replaceable>FILE</replaceable> muss mit dem vollständigen Pfad angegeben werden.)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        Dateiliste mit Statusinformation (impliziert <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-d</option>
       </para>
      </entry>
      <entry>
       <para>
        Nur Dokumentationsdateien auflisten (impliziert <literal>-l</literal>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        Nur Konfigurationsdateien auflisten (impliziert <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--dump</option>
       </para>
      </entry>
      <entry>
       <para>
        Dateiliste mit vollständigen Details (mit <option>-l</option>, <option>-c</option> oder <option>-d</option> benutzen)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--provides</option>
       </para>
      </entry>
      <entry>
       <para>
        Funktionen des Pakets auflisten, die ein anderes Paket mit <option>--requires</option> anfordern kann
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--requires</option>, <option>-R</option>
       </para>
      </entry>
      <entry>
       <para>
        Fähigkeiten, die das Paket benötigt
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--Skripten</option>
       </para>
      </entry>
      <entry>
       <para>
        Installationsskripten (preinstall, postinstall, uninstall)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   Beispielsweise gibt der Befehl <command>rpm -q -i wget</command> die in <xref linkend="aus.update.rpm-i"/> gezeigte Information aus.
  </para>
  <example id="aus.update.rpm-i">
   <title>rpm -q -i wget</title>
<screen>Name        : wget                         Relocations: (not relocatable)
Version     : 1.11.4                            Vendor: openSUSE
Release     : 1.70                          Build Date: Sat 01 Aug 2009 09:49:48 CEST
Install Date: Thu 06 Aug 2009 14:53:24 CEST      Build Host: build18
Group       : Productivity/Networking/Web/Utilities   Source RPM: wget-1.11.4-1.70.src.rpm
Size        : 1525431                          License: GPL v3 or later
Signature   : RSA/8, Sat 01 Aug 2009 09:50:04 CEST, Key ID b88b2fd43dbdc284
Packager    : http://bugs.opensuse.org
URL         : http://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
[...]</screen>
  </example>
  <para>
   Die Option <option>-f</option> funktioniert nur, wenn Sie den kompletten Dateinamen mit dem vollständigen Pfad angeben. Sie können so viele Dateinamen wie nötig angeben. Beispielsweise führt der folgende Befehl
  </para>
<screen>rpm -q -f /bin/rpm /usr/bin/wget</screen>
  <para>
   zum Ergebnis:
  </para>
<screen>rpm-4.8.0-4.3.x86_64
wget-1.11.4-11.18.x86_64</screen>
  <para>
   Wenn nur ein Teil des Dateinamens bekannt ist, verwenden Sie ein Shell-Skript, wie in <xref linkend="dat.rpm.search"/> gezeigt. Übergeben Sie den partiellen Dateinamen als Parameter beim Aufruf des Skripts.
  </para>
  <example id="dat.rpm.search">
   <title>Skript für die Suche nach Paketen</title>
<screen>#! /bin/sh
for i in $(rpm -q -a -l | grep $1); do
    echo "\"$i\" is in package:"
    rpm -q -f $i
    echo ""
done</screen>
  </example>
  <para>
   Das Kommando <command>rpm -q --changelog rpm</command> zeigt eine detaillierte Liste der Änderungsinformation zu einem bestimmten Paket (in diesem Fall das <literal>rpm</literal>-Paket) nach Datum sortiert an. 

  </para>
  <para>
   Mithilfe der installierten RPM-Datenbank sind Überprüfungen möglich. Leiten Sie die Überprüfungen mit <option>-V</option>, <option>-y</option> oder <option>--verify</option> ein. Mit dieser Option zeigt <command>rpm</command> alle Dateien in einem Paket an, die seit der Installation geändert wurden. <command>rpm</command> verwendet acht verschiedene Zeichen als Hinweis auf die folgenden Änderungen:
  </para><indexterm> <primary>RPM</primary> <secondary>überprüfen</secondary> </indexterm>
  <table id="tab.rpm.verify">
   <title>RPM-Überprüfungsoptionen</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>5</option>
       </para>
      </entry>
      <entry>
       <para>
        MD5-Prüfsumme
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>S</option>
       </para>
      </entry>
      <entry>
       <para>
        Dateigröße
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>L</option>
       </para>
      </entry>
      <entry>
       <para>
        Symbolischer Link
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>T</option>
       </para>
      </entry>
      <entry>
       <para>
        Änderungszeit
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>D</option>
       </para>
      </entry>
      <entry>
       <para>
        Major- und Minor-Gerätenummern
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>U</option>
       </para>
      </entry>
      <entry>
       <para>
        Eigentümer
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>G</option>
       </para>
      </entry>
      <entry>
       <para>
        Gruppe
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>M</option>
       </para>
      </entry>
      <entry>
       <para>
        Modus (Berechtigungen und Dateityp)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   Bei Konfigurationsdateien wird der Buchstabe <option>c</option> ausgegeben. Beispielsweise für Änderungen an <filename>/etc/wgetrc</filename> (<systemitem class="resource">wget</systemitem>-Paket):
  </para>
<screen>rpm -V wget
S.5....T c /etc/wgetrc</screen>
  <para>
   Die Dateien der RPM-Datenbank werden in <filename>/var/lib/rpm</filename> abgelegt. Wenn die Partition <filename>/usr</filename> eine Größe von 1 GB aufweist, kann diese Datenbank beinahe 30 MB belegen, insbesondere nach einem kompletten Update. Wenn die Datenbank viel größer ist als erwartet, kann es nützlich sein, die Datenbank mit der Option <option>--rebuilddb</option> neu zu erstellen. Legen Sie zuvor eine Sicherungskopie der alten Datenbank an. Das <command>cron</command>-Skript <command>cron.daily</command> legt täglich (mit gzip gepackte) Kopien der Datenbank an und speichert diese unter <filename>/var/adm/backup/rpmdb</filename>. Die Anzahl der Kopien wird durch die Variable <systemitem>MAX_RPMDB_BACKUPS</systemitem> (Standard: <option>5</option>) in <filename>/etc/sysconfig/backup</filename> gesteuert. Die Größe einer einzelnen Sicherungskopie beträgt ungefähr 1 MB für 1 GB in <filename>/usr</filename>.
  </para><indexterm> <primary>RPM</primary> <secondary>Datembank</secondary> <tertiary>Neu erstellen</tertiary> </indexterm>
 </sect2>

 <sect2 id="sec.rpm.sources">
  <title>Installieren und Kompilieren von Quellpaketen</title><indexterm> <primary>Pakete</primary> <secondary>Kompilieren</secondary> </indexterm> <indexterm> <primary>Quelle</primary> <secondary>Kompilieren</secondary> </indexterm> <indexterm> <primary>Software</primary> <secondary>Kompilieren</secondary> </indexterm> <indexterm> <primary>spm</primary> </indexterm>
  <para>
   Alle Quellpakete haben die Erweiterung <filename>.src.rpm</filename> (Source-RPM).
  </para>
  <note>
   <title>Installierte Quellpakete</title>
   <para>
    Quellpakete können vom Installationsmedium auf die Festplatte kopiert und mit YaST entpackt werden. Sie werden im Paket-Manager jedoch nicht als installiert (<literal>[i]</literal>) gekennzeichnet. Das liegt daran, dass die Quellpakete nicht in der RPM-Datenbank eingetragen sind. Nur <emphasis>installierte</emphasis> Betriebssystemsoftware wird in der RPM-Datenbank aufgeführt. Wenn Sie ein Quellpaket <quote>installieren</quote>, wird dem System nur der Quellcode hinzugefügt.
   </para>
  </note>
  <para>
   Die folgenden Verzeichnisse müssen für <command>rpm</command> und <command>rpmbuild</command> in <filename>/usr/src/packages</filename> vorhanden sein (es sei denn, Sie haben spezielle Einstellungen in einer Datei, wie <filename>/etc/rpmrc</filename>, festgelegt):
  </para>
  <variablelist>
   <varlistentry>
    <term><filename>SOURCES</filename>
    </term>
    <listitem>
     <para>
      für die originalen Quellen (<filename>.tar.bz2</filename> oder <filename>.tar.gz</filename> files, etc.) und für die distributionsspezifischen Anpassungen (meistens <filename>.diff</filename>- oder <filename>.patch</filename>-Dateien)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SPECS</filename>
    </term>
    <listitem>
     <para>
      für die <filename>.spec</filename>-Dateien, die ähnlich wie Meta-Makefiles den <emphasis>build</emphasis>-Prozess steuern
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>BUILD</filename>
    </term>
    <listitem>
     <para>
      Alle Quellen in diesem Verzeichnis werden entpackt, gepatcht und kompiliert.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>RPMS</filename>
    </term>
    <listitem>
     <para>
      Speicherort der fertigen Binärpakete
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SRPMS</filename> <indexterm> <primary>RPM</primary> <secondary>SRPMS</secondary> </indexterm></term>
    <listitem>
     <para>
      Speicherort der Quell-RPMs
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Wenn Sie ein Quellpaket mit YaST installieren, werden alle erforderlichen Komponenten in <filename>/usr/src/packages</filename> installiert: die Quellen und Anpassungen in <filename>SOURCES</filename> und die relevante <filename>.spec</filename>-Datei in <filename>SPECS</filename>.
  </para>
  <warning>
   <para>
    Experimentieren Sie nicht mit Systemkomponenten ( <systemitem class="resource">glibc</systemitem>, <systemitem class="resource">rpm</systemitem>, <systemitem class="resource">sysvinit </systemitem>usw.), da Sie damit die Stabilität Ihres Systems aufs Spiel setzen.
   </para>
  </warning>
  <para>
   Das folgende Beispiel verwendet das <filename>wget.src.rpm</filename>-Paket. Nach der Installation des Quellpakets sollten Dateien wie in der folgenden Liste vorhanden sein:
  </para>
<screen>/usr/src/packages/SOURCES/wget-1.11.4.tar.bz2
/usr/src/packages/SOURCES/wgetrc.patch
/usr/src/packages/SPECS/wget.spec</screen>
  <para>
   Mit <command>rpmbuild -b <replaceable>X</replaceable> /usr/src/packages/SPECS/wget.spec</command> wird die Kompilierung gestartet. <replaceable>X</replaceable> ist ein Platzhalter für verschiedene Stufen des build-Prozesses (Einzelheiten siehe in <option>--help</option> oder der RPM-Dokumentation). Nachfolgend wird nur eine kurze Erläuterung gegeben:
  </para>
  <variablelist>
   <varlistentry>
    <term><option>-bp</option>
    </term>
    <listitem>
     <para>
      Bereiten Sie Quellen in <filename>/usr/src/packages/BUILD</filename> vor: entpacken und patchen.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bc</option>
    </term>
    <listitem>
     <para>
      Wie <option>-bp</option>, jedoch zusätzlich kompilieren.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bi</option>
    </term>
    <listitem>
     <para>
      Wie <option>-bp</option>, jedoch zusätzlich die erstellte Software installieren. Vorsicht: Wenn das Paket die Funktion BuildRoot nicht unterstützt, ist es möglich, dass Konfigurationsdateien überschrieben werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bb</option>
    </term>
    <listitem>
     <para>
      Wie <option>-bi</option>, jedoch zusätzlich das Binärpaket erstellen. Nach erfolgreicher Kompilierung sollte das Binärpaket in <filename>/usr/src/packages/RPMS</filename> sein.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-ba</option>
    </term>
    <listitem>
     <para>
      Wie <option>-bb</option>, jedoch zusätzlich den Quell-RPM erstellen. Nach erfolgreicher Kompilierung sollte dieses in <filename>/usr/src/packages/RPMS</filename> liegen.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>--short-circuit</option>
    </term>
    <listitem>
     <para>
      Einige Schritte überspringen.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Der erstellte Binär-RPM kann nun mit <command>rpm <option>-i</option></command> oder vorzugsweise mit <command>rpm <option>-U</option></command> erstellt werden. Durch die Installation mit <command>rpm</command> wird er in die RPM-Datenbank aufgenommen.
  </para>
 </sect2>

 <sect2 id="sec.rpm.build">
  <title>Kompilieren von RPM-Pakten mit „build“</title><indexterm> <primary>Pakete</primary> <secondary>Kompilieren mit build</secondary> </indexterm>
  <para>
   Bei vielen Paketen besteht die Gefahr, dass während der Erstellung ungewollt Dateien in das laufende System kopiert werden. Um dies zu vermeiden, können Sie <systemitem>build</systemitem> verwenden, das eine definierte Umgebung herstellt, in der das Paket erstellt wird. Zum Aufbau dieser chroot-Umgebung muss dem <command>build</command>-Skript ein kompletter Paketbaum zur Verfügung stehen. Dieser kann auf Festplatte, über NFS oder auch von DVD bereitgestellt werden. Legen Sie die Position mit <command>build --rpms <replaceable>Verzeichnis</replaceable></command> fest. Im Unterschied zu <command>rpm</command> sucht das Kommando <command>build</command> die <filename>-spec</filename>-Datei im Quellverzeichnis. Wenn Sie, wie im obigen Beispiel, <filename>wget</filename> neu erstellen möchten und die DVD unter <filename>/media/dvd</filename> im System eingehängt ist, verwenden Sie als Benutzer <systemitem class="username">root</systemitem> folgende Kommandos:
  </para>
<screen>cd /usr/src/packages/SOURCES/
mv ../SPECS/wget.spec .
build --rpms /media/dvd/suse/ wget.spec</screen>
  <para>
   Anschließend wird in <filename>/var/tmp/build-root</filename> eine minimale Umgebung eingerichtet. Das Paket wird in dieser Umgebung erstellt. Danach befinden sich die resultierenden Pakete in <filename>/var/tmp/build-root/usr/src/packages/RPMS</filename>.
  </para>
  <para>
   Das <command>build</command>-Skript bietet eine Reihe zusätzlicher Optionen. Beispielsweise können Sie das Skript veranlassen, Ihre eigenen RPMs bevorzugt zu verwenden, die Initialisierung der build-Umgebung auszulassen oder das Kommando <command>rpm</command> auf eine der oben erwähnten Stufen zu beschränken. Weitere Informationen erhalten Sie über <command>build <option>--help</option></command> oder die man-Seite <command>build</command>.
  </para>
 </sect2>

 <sect2 id="sec.rpm.tools">
  <title>Werkzeuge für RPM-Archive und die RPM-Datenbank</title><indexterm> <primary>RPM</primary> <secondary>Werkzeuge</secondary> </indexterm>
  <para>
   Midnight Commander (<command>mc</command>) kann den Inhalt von RPM-Archiven anzeigen und Teile daraus kopieren. Archive werden als virtuelle Dateisysteme dargestellt und bieten alle üblichen Menüoptionen von Midnight Commander. Zeigen Sie den <filename>HEADER</filename> mit <keycap>F3</keycap> an. Zeigen Sie die Archivstruktur mit den Cursortasten und der <keycap>Eingabetaste</keycap> an. Kopieren Sie Archivkomponenten mit <keycap>F5</keycap>.
  </para>
  <para>


   Ein Paket-Manager mit allen Funktionen ist als YaST-Modul verfügbar. Weitere Informationen finden Sie unter <xref linkend="cha.y2.sw"/>.
  </para><indexterm class="endofrange" startref="idx.RPM"/>

 </sect2>
</sect1>
