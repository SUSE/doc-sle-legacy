<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="net_proxy.xml" id="cha.squid">
 <title>Der Squid-Proxyserver</title><indexterm> <primary>Squid</primary> </indexterm> <indexterm> <primary>Proxys</primary> <see>Squid</see> </indexterm>
 <abstract>
  <para>
   Squid ist ein häufig verwendeter Proxy-Cache für Linux- und UNIX-Plattformen. Das bedeutet, dass er angeforderte Internetobjekte, wie beispielsweise Daten auf einem Web- oder FTP-Server, auf einem Computer speichert, der sich näher an der Arbeitsstation befindet, die die Anforderung ausgegeben hat, als der Server. Er kann in mehreren Hierarchien eingerichtet werden. So werden optimale Reaktionszeiten und die Nutzung einer niedrigen Bandbreite garantiert – auch bei Modi, die für den Endbenutzer transparent sind. Zusätzliche Software, wie squidGuard, kann zum Filtern der Webinhalte verwendet werden.
  </para>
 </abstract><indexterm> <primary>Squid</primary> <secondary>Caches</secondary> </indexterm> <indexterm> <primary>Proxys</primary> <secondary>Caches</secondary> </indexterm>
 <para>
  Squid dient als Proxy-Cache. Er leitet Objektanforderungen von Clients (in diesem Fall: von Webbrowsern) an den Server weiter. Wenn die angeforderten Objekte vom Server eintreffen, stellt er die Objekte dem Client zu und behält eine Kopie davon im Festplatten-Cache. Einer der Vorteile des Cachings besteht darin, dass mehrere Clients, die dasselbe Objekt anfordern, aus dem Festplatten-Cache versorgt werden können. Dadurch können die Clients die Daten wesentlich schneller erhalten als aus dem Internet. Durch dieses Verfahren wird außerdem der Datenverkehr im Netzwerk reduziert. <indexterm><primary>Proxys</primary><secondary>Vorteile</secondary> </indexterm>
 </para>
 <para>
  <indexterm> <primary>Squid</primary><secondary>Funktionen</secondary> </indexterm> Neben dem eigentlichen Caching bietet Squid eine breite Palette von Funktionen, wie die Verteilung der Last auf mehrere miteinander kommunizierende Hierarchien von Proxyservern, die Definition strenger Zugriffssteuerungslisten für alle Clients, die auf den Proxy zugreifen, das Zulassen oder Verweigern des Zugriffs auf bestimmte Webseiten mithilfe anderer Anwendungen und das Erstellen von Statistiken zu häufig besuchten Webseiten zur Bewertung der Internetgewohnheiten des Benutzers. Squid ist kein generischer Proxy. Er fungiert normalerweise nur bei HTTP-Verbindungen als Proxy. Außerdem unterstützt er die Protokolle FTP, Gopher, SSL und WAIS, nicht jedoch andere Internetprotokolle, wie Real Audio, News oder Video-Konferenzen. Da Squid nur das UDP-Protokoll für die Bereitstellung von Kommunikation zwischen verschiedenen Caches unterstützt, werden zahlreiche andere Multimedia-Programme nicht unterstützt.
 </para>
 <sect1 id="sec.squid.cacheinfos">
  <title>Einige Tatsachen zu Proxy-Caches</title>

  <para>
   Als Proxy-Cache kann Squid auf verschiedene Weise verwendet werden. In Kombination mit einer Firewall kann er die Sicherheit unterstützen. Mehrere Proxies können gemeinsam verwendet werden. Außerdem kann er ermitteln, welche Objekttypen für wie lange im Cache gespeichert werden sollen.
  </para>

  <sect2 id="sec.squid.security">
   <title>Squid und Sicherheit</title><indexterm> <primary>Squid</primary> <secondary>Sicherheit</secondary> </indexterm> <indexterm> <primary>Sicherheit</primary> <secondary>Squid</secondary> </indexterm>
   <para>
    Squid kann zusammen mit einer Firewall verwendet werden, um interne Netzwerke mithilfe eines Proxy-Caches gegen Zugriffe von außen zu schützen. Die Firewall verweigert allen Clients Zugriff auf externe Dienste mit Ausnahme von Squid. Alle Webverbindungen müssen vom Proxy erstellt werden. Bei dieser Konfiguration steuert Squid den gesamten Webzugriff.
   </para>
   <para>
    <indexterm> <primary>Squid</primary><secondary>Sicherheit</secondary> </indexterm> Wenn zur Firewall-Konfiguration eine DMZ gehört, sollte der Proxy in dieser Zone betrieben werden. In <xref linkend="sec.squid.proxyconfigtrans"/> wird die Implementierung eines <emphasis>transparenten</emphasis> Proxys beschrieben. Dadurch wird die Konfiguration der Clients erleichtert, da sie in diesem Fall keine Informationen zum Proxy benötigen.
   </para>
  </sect2>

  <sect2 id="sec.squid.morecaches">
   <title>Mehrere Caches</title><indexterm> <primary>Squid</primary> <secondary>Caches</secondary> </indexterm>
   <para>
    Mehrere Instanzen von Squid können für den Austausch von Objekten konfiguriert werden. Dadurch verringert sich die Gesamtlast im System und die Wahrscheinlichkeit, ein Objekt zu finden, das bereits im lokalen Netzwerk vorhanden ist, erhöht sich. Außerdem können Cache-Hierarchien konfiguriert werden, sodass ein Cache Objektanforderungen an gleichgeordnete Caches oder einen übergeordneten Cache weiterleiten kann, sodass er Objekte aus einem anderen Cache im lokalen Netzwerk oder direkt von der Quelle erhält.
   </para>
   <para>
    Die Auswahl einer geeigneten Topologie für die Cache-Hierarchie ist von entscheidender Bedeutung, da es nicht erstrebenswert ist, das Gesamtaufkommen an Datenverkehr im Netzwerk zu erhöhen. Bei sehr großen Netzwerken ist es sinnvoll, einen Proxyserver für jedes Subnetzwerk zu konfigurieren und mit einem übergeordneten Proxy zu verbinden, der wiederum mit dem Proxy-Cache des ISP verbunden ist.
   </para>
   <para>
    Diese gesamte Kommunikation wird über das ICP (Internet Cache Protocol) abgewickelt, das über dem UDP-Protokoll ausgeführt wird. Die Übertragungen zwischen den Caches erfolgen über HTTP (Hypertext Transmission Protocol) auf der Grundlage von TCP.
   </para>
   <para>
    Um den geeignetsten Server zum Abrufen der Objekte zu finden, sendet ein Cache eine ICP-Anforderung an alle gleichgeordneten Proxies. Diese beantworten die Anforderungen über ICP-Antworten mit einem HIT-Code, wenn das Objekt erkannt wurde bzw. mit einem MISS-Code, wenn es nicht erkannt wurde. Wenn mehrere HIT-Antworten gefunden wurden, legt der Proxyserver fest, von welchem Server heruntergeladen werden soll. Diese Entscheidung ist unter anderem davon abhängig, welcher Cache die schnellste Antwort gesendet hat bzw. welcher näher ist. Wenn keine zufrieden stellenden Antworten eingehen, wird die Anforderung an den übergeordneten Cache gesendet.
   </para>
   <tip>
    <para>
     Um eine Verdopplung der Objekte in verschiedenen Caches im Netzwerk zu vermeiden, werden andere ICP-Protokolle verwendet, wie beispielsweise CARP (Cache Array Routing Protocol) oder HTCP (Hypertext Cache Protocol). Je mehr Objekte sich im Netzwerk befinden, desto größer ist die Wahrscheinlichkeit, das gewünschte zu finden.
    </para>
   </tip>
  </sect2>

  <sect2 id="sec.squid.latching">
   <title>Caching von Internetobjekten</title><indexterm> <primary>Squid</primary> <secondary>Objektstatus</secondary> </indexterm>
   <para>
    Nicht alle im Netzwerk verfügbaren Objekte sind statisch. Es gibt eine Vielzahl dynamisch erstellter CGI-Seiten, Besucherzähler und verschlüsselter SSL-Inhaltsdokumente. Derartige Objekte werden nicht im Cache gespeichert, da sie sich bei jedem Zugriff ändern.
   </para>
   <para>
    Es bleibt die Frage, wie lange alle anderen im Cache gespeicherten Objekte dort verbleiben sollten. Um dies zu ermitteln, wird allen Objekten im Cache einer von mehreren möglichen Zuständen zugewiesen. Web- und Proxyserver ermitteln den Status eines Objekts, indem sie Header zu diesen Objekten hinzufügen, beispielsweise <quote>Zuletzt geändert</quote> oder <quote>Läuft ab</quote>, und das entsprechende Datum. Andere Header, die angeben, dass Objekte nicht im Cache gespeichert werden dürfen, werden ebenfalls verwendet.
   </para>
   <para>
    Objekte im Cache werden normalerweise aufgrund mangelnden Festplattenspeichers ersetzt. Dazu werden Algorithmen, wie beispielsweise LRU (last recently used), verwendet. Dies bedeutet im Wesentlichen, dass der Proxy die Objekte löscht, die am längsten nicht mehr angefordert wurden.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.sysneeds">
  <title>Systemanforderungen</title><indexterm> <primary>Squid</primary> <secondary>Systemanforderungen</secondary> </indexterm>

  <para>
   Die wichtigste Aufgabe besteht darin, die maximale Netzwerklast zu ermitteln, die das System tragen muss. Daher muss besonders auf die Belastungsspitzen geachtet werden, die mehr als das Vierfache des Tagesdurchschnitts betragen können. Im Zweifelsfall ist es vorzuziehen, die Systemanforderungen zu hoch einzuschätzen, da es zu erheblichen Einbußen in der Qualität des Diensts führen kann, wenn Squid an der Grenze seiner Leistungsfähigkeit arbeitet. Die folgenden Abschnitte widmen sich den einzelnen Systemfaktoren in der Reihenfolge ihrer Wichtigkeit.
  </para>

  <sect2 id="sec.squid.sysneeds.disk">
   <title>Festplatten</title>
   <para>
    Da Geschwindigkeit beim Caching eine wichtige Rolle spielt, muss diesem Faktor besondere Aufmerksamkeit gewidmet werden. Bei Festplatten wird dieser Parameter als <emphasis>random seek time</emphasis> (Zufallszugriffszeit, gemessen in Millisekunden) beschrieben. Da die Datenblöcke, die Squid von der Festplatte liest oder auf die Festplatte schreibt, eher klein zu sein scheinen, ist die Zugriffszeit der Festplatte entscheidender als ihr Datendurchsatz. Für die Zwecke von Proxies sind Festplatten mit hoher Rotationsgeschwindigkeit wohl die bessere Wahl, da bei diesen der Lese-Schreib-Kopf schneller an die gewünschte Stelle gebracht werden kann. Eine Möglichkeit zur Systembeschleunigung besteht in der gleichzeitigen Verwendung mehrerer Festplatten oder im Einsatz von Striping-RAID-Arrays.
   </para>
  </sect2>

  <sect2>
   <title>Größe des Festplatten-Cache</title><indexterm> <primary>Squid</primary> <secondary>Caches</secondary> <tertiary>Größe</tertiary> </indexterm>
   <para>
    Bei einem kleinen Cache ist die Wahrscheinlichkeit eines HIT (Auffinden des angeforderten Objekts, das sich bereits dort befindet) gering, da der Cache schnell voll ist und die weniger häufig angeforderten Objekte durch neuere ersetzt werden. Wenn beispielsweise 1 GB für den Cache zur Verfügung steht und die Benutzer nur Datenverkehr im Umfang von 10 MB pro Tag in Anspruch nehmen, dauert es mehrere hundert Tage, um den Cache zu füllen.
   </para>
   <para>
    Die einfachste Methode zur Ermittlung der benötigten Cache-Größe geht von der maximalen Übertragungsrate der Verbindung aus. Bei einer Verbindung mit 1 Mbit/s beträgt die maximale Übertragungsrate 125 KB/s. Wenn dieser Datenverkehr vollständig im Cache gespeichert wird, ergeben sich in einer Stunde 450 MB. Dadurch würden bei 8 Arbeitsstunden 3,6 GB an einem einzigen Tag erreicht. Da normalerweise nicht das gesamte Volumen der Verbindung ausgeschöpft wird, kann angenommen werden, dass das Gesamtdatenvolumen, das auf den Cache zukommt, bei etwa 2 GB liegt. Daher sind bei diesem Beispiel 2 GB Festplattenspeicher erforderlich, damit Squid die durchsuchten Daten eines Tags im Cache speichern kann.
   </para>
  </sect2>

  <sect2 id="sec.squid.ram">
   <title>RAM</title><indexterm> <primary>Squid</primary> <secondary>RAM und</secondary> </indexterm>
   <para>
    Der von Squid benötigte Arbeitsspeicher (RAM) steht in direktem Verhältnis zur Anzahl der Objekte im Cache. Außerdem speichert Squid Cache-Objekt-Bezüge und häufig angeforderte Objekte im Hauptspeicher, um das Abrufen dieser Daten zu beschleunigen. RAM ist wesentlich schneller als eine Festplatte.
   </para>
   <para>
    Außerdem gibt es andere Daten, die Squid im Arbeitsspeicher benötigt, beispielsweise eine Tabelle mit allen IP-Adressen, einen exakten Domänennamen-Cache, die am häufigsten angeforderten Objekte, Zugriffssteuerungslisten, Puffer usw.
   </para>
   <para>
    Es ist sehr wichtig, dass genügend Arbeitsspeicher für den Squid-Vorgang zur Verfügung steht, da die Systemleistung erheblich eingeschränkt ist, wenn ein Wechsel auf die Festplatte erforderlich ist. Das Werkzeug cachemgr.cgi kan für die Arbeitsspeicherverwaltung des Cache verwendet werden. Dieses Werkzeug wird in <xref linkend="sec.squid.cachemgr"/> behandelt.

   </para>
  </sect2>

  <sect2 id="sec.squid.cpu">
   <title>Prozessor</title><indexterm> <primary>Squid</primary> <secondary>CPU und</secondary> </indexterm>
   <para>
    Die Verwendung von Squid bringt keine intensive CPU-Auslastung mit sich. Die Prozessorlast wird nur erhöht, während die Inhalte des Cache geladen oder überprüft werden. Durch die Verwendung eines Computers mit mehreren Prozessoren wird die Systemleistung nicht erhöht. Um die Effizienz zu steigern, sollten vielmehr schnellere Festplatten oder ein größerer Arbeitsspeicher verwendet werden.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.start">
  <title>Starten von Squid</title><indexterm> <primary>Squid</primary> <secondary>starten</secondary></indexterm>

  <para>
   Installieren Sie das <systemitem>squid</systemitem>-Paket, falls es nicht bereits installiert ist. <systemitem>squid</systemitem> gehört nicht mehr zum standardmäßigen Installationsumfang von SUSE Linux Enterprise Server.
  </para>

  <para>
   Squid ist in SUSE® Linux Enterprise Server bereits vorkonfiguriert. Sie können das Programm unmittelbar nach der Installation starten. Um einen reibungslosen Start zu gewährleisten, sollte das Netzwerk so konfiguriert werden, dass mindestens ein Namenserver und das Internet erreicht werden können. Es können Probleme auftreten, wenn eine Einwahlverbindung zusammen mit einer dynamischen DNS-Konfiguration verwendet wird. In diesem Fall sollte zumindest der Namenserver eingegeben werden, da Squid nicht startet, wenn kein DNS-Server in <filename>/etc/resolv.conf</filename> gefunden wird.
  </para><indexterm> <primary>Konfigurationsdateien</primary> <secondary>resolv.conf</secondary> </indexterm>

  <sect2>
   <title>Befehle zum Starten und Stoppen von Squid</title><indexterm> <primary>Squid</primary> <secondary>Verzeichnisse</secondary> </indexterm> <indexterm> <primary>Skripten</primary> <secondary>init.d</secondary> <tertiary>Squid</tertiary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Berechtigungen</secondary> </indexterm> <indexterm> <primary>Konfigurationsdateien</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    Geben Sie zum Starten von Squid als <systemitem class="username">root</systemitem> in der Kommandozeile den Befehl <command>rcsquid <option>start</option></command> ein. Beim ersten Start muss zunächst die Verzeichnisstruktur des Cache in <filename>/var/cache/squid</filename> definiert werden. Dies geschieht automatisch über das Startskript <filename>/etc/init.d/squid</filename> und kann einige Sekunden oder sogar Minuten in Anspruch nehmen. Wenn rechts in grüner Schrift <literal>done</literal> angezeigt wird, wurde Squid erfolgreich geladen. Um die Funktionsfähigkeit von Squid im lokalen System zu testen, geben Sie <option>localhost</option> als Proxy und <option>3128</option> als Port im Browser an.
   </para>
   <para>
    Um Benutzern aus dem lokalen System und anderen Systemen den Zugriff auf Squid und das Internet zu ermöglichen, müssen Sie den Eintrag in den Konfigurationsdateien <filename>/etc/squid/squid.conf</filename> von <option>http_access deny all</option> in <option>http_access allow all</option> ändern. Beachten Sie dabei jedoch, dass dadurch jedem der vollständige Zugriff auf Squid ermöglicht wird. Daher sollten Sie ACLs definieren, die den Zugriff auf den Proxy steuern. Weitere Informationen hierzu finden Sie in <xref linkend="sec.squid.acl"/>.
   </para><indexterm> <primary>Squid</primary> <secondary>Stoppen</secondary> </indexterm>
   <para>
    Nach der Bearbeitung der Konfigurationsdatei <filename>/etc/squid/squid.conf</filename> muss Squid die Konfigurationsdatei erneut laden. Verwenden Sie hierfür <command>rcsquid <option>reload</option></command>. Alternativ können Sie mit <command>rcsquid <option>restart</option></command> einen vollständigen Neustart von Squid durchführen.
   </para>
   <para>
    Mit dem Befehl <command>rcsquid</command><option>status</option> können Sie überprüfen, ob der Proxy ausgeführt wird. Mit dem Befehl <command>rcsquid</command><option>stop</option> wird Squid heruntergefahren. Dieser Vorgang kann einige Zeit in Anspruch nehmen, da Squid bis zu einer halben Minute (Option <option>shutdown_lifetime</option> in <filename>/etc/squid/squid.conf</filename>) wartet, bevor es die Verbindungen zu den Clients trennt und seine Daten auf die Festplatte schreibt.
   </para>
   <warning>
    <title>Beenden von Squid</title>
    <para>
     <indexterm> <primary>Squid</primary> <secondary>Caches</secondary> <tertiary>Beschädigt</tertiary> </indexterm> Das Beenden von Squid mit <command>kill</command> oder <command>killall</command> kann den Cache beschädigen. Damit Squid neu gestartet werden kann, muss ein beschädigter Cache gelöscht werden.
    </para>
   </warning><indexterm> <primary>Squid</primary> <secondary>Protokolldateien</secondary> </indexterm> <indexterm> <primary>Protokolldateien</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Fehlersuche</secondary> </indexterm>
   <para>
    Wenn Squid nach kurzer Zeit nicht mehr funktioniert, obwohl das Programm erfolgreich gestartet wurde, überprüfen Sie, ob ein fehlerhafter Namenservereintrag vorliegt oder ob die Datei <filename>/etc/resolv.conf</filename> fehlt. Squid protokolliert die Ursache eines Startfehlers in der Datei <filename>/var/log/squid/cache.log</filename>. Wenn Squid beim Booten des Systems automatisch geladen werden soll, müssen Sie Squid mithilfe des YaST-Runlevel-Editors für die gewünschten Runlevels aktivieren. Weitere Informationen hierzu finden Sie unter <xref linkend="sec.boot.runlevel.edit"/>.
   </para><indexterm> <primary>Squid</primary> <secondary>Deinstallieren</secondary> </indexterm>
   <para>
    Durch eine Deinstallation von Squid werden weder die Cache-Hierarchie noch die Protokolldateien entfernt. Um diese zu entfernen, müssen Sie das Verzeichnis <filename>/var/cache/squid</filename> manuell löschen.
   </para>
  </sect2>

  <sect2>
   <title>Lokaler DNS-Server</title><indexterm> <primary>DNS</primary> <secondary>Squid und</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>DNS</secondary> </indexterm> <indexterm> <primary>Konfigurationsdateien</primary> <secondary>named.conf</secondary> </indexterm>
   <para>
    Die Einrichtung eines lokalen DNS-Servers ist sinnvoll, selbst wenn er nicht seine eigene Domäne verwaltet. Er fungiert dann einfach als Nur-Cache-Namenserver und kann außerdem DNS-Anforderungen über die Root-Namenserver auflösen, ohne dass irgendeine spezielle Konfiguration erforderlich ist (siehe <xref linkend="sec.dns.bind"/>). Wie dies durchgeführt werden kann, hängt davon ab, ob Sie bei der Konfiguration der Internetverbindung dynamisches DNS auswählen.
   </para>
   <variablelist>
    <varlistentry>
     <term>Dynamisches DNS</term>
     <listitem>
      <para>
       Normalerweise wird bei dynamischem DNS der DNS-Server während des Aufbaus der Internetverbindung vom Anbieter festgelegt und die lokale Datei <filename>/etc/resolv.conf</filename> wird automatisch angepasst. Dieses Verhalten wird in der Datei <filename>/etc/sysconfig/network/config</filename> mit der sysconfig-Variablen <systemitem class="constant">NETCONFIG_DNS_POLICY</systemitem> gesteuert. Legen Sie <systemitem class="constant">NETCONFIG_DNS_POLICY</systemitem> mit dem YaST-sysconfig-Editor auf <systemitem class="constant">""</systemitem> fest (weitere Informationen hierzu finden Sie unter <xref linkend="sec.boot.sysconfig.edit"/>). Geben Sie anschließend den lokalen DNS-Server in der Datei <filename>/etc/resolv.conf</filename> ein. Verwenden Sie die IP-Adresse <systemitem class="ipaddress">127.0.0.1</systemitem> für <systemitem class="domainname">localhost</systemitem>. Auf diese Weise kann Squid immer den lokalen Namenserver finden, wenn er gestartet wird.
      </para>
      
      <para>
       Um den Zugriff auf den Namenserver des Anbieters zu ermöglichen, geben Sie ihn zusammen mit seiner IP-Adresse in die Konfigurationsdatei <filename>/etc/named.conf</filename> unter <systemitem>forwarders</systemitem> ein. Mit dynamischem DNS kann dies automatisch während des Verbindungsaufbaus erreicht werden, indem die sysconfig-Variable <systemitem class="constant">NETCONFIG_DNS_POLICY</systemitem> auf <systemitem class="constant">auto</systemitem> festgelegt wird.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Statisches DNS</term>
     <listitem>
      <para>
       Beim statischen DNS finden beim Verbindunsgsaufbau keine automatischen DNS-Anpassungen statt, sodass auch keine sysconfig-Variablen geändert werden müssen. Sie müssen jedoch den lokalen DNS-Server in die Datei <filename>/etc/resolv.conf</filename> eingeben, wie oben beschrieben. Außerdem muss der statische Namenserver des Anbieters zusammen mit seiner IP-Adresse manuell in die Datei <filename>/etc/named.conf</filename> unter <systemitem>Forwarders</systemitem> eingegeben werden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>DNS und Firewall</title>
    <para>
     Wenn eine Firewall ausgeführt wird, müssen Sie sicherstellen, dass DNS-Anforderungen durchgelassen werden.
    </para>
   </tip>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.configfile">
  <title>Die Konfigurationsdatei /etc/squid/squid.conf</title><indexterm> <primary>Squid</primary> <secondary>Konfigurieren</secondary> </indexterm> <indexterm> <primary>Konfigurieren</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>Konfigurationsdateien</primary> <secondary>squid.conf</secondary> </indexterm>

  <para>
   Alle Einstellungen für den Squid-Proxyserver werden in der Datei <filename>/etc/squid/squid.conf</filename> vorgenommen. Beim ersten Start von Squid sind keine Änderungen in dieser Datei erforderlich, externen Clients wird jedoch ursprünglich der Zugriff verweigert. Der Proxy ist für <systemitem class="domainname">localhost</systemitem> verfügbar. Der Standardport ist <option>3128</option>. Die vorinstallierte Konfigurationsdatei <filename>/etc/squid/squid.conf </filename> bietet detaillierte Informationen zu den Optionen sowie zahlreiche Beispiele. Fast alle Einträge beginnen mit <literal>#</literal> (kommentierte Zeilen) und die relevanten Spezifikationen befinden sich am Ende der Zeile. Die angegebenen Werte korrelieren fast immer mit den Standardwerten, sodass das Entfernen der Kommentarzeichen ohne Ändern der Parameter in den meisten Fällen kaum Auswirkungen hat. Lassen Sie die Beispiele nach Möglichkeit unverändert und geben Sie die Optionen zusammen mit den geänderten Parametern in der Zeile darunter ein. Auf diese Weise können die Standardwerte problemlos wiederhergestellt und mit den Änderungen verglichen werden.
  </para>

  <tip>
   <title>Anpassen der Konfigurationsdatei nach einer Aktualisierung</title>
   <para>
    Wenn Sie eine Aktualisierung einer früheren Squid-Version durchgeführt haben, sollten Sie die neue Datei <filename>/etc/squid/squid.conf</filename> bearbeiten und nur die in der vorherigen Datei vorgenommenen Änderungen übernehmen. Wenn Sie versuchen, die alte Datei <filename>squid.conf </filename> zu verwenden, besteht das Risiko, dass die Konfiguration nicht mehr funktioniert, da Optionen manchmal bearbeitet und neue Änderungen hinzugefügt werden.
   </para>
  </tip>

  <sect2>
   <title>Allgemeine Konfigurationsoptionen (Auswahl)</title>
   <variablelist>
    <varlistentry>
     <term>http_port 3128</term>
     <listitem>
      <para>
       Dies ist der Port, den Squid auf Client-Anforderungen überwacht. Der Standardport ist <option>3128</option>, <option>8080</option> wird jedoch ebenfalls häufig verwendet. Sie können auch mehrere Portnummern durch Leerzeichen getrennt eingeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      cache_peer <replaceable>hostname</replaceable><replaceable>type</replaceable><replaceable>proxy-port</replaceable><replaceable>icp-port</replaceable>
     </term>
     <listitem>
      <para>
       Geben Sie hier einen übergeordneten Proxy ein, beispielsweise wenn Sie den Proxy Ihres ISP verwenden möchten. Geben Sie als <replaceable>hostname</replaceable> den Namen oder die IP-Adresse des zu verwendenden Proxy und als <replaceable>type</replaceable> <option>parent</option> ein. Geben Sie als  <replaceable>proxy-port </replaceable> die Portnummer ein, die ebenfalls vom Operator des Parent für die Verwendung im Browser angegeben wurde, in der Regel  <option>8080</option>). Setzen Sie <replaceable>icp-port</replaceable> auf <option>7</option> oder <option>0</option>, wenn der ICP-Port des übergeordneten Proxy nicht bekannt ist und seine Verwendung für den Anbieter nicht wichtig ist. Außerdem können <option>default</option> und <option>no-query</option> nach den Portnummern angegeben werden, um die Verwendung des ICP-Protokolls zu verhindern. Squid verhält sich dann in Bezug auf den Proxy des Anbieters wie ein normaler Browser.
       
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_mem 8 MB</term>
     <listitem>
      <para>
       Dieser Eintrag legt fest, wie viel Arbeitsspeicher Squid für besonders beliebte Antworten verwenden kann. Der Standardwert ist <option>8 MB</option>. Dieser Wert gibt nicht die Arbeitsspeichernutzung von Squid an und kann überschritten werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_dir ufs /var/cache/squid/ 100 16 256</term>
     <listitem>
      <para>
       Der Eintrag <emphasis>cache_dir</emphasis> legt das Verzeichnis fest, in dem alle Objekte auf dem Datenträger gespeichert werden. Die Zahlen am Ende geben den maximal zu verwendenden Festplattenspeicher in BM und die Anzahl der Verzeichnisse auf der ersten und zweiten Ebene an. Der Parameter <option>ufs</option> sollte nicht geändert werden. Standardmäßig werden 100 MB Speicherplatz im Verzeichnis <filename>/var/cache/squid</filename> belegt und 16 Unterverzeichnisse erstellt, die wiederum jeweils 256 Unterverzeichnisse aufweisen. Achten Sie bei der Angabe des zu verwendenden Speicherplatzes darauf, genügend Reserve einzuplanen. Werte von mindestens 50 bis maximal 80 % des verfügbaren Speicherplatzes erscheinen hier am sinnvollsten. Die letzten beiden Werte für die Verzeichnisse sollten nur nach reiflicher Überlegung erhöht werden, da zu viele Verzeichnisse ebenfalls zu Leistungsproblemen führen können. Wenn der Cache von mehreren Datenträgern gemeinsam verwendet wird, müssen Sie mehrere <emphasis>cache_dir</emphasis>-Zeilen eingeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_access_log /var/log/squid/access.log</term>
     <term>cache_log /var/log/squid/cache.log</term>
     <term>cache_store_log /var/log/squid/store.log</term>
     <listitem>
      <para>
       <indexterm> <primary>Squid</primary> <secondary>Protokolldateien</secondary> </indexterm> <indexterm> <primary>Protokolldateien</primary> <secondary>Squid</secondary> </indexterm> Diese drei Einträge geben an, in welchen Pfad Squid alle Aktionen protokolliert. Normalerweise werden hier keine Änderungen vorgenommen. Bei hoher Auslastung von Squid kann es sinnvoll sein, Cache und Protokolldateien auf mehrere Datenträger zu verteilen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>emulate_httpd_log off</term>
     <listitem>
      <para>
       Wenn der Eintrag auf <emphasis>on</emphasis> gesetzt ist, erhalten Sie lesbare Protokolldateien. Einige Evaluierungsprogramme können solche Dateien jedoch nicht interpretieren.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>client_netmask 255.255.255.255</term>
     <listitem>
      <para>
       Mit diesem Eintrag werden die IP-Adressen von Clients in den Protokolldateien maskiert. Die letzte Ziffer der IP-Adresse wird auf 0 gesetzt, wenn Sie hier <systemitem class="netmask">255.255.255.0</systemitem> eingeben. Auf diese Weise können Sie den Datenschutz für die Clients gewährleisten.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ftp_user Squid@</term>
     <listitem>
      <para>
       Mit dieser Option wird das Passwort festgelegt, das Squid für die anonyme FTP-Anmeldung verwenden soll. Es kann sinnvoll sein, hier eine gültige E-Mail-Adresse anzugeben, da einige FTP-Server die Adressen auf Gültigkeit prüfen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cache_mgr webmaster</term>
     <listitem>
      <para>
       Eine E-Mail-Adresse, an die Squid eine Meldung sendet, wenn es plötzlich abstürzt. Der Standardwert ist <emphasis>webmaster</emphasis>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>logfile_rotate 0</term>
     <listitem>
      <para>
       Wenn Sie <command>squid</command> <option>-k rotate</option> ausführen, kann <command>Squid</command> ein Rotationssystem für gesicherte Protokolldateien einführen. Bei diesem Prozess werden die Dateien nummeriert und nach dem Erreichen des angegebenen Werts wird die älteste Datei überschrieben. Der Standardwert ist <option>0</option>, da das Archivieren und Löschen von Protokolldateien in SUSE Linux Enterprise Server von einem in der Konfigurationsdatei  <filename>/etc/logrotate/squid</filename> festgelegten Cronjob durchgeführt wird.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>append_domain &lt;Domaene&gt;</term>
     <listitem>
      <para>
       Mit <emphasis>append_domain</emphasis> können Sie angeben, welche Domäne automatisch angefügt wird, wenn keine angegeben wurde. Normalerweise wird hier die eigene Domäne angegeben, sodass bei der Eingabe von <emphasis>www</emphasis> im Browser ein Zugriff auf Ihren eigenen Webserver erfolgt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>forwarded_for on</term>
     <listitem>
      <para>
       Wenn Sie den Eintrag auf <emphasis>off</emphasis> setzen, entfernt Squid die IP-Adresse und den Systemnamen des Client aus den HTTP-Anforderungen. Anderenfalls wird eine Zeile zum Header hinzugefügt, beispielsweise:
      </para>
<screen>X-Forwarded-For: 192.168.0.1</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>negative_ttl 5 minutes; negative_dns_ttl 5 minutes</term>
     <listitem>
      <para>
       Die hier angegebenen Werte müssen in der Regel nicht geändert werden. Bei einer Einwahlverbindung kann das Internet jedoch zeitweise nicht verfügbar sein. Squid protokolliert die nicht erfolgreichen Anforderungen und lässt dann keine weiteren zu, auch wenn die Internetverbindung zwischenzeitlich wieder hergestellt wurde. In solchen Fällen sollten Sie <emphasis>minutes</emphasis> durch <emphasis>seconds</emphasis> ersetzen. Danach sollte nach dem Klicken auf <emphasis>Neu laden</emphasis> im Browser der Einwahlvorgang nach wenigen Sekunden wieder aktiviert werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>never_direct allow <replaceable>ACL-Name</replaceable>
     </term>
     <listitem>
      <para>
       Um zu verhindern, dass Squid Anforderungen direkt aus dem Internet entgegennimmt, müssen Sie mit dem oben stehenden Befehl die Verbindung mit einem anderen Proxy erzwingen. Dieser muss zuvor unter <emphasis>cache_peer</emphasis> eingegeben worden sein. Wenn als <replaceable>acl_name</replaceable> <option>all</option> angegeben wird, werden alle Anforderungen zwangsweise direkt an den übergeordneten Proxy (<emphasis>parent</emphasis>) weitergeleitet. Dies kann beispielsweise dann erforderlich sein, wenn Sie einen Anbieter verwenden, der die Verwendung der eigenen Proxies strikt vorschreibt oder der durch seine Firewall direkten Internetzugriff verweigert.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="sec.squid.acl">
   <title>Optionen für die Zugriffssteuerung</title><indexterm> <primary>Squid</primary> <secondary>ACLs</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Berechtigungen</secondary> </indexterm>
   <para>
    Squid bietet ein detailliertes System für die Steuerung des Zugriffs auf den Proxy. Durch die Implementierung von ACLs kann es problemlos und umfassend konfiguriert werden. Dazu gehören Listen mit Regeln, die nacheinander verarbeitet werden. Die ACLs müssen zuerst definiert werden, bevor sie verwendet werden können. Einige Standard-ACLs, wie beispielsweise <emphasis>all</emphasis> und <emphasis>localhost</emphasis>, sind bereits vorhanden. Die bloße Definition einer ACL bedeutet jedoch noch nicht, dass sie tatsächlich angewendet wird. Dies geschieht nur in Verbindung mit <emphasis>http_access</emphasis>-Regeln.
   </para>
   <variablelist>
    <varlistentry>
     <term>acl &lt;ACL-Name&gt; &lt;Typ&gt; &lt;Daten&gt;</term>
     <listitem>
      <para>
       <indexterm> <primary>Konfigurationsdateien</primary><secondary>squid.conf</secondary> </indexterm>Für die Definition eines ACL sind mindestens drei Spezifikationen erforderlich. Der Name <emphasis>&lt;ACL-Name&gt;</emphasis> kann frei gewählt werden. Als <emphasis>&lt;Typ&gt;</emphasis> können Sie aus einer Vielzahl verschiedener Optionen wählen, die Sie im Abschnitt <emphasis>ACCESS CONTROLS</emphasis> in der Datei <filename>/etc/squid/squid.conf</filename> finden. Die Spezifikation für <emphasis>&lt;Daten&gt;</emphasis> hängt vom einzelnen ACL-Typ ab und kann auch aus einer Datei gelesen werden, beispielsweise über Hostnamen, IP-Adressen oder URLs. Im Folgenden finden Sie einige einfache Beispiele:
      </para>
<screen>
acl mysurfers srcdomain .my-domain.com
acl teachers src 192.168.1.0/255.255.255.0
acl students src 192.168.7.0-192.168.9.0/255.255.255.0
acl lunch time MTWHF 12:00-15:00
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>http_access allow &lt;ACL-Name&gt;</term>
     <listitem>
      <para>
       <emphasis>http_access</emphasis> legt fest, wer den Proxy verwenden kann und wer auf welche Seiten im Internet zugreifen kann. Hierfür müssen ACLs angegeben werden. <emphasis>localhost</emphasis> und <emphasis>all</emphasis> wurden bereits oben definiert. Diese Optionen können den Zugriff über <emphasis>deny</emphasis> oder <emphasis>allow</emphasis> verweigern oder zulassen. Es können Listen mit einer beliebigen Anzahl von <emphasis>http_access</emphasis>- Einträgen erstellt und von oben nach unten verarbeitet werden. Je nachdem, was zuerst vorkommt, wird der Zugriff auf die betreffende URL gestattet oder verweigert. Der letzte Eintrag muss immer <emphasis>http_access deny all</emphasis> sein. Im folgenden Beispiel hat <emphasis>localhost</emphasis> freien Zugriff auf alle Elemente, während allen anderen Hosts der Zugriff vollständig verweigert wird.
      </para>
<screen>
http_access allow localhost
http_access deny all
</screen>
      <para>
       In einem anderen Beispiel, bei dem diese Regeln verwendet werden, hat die Gruppe <systemitem class="groupname">teachers</systemitem> immer Zugriff auf das Internet. Die Gruppe <systemitem class="groupname">students</systemitem> erhält nur montags bis freitags während der Mittagspause Zugriff.
      </para>
<screen>
http_access deny localhost
http_access allow teachers
http_access allow students lunch time
http_access deny all
</screen>
      <para>
       Die Liste mit den <emphasis>http_access</emphasis>-Einträgen sollte um der besseren Lesbarkeit willen nur an der angegebenen Position in der Datei <filename>/etc/squid/squid.conf</filename> eingegeben werden. Also zwischen dem Text
      </para>
<screen>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR
# CLIENTS
</screen>
      <para>
       und dem letzten
      </para>
<screen>http_access deny all</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>redirect_program /usr/bin/squidGuard</term>
     <listitem>
      <para>
       Mit dieser Option können Sie eine Umleitungsfunktion, wie beispielsweise squidGuard, angeben, die das Blockieren unerwünschter URLs ermöglicht. Der Internetzugang kann mithilfe der Proxy-Authentifizierung und der entsprechenden ACLs individuell für verschiedene Benutzergruppen gesteuert werden. squidGuard ist ein gesondertes Paket, das installiert und konfiguriert werden kann.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>auth_param basic program /usr/sbin/pam_auth</term>
     <listitem>
      <para>
       Wenn die Benutzer auf dem Proxy authentifiziert werden müssen, geben Sie ein entsprechendes Programm an, beispielsweise pam_auth. Beim ersten Zugriff auf pam_auth wird dem Benutzer ein Anmeldefenster angezeigt, in das er den Benutzernamen und das Passwort eingeben muss. Außerdem ist noch immer eine ACL erforderlich, sodass nur Clients mit einer gültigen Anmeldung das Internet benutzen können.
      </para>
<screen>
acl password proxy_auth REQUIRED

http_access allow password
http_access deny all
</screen>
      <para>
       Das <emphasis>REQUIRED</emphasis> nach <emphasis>proxy_auth</emphasis> kann durch eine Liste der zulässigen Benutzernamen oder durch den Pfad zu einer solchen Liste ersetzt werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ident_lookup_access allow &lt;ACL-Name&gt;</term>
     <listitem>
      <para>
       Lassen Sie damit eine ident-Anforderung für alle ACL-definierten Clients ausführen, um die Identität der einzelnen Benutzer zu ermitteln. Wenn Sie <emphasis>all</emphasis> auf <emphasis>&lt;ACL-Name&gt;</emphasis> anwenden, gilt dies für alle Clients. Außerdem muss ein ident-Dämon auf allen Clients ausgeführt werden. Bei Linux installieren Sie zu diesem Zweck das Paket „pidentd“. Für Microsoft Windows steht kostenlose Software zum Herunterladen aus dem Internet zur Verfügung. Um sicherzustellen, dass nur Clients mit einem erfolgreichen ident-Lookup zulässig sind, definieren Sie hier eine entsprechende ACL:
      </para>
<screen>
acl identhosts ident REQUIRED

http_access allow identhosts
http_access deny all
</screen>
      <para>
       Ersetzen Sie auch hier <emphasis>REQUIRED</emphasis> durch eine Liste der zulässigen Benutzernamen. Durch die Verwendung von <emphasis>ident</emphasis> kann die Zugriffszeit erheblich reduziert werden, da die ident-Lookups für jede Anforderung wiederholt werden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.proxyconfigtrans">
  <title>Konfigurieren eines transparenten Proxy</title><indexterm> <primary>Proxys</primary> <secondary>Transparent</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Transparent Proxys</secondary> </indexterm>

  <para>
   In der Regel arbeiten Sie folgendermaßen mit Proxyservern: der Web-Browser sendet Anforderungen an einen bestimmten Port im Proxyserver und der Proxy liefert die angeforderten Objekte unabhängig davon, ob sie sich im Cache befinden oder nicht. Bei der Arbeit in einem Netzwerk können verschiedene Situationen entstehen:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Aus Sicherheitsgründen sollten alle Clients einen Proxy für den Zugriff auf das Internet verwenden.
    </para>
   </listitem>
   <listitem>
    <para>
     Alle Clients müssen einen Proxy verwenden, unabhängig davon, ob sie sich dessen bewusst sind.
    </para>
   </listitem>
   <listitem>
    <para>
     Der Proxy in einem Netzwerk wird verschoben, die vorhandenen Clients sollten jedoch ihre alte Konfiguration beibehalten.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   In all diesen Fällen kann ein transparenter Proxy verwendet werden. Das Prinzip ist einfach: Der Proxy fängt die Anforderungen des Webbrowsers ab und beantwortet sie. Der Webbrowser erhält die angeforderten Seiten, ohne zu wissen, woher sie kommen. Wie der Name schon andeutet, verläuft der gesamte Prozess transparent.
  </para>

  <sect2>
   <title>Konfigurationsoptionen in /etc/squid/squid.conf</title><indexterm> <primary>Konfigurationsdateien</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    Um squid mitzuteilen, dass es als ein transparenter Proxy fungieren soll, verwenden Sie die Option <systemitem>transparent</systemitem> am Tag <systemitem>http_port</systemitem> in der Hauptkonfigurationsdatei <filename>/etc/squid/squid.conf</filename>. Nach dem Neustart von squid muss nur noch die Firewall umkonfiguriert werden, damit sie den HTTP-Port an den Port umleitet, der in <systemitem>http_port</systemitem> angegeben ist. In der folgenden squid-Konfigurationszeile wäre dies der Port 3128.
   </para>
<screen>http_port 3128 transparent</screen>
  </sect2>

  <sect2>
   <title>Firewall-Konfiguration mit SuSEfirewall2</title><indexterm> <primary>Squid</primary> <secondary>Firewalls und</secondary> </indexterm> <indexterm> <primary>Firewalls</primary> <secondary>Squid und</secondary> </indexterm>
   <para>
    Leiten Sie nun alle eingehenden Anforderungen über die Firewall mithilfe einer Port-Weiterleitungsregel an den Squid-Port um. Verwenden Sie dazu das beigefügte Werkzeug SuSEFirewall2 (in <xref linkend="sec.fire.SuSE.yast"/> beschrieben). Die Konfigurationsdatei dieses Programms finden Sie in <filename>/etc/sysconfig/SuSEfirewall2</filename>. Die Konfigurationsdatei besteht aus gut dokumentierten Einträgen. Um einen transparenten Proxy festzulegen, müssen Sie mehrere Firewall-Optionen konfigurieren:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      Gerät zeigt auf das Internet: <systemitem>FW_DEV_EXT</systemitem>=„eth1“
     </para>
    </listitem>
    <listitem>
     <para>
      Gerät zeigt auf das Netzwerk: <systemitem>FW_DEV_INT</systemitem>=„eth0“
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <indexterm> <primary>Konfigurationsdateien</primary><secondary>Dienste</secondary></indexterm> Definieren Sie Ports und Dienste (siehe <filename>/etc/services</filename>) auf der Firewall, auf die ein Zugriff von nicht verbürgten (externen) Netzwerken, wie beispielsweise dem Internet, erfolgt. In diesem Beispiel werden nur Webdienste für den Außenbereich angeboten:
   </para>
<screen>
FW_SERVICES_EXT_TCP="www"
</screen>
   <para>
    Definieren Sie Ports und Dienste (siehe <filename>/etc/services</filename>) auf der Firewall, auf die vom sicheren (internen) Netzwerk aus zugegriffen wird (sowohl über TCP als auch über UDP):
   </para>
<screen>
FW_SERVICES_INT_TCP="domain www 3128"
FW_SERVICES_INT_UDP="domain"
</screen>
   <para>
    Dies ermöglicht den Zugriff auf Webdienste und Squid (Standardport: <option>3128</option>). Der Dienst <quote>domain</quote> steht für DNS (Domain Name Service, Domänennamen-Dienst). Dieser Dienst wird häufig verwendet. Andernfalls nehmen Sie einfach die oben stehenden Einträge heraus und setzten Sie die folgende Option auf <literal>no</literal>:
   </para>
<screen>
FW_SERVICE_DNS="yes"
</screen>
   <para>
    Die wichtigste Option ist Option Nummer <option>15</option>:
   </para>
   <example id="dat.fw.opt15">
    <title>Firewall-Konfiguration: Option 15</title>
<screen># 15.)
# Which accesses to services should be redirected to a local port on
# the firewall machine?
#
# This option can be used to force all internal users to surf via
# your squid proxy, or transparently redirect incoming webtraffic to
# a secure webserver.
#
# Format: 
# list of &lt;source network&gt;[,&lt;destination network&gt;,&lt;protocol&gt;[,dport[:lport]]
# Where protocol is either tcp or udp. dport is the original
# destination port and lport the port on the local machine to
# redirect the traffic to
#
# An exclamation mark in front of source or destination network
# means everything EXCEPT the specified network
#
# Example: "10.0.0.0/8,0/0,tcp,80,3128 0/0,172.20.1.1,tcp,80,8080"
</screen>
   </example>
   <para>
    Die oben angegebenen Kommentare geben die zu verwendende Syntax an. Geben Sie zuerst die IP-Adresse und die Netzmaske der internen Netzwerke ein, die auf die Proxy-Firewall zugreifen. Geben Sie als Zweites die IP-Adresse und die Netzmaske ein, an die diese Clients ihre Anforderungen senden. Geben Sie bei Webbrowsern die Netzwerke <systemitem>0/0</systemitem> an. Dieser Platzhalter bedeutet „überallhin“.<quote/> Geben Sie anschließend den ursprünglichen Port ein, an den diese Anforderungen gesendet werden, und schließlich den Port, an den alle diese Anforderungen umgeleitet werden. Da Squid andere Protokolle als HTTP unterstützt, müssen Anforderungen von anderen Ports an den Proxy umgeleitet werden, beispielsweise FTP (Port 21), HTTPS oder SSL (Port 443). In diesem Beispiel werden Webdienste (Port <option>80</option>) an den Proxy-Port (Port <option>3128</option>) umgeleitet. Wenn mehrere Netzwerke bzw. Dienste hinzugefügt werden sollen, müssen diese im entsprechenden Eintrag durch ein Leerzeichen getrennt sein.
   </para>
<screen>
FW_REDIRECT="192.168.0.0/16,0/0,tcp,80,3128"
</screen>
   <para>
    Um die Firewall mit der neuen Konfiguration zu starten, müssen Sie einen Eintrag in der Datei <filename>/etc/sysconfig/SuSEfirewall2</filename> ändern. Der Eintrag <systemitem>START_FW</systemitem> muss auf <literal>„yes“</literal> gesetzt werden.
   </para>
   <para>
    <indexterm> <primary>Protokolldateien</primary> <secondary>Squid</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Protokolldateien</secondary> </indexterm> Starten Sie Squid wie in <xref linkend="sec.squid.start"/> gezeigt. Sehen Sie sich die Squid-Protokolle unter <filename>/var/log/squid/access.log</filename> an, um zu überprüfen, ob alles ordnungsgemäß funktioniert. <indexterm> <primary>Ports</primary> <secondary>Absuchen</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Transparente Proxies</secondary> </indexterm> Führen Sie eine Port-Absuche auf dem Computer von einem Computer außerhalb Ihres Netzwerks durch, um zu überprüfen, ob alle Ports korrekt konfiguriert sind. Nur die Webdienste (Port 80) sollten verfügbar sein. Die Befehlssyntax für das Scannen der Ports mit nmap lautet <command>nmap</command><option>-O IP_address</option>.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.cachemgr">
  <title>cachemgr.cgi</title><indexterm> <primary>Squid</primary> <secondary>Statistiken</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>cachemgr.cgi</secondary> </indexterm>

  <para>
   Der Cache-Manager (cachemgr.cgi) ist ein CGI-Dienstprogramm für die Anzeige der Statistiken zur Arbeitsspeichernutzung eines laufenden Squid-Prozesses. Außerdem bietet er eine bequemere Methode zur Verwaltung des Cache und zur Anzeige der Statistiken ohne Anmeldung beim Server.
  </para>

  <sect2>
   <title>Einrichtung</title><indexterm> <primary>Squid</primary> <secondary>Apache</secondary> </indexterm> <indexterm> <primary>Apache</primary> <secondary>Squid</secondary> </indexterm>
   <para>
    Zunächst muss ein Webserver in Ihrem System ausgeführt werden. Konfigurieren Sie Apache, wie in <xref linkend="cha.apache2"/> beschrieben. Um zu überprüfen, ob Apache bereits ausgeführt wird, geben Sie als <systemitem class="username">root</systemitem> den Befehl <command>rcapache</command><option>status ein</option>. Wenn eine Meldung der folgenden Art angezeigt wird:
   </para>
<screen>
Checking for service httpd: OK 
Server uptime: 1 day 18 hours 29 minutes 39 seconds   
</screen>
   <para>
    wird Apache auf dem Rechner angezeigt. Ansonsten starten Sie Apache mit dem Kommando <command>rcapace</command> <option>start</option> mit den SUSE Linux Enterprise Server-Standardeinstellungen. Der letzte Schritt besteht darin, die Datei <filename>cachemgr.cgi</filename> in das Apache-Verzeichnis <filename>cgi-bin</filename> zu kopieren. Für 32-Bit funktioniert das wie folgt:
   </para>
<screen>cp /usr/lib/squid/cachemgr.cgi /srv/www/cgi-bin/</screen>
   <para>
    In einer 64-Bit-Umgebung befindet sich die Datei <filename>cachemgr.cgi</filename> unter <filename>/usr/lib64/squid/</filename> und das Kommando, sie in das Apache-Verzeichnis zu kopieren, lautet:
   </para>
<screen>cp /usr/lib64/squid/cachemgr.cgi /srv/www/cgi-bin/</screen>
  </sect2>

  <sect2>
   <title>Cache-Manager-ACLs in /etc/squid/squid.conf</title><indexterm> <primary>Squid</primary> <secondary>Zugriffssteuerungen</secondary> </indexterm> <indexterm> <primary>Konfigurationsdateien</primary> <secondary>squid.conf</secondary> </indexterm>
   <para>
    Es gibt einige Standardeinstellungen in der Originaldatei, die für den Cache-Manager erforderlich sind. Zuerst werden zwei ACLs definiert. Anschließend verwenden die http_access-Optionen diese ACLs, um Zugriff vom CGI-Script auf Squid zu gewähren. Die erste ACL ist die wichtigste, da der Cache-Manager versucht, über das cache_object-Protokoll mit Squid zu kommunizieren.
   </para>
<screen>
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255
</screen>
   <para>
    Folgende Regeln gewähren Apache Zugriffsrechte auf Squid:
   </para>
<screen>
http_access allow manager localhost
http_access deny manager
</screen>
   <para>
    Diese Regeln setzen voraus, dass der Webserver und Squid auf demselben Computer ausgeführt werden. Wenn die Kommunikation zwischen Cache-Manager und Squid von dem Webserver auf einem anderen Computer ihren Ausgang nimmt, müssen Sie eine zusätzliche ACL aufnehmen, wie in <xref linkend="dat.acl"/> beschrieben.
   </para>
   <example id="dat.acl">
    <title>Zugriffsregeln</title>
<screen>
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255
acl webserver src 192.168.1.7/255.255.255.255 # webserver IP
</screen>
   </example>
   <para>
    Fügen Sie dann die Regeln in <xref linkend="dat.access"/> hinzu, um den Zugriff vom Webserver zu gestatten.
   </para>
   <example id="dat.access">
    <title>Zugriffsregeln</title>
<screen>
http_access allow manager localhost
http_access allow manager webserver
http_access deny manager
</screen>
   </example>
   <para>
    Konfigurieren Sie ein Passwort für den Manager für den Zugriff auf weitere Optionen, wie das Schließen des Cache über entfernten Zugriff oder die Anzeige weiterer Informationen zum Cache. Konfigurieren Sie hierfür den Eintrag <systemitem>cachemgr_passwd</systemitem> mit einem Passwort für den Manager und der Liste der anzuzeigenden Optionen. Diese Liste wird als Teil des Eintragskommentars in <filename>/etc/squid/squid.conf</filename> angezeigt.
   </para>
   <para>
    Starten Sie Squid nach jeder Änderung der Konfigurationsdatei neu. Verwenden Sie hierfür einfach <command>rcsquid</command><option>reload</option>. 
   </para>
  </sect2>

  <sect2>
   <title>Anzeige der Statistiken</title>
   <para>
    Rufen Sie die entsprechende Website auf: <ulink url="http://webserver.example.org/cgi-bin/cachemgr.cgi"/>. Drücken Sie <guimenu>continue</guimenu> (Fortsetzen) und blättern Sie durch die verschiedenen Statistiken. <indexterm> <primary>Squid</primary> <secondary>Statistiken</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>cachemgr.cgi</secondary> </indexterm>
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.squid.squidguard">
  <title>squidGuard</title><indexterm> <primary>Squid</primary> <secondary>squidGuard</secondary> </indexterm>

  <para>
   In diesem Abschnitt wird keine umfassende Konfiguration von squidGuard erläutert. Er gibt lediglich eine Einführung und einige Hinweise zur Verwendung. Eine Behandlung tiefer gehender Konfigurationsfragen finden Sie auf der squidGuard-Website unter <ulink url="http://www.squidguard.org"/>.
  </para>

  <para>
   squidGuard ist ein kostenloses (GPL), flexibles und schnelles Filter-, Umleitungs- und Zugriffssteuerungs-Plugin für Squid. Damit können Sie mehrere Zugriffsregeln mit verschiedenen Einschränkungen für verschiedene Benutzergruppen in einem Squid-Cache erstellen. squidGuard verwendet die Standard-Umleitungsschnittstelle von Squid und bietet folgende Möglichkeiten:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Einschränken des Webzugriffs für einige Benutzer auf eine Liste akzeptierter oder gut bekannter Webserver bzw. URLs.
    </para>
   </listitem>
   <listitem>
    <para>
     Blockieren des Zugriffs auf einige gelistete oder in einer Blacklist stehende Webserver bzw. URLs für einige Benutzer.
    </para>
   </listitem>
   <listitem>
    <para>
     Blockieren des Zugriffs bestimmter Benutzer auf URLs, die reguläre Ausdrücke oder Wörter aus einer entsprechenden Liste enthalten.
    </para>
   </listitem>
   <listitem>
    <para>
     Umleiten blockierter URLs an eine „intelligente“ CGI-basierte Informationsseite.<quote/>
    </para>
   </listitem>
   <listitem>
    <para>
     Umleiten nicht registrierter Benutzer zu einem Registrierungsformular.
    </para>
   </listitem>
   <listitem>
    <para>
     Umleiten von Bannern in eine leere GIF-Datei.
    </para>
   </listitem>
   <listitem>
    <para>
     Verwenden verschiedener Zugriffsregeln je nach Tageszeit, Wochentag, Datum usw.
    </para>
   </listitem>
   <listitem>
    <para>
     Verwenden verschiedener Regeln für verschiedene Benutzergruppen.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   squidGuard und Squid können nicht zu folgenden Zwecken eingesetzt werden:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Bearbeiten, Filtern oder Zensieren von Text in Dokumenten.
    </para>
   </listitem>
   <listitem>
    <para>
     Bearbeiten, Filtern oder Zensieren von in HTML eingebetteten Skriptsprachen, wie JavaScript oder VBscript.
    </para>
   </listitem>
  </itemizedlist><indexterm> <primary>Konfigurationsdateien</primary> <secondary>squidguard.conf</secondary> </indexterm> <indexterm> <primary>Konfigurationsdateien</primary> <secondary>squid.conf</secondary> </indexterm>

  <para>
   Vor der Verwendung muss <systemitem class="resource">squidGuard</systemitem> zunächst installiert werden. Geben Sie eine Datei mit der Minimalkonfiguration als <filename>/etc/squidguard.conf</filename> an. Konfigurationsbeispiele finden Sie unter <ulink url="http://www.squidguard.org/Doc/examples.html"/>. Später können Sie mit komplizierteren Konfigurationseinstellungen experimentieren.
  </para>

  <para>
   Erstellen Sie als Nächstes eine Dummy-Seite mit „Zugriff verweigert“ oder eine mehr oder weniger komplexe CGI-Seite, um Squid umzuleiten, wenn der Client eine Website anfordert, die auf der schwarzen Liste steht. <quote/> Die Verwendung von Apache wird dringend empfohlen.
  </para>

  <para>
   Konfigurieren Sie nun Squid für die Verwendung von squidGuard. Verwenden Sie folgenden Eintrag in der Datei <filename>/etc/squid/squid.conf</filename>:
  </para>

<screen>
redirect_program /usr/bin/squidGuard
</screen>

  <para>
   Eine weitere Option, <systemitem>redirect_children</systemitem>, konfiguriert die Zahl von <quote>redirect</quote>-Prozessen (in diesem Fall squidGuard), die auf dem Rechner ausgeführt werden. Je mehr Prozesse Sie angeben, desto mehr RAM ist erforderlich. Versuchen Sie zunächst niedrige Zahlen (z. B. 4).
  </para>

<screen>
redirect_children 4
</screen>

  <para>
   Abschließend kann Squid die neue Konfiguration laden, indem Sie <command>rcsquid</command> <option>reload</option> ausführen. Testen Sie nun Ihre Einstellungen mit einem Browser.
  </para>
 </sect1>
 <sect1 id="sec.squid.calamaris">
  <title>Erstellung von Cache-Berichten mit Calamaris</title><indexterm> <primary>Squid</primary> <secondary>Calamaris</secondary> </indexterm> <indexterm> <primary>Squid</primary> <secondary>Berichte</secondary> </indexterm>

  <para>
   Calamaris ist ein Perl-Skript, mit dem Berichte über die Cache-Aktivität im ASCII- oder HTML-Format erstellt werden können. Es arbeitet mit nativen Squid-Zugriffsprotokolldateien. Die Calamaris-Homepage befindet sich unter <ulink url="http://Calamaris.Cord.de/"/>. Dieses Werkzeug gehört nicht zum standardmäßigen Installationsumfang von SUSE Linux Enterprise Server. Zum Verwenden installieren Sie das Paket <systemitem>calamaris</systemitem>.
  </para>

  <para>
   Melden Sie sich als <systemitem class="username">root</systemitem> an und geben Sie <command>cat access.log | calamaris <replaceable>options</replaceable> &gt; reportfile</command> ein. Beim Piping mehrerer Protokolldateien ist darauf zu achten, dass die Protokolldateien chronologisch (die ältesten Dateien zuerst) geordnet sind. Im Folgenden finden Sie einige Optionen des Programms:
  </para>

  <tip>
   <title>Shell und Dateisequenzen</title>
   <para>
    Wenn Sie über mehrere ähnliche Dateien verfügen, z. B. <filename>access.log.1</filename>, <filename>access.log.2</filename> usw., würde die Standard-Bash-Shell diese Dateien beim Auflisten von <filename>access.log nicht in der Zahlensequenz sortieren.*</filename>. Um dieses Problem zu lösen, können Sie die Syntax <filename>access.log{1..42}</filename> verwenden, die eine Liste von Dateien, erweitert durch Nummern von 1 bis 42, generiert.
   </para>
  </tip>

  <variablelist>
   <varlistentry>
    <term>-a</term>
    <listitem>
     <para>
      Ausgabe aller verfügbaren Berichte
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-w</term>
    <listitem>
     <para>
      Ausgabe als HTML-Bericht
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-l</term>
    <listitem>
     <para>
      Einschließen einer Meldung oder eines Logos in den Berichtsheader
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Weitere Informationen zu den verschiedenen Optionen finden Sie auf der man-Seite des Programms (<command>man</command><option>calamaris</option>.
  </para>

  <para>
   Typisches Beispiel:
  </para>

<screen>
cat access.log.{10..1} access.log | calamaris -a -w \ 
&gt; /usr/local/httpd/htdocs/Squid/squidreport.html
</screen>

  <para>
   Dadurch wird der Bericht im Verzeichnis des Webservers gespeichert. Zur Anzeige des Berichts ist Apache erforderlich.
  </para>

  
 </sect1>
 <sect1 id="sec.squid.moreinfo">
  <title>Weiterführende Informationen</title>

  <para>
   Besuchen Sie die Squid-Homepage unter <ulink url="http://www.squid-cache.org/"/>. Hier finden Sie das <quote>Squid-Benutzerhandbuch</quote> und eine umfassende Sammlung mit FAQ zu Squid.
  </para>

  <para>
   Nach der Installation ist eine kleine HOWTO-Datei zu transparenten Proxies in <systemitem class="resource">howtoenh</systemitem> verfügbar: <filename>/usr/share/doc/howto/en/txt/TransparentProxy.gz</filename>. Außerdem sind Mailinglisten für Squid unter <ulink url="squid-users@squid-cache.org"/> verfügbar. Das zugehörige Archiv finden Sie unter <ulink url="http://www.squid-cache.org/mail-archive/squid-users/"/>.
  </para>
 </sect1>
</chapter>
