<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>


<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="net_sync.xml" xml:id="cha-net-sync"><title>Dateisynchronisierung</title><info><abstract>
  <para>
   Viele Menschen benutzen heutzutage mehrere Computer: einen Computer zu Hause, einen oder mehrere Computer am Arbeitsplatz und eventuell ein Notebook, ein Tablet oder ein Smartphone unterwegs. Viele Dateien werden auf allen diesen Computern benötigt. Vermutlich wollen Sie Ihre Dateien auf allen Computern bearbeiten und benötigen die Daten daher auf allen Computern auf dem aktuellsten Stand.
  </para>
 </abstract></info>
 <indexterm xml:id="idx-files-syncronizing" class="startofrange"> <primary>Dateien</primary> <secondary>Synchronisieren</secondary></indexterm>

 <section xml:id="sec-net-sync-soft">
  <title>Verfügbare Software zur Datensynchronisierung</title>

  <para>
   Auf Computern, die ständig miteinander über ein schnelles Netzwerk in Verbindung stehen, ist die Datensynchronisierung kein Problem. In diesem Fall wählen Sie ein Netzwerkdateisystem, wie zum Beispiel NFS, und speichern die Dateien auf einem Server. Alle Rechner greifen dabei über das Netzwerk auf ein und dieselben Daten zu. Dieser Ansatz ist unmöglich, wenn die Netzverbindung schlecht oder teilweise gar nicht vorhanden ist. Wer mit einem Laptop unterwegs ist, ist darauf angewiesen, von allen benötigten Dateien Kopien auf der lokalen Festplatte zu haben. Wenn Dateien bearbeitet werden, stellt sich aber schnell das Problem der Synchronisierung. Wenn Sie eine Datei auf einem Computer ändern, stellen Sie sicher, dass die Kopie der Datei auf allen anderen Computern aktualisiert wird. Dies kann bei gelegentlichen Kopiervorgängen manuell mithilfe von scp oder rsync erledigt werden. Bei vielen Dateien wird das jedoch schnell aufwändig und erfordert hohe Aufmerksamkeit vom Benutzer, um Fehler, wie etwa das Überschreiben einer neuen mit einer alten Datei, zu vermeiden.
  </para>

  <warning>
   <title>Risiko des Datenverlusts</title>
   <para>
    Bevor Sie Ihre Daten mit einem Synchronisierungssystem verwalten, sollten Sie mit dem verwendeten Programm vertraut sein und dessen Funktionalität testen. Für wichtige Dateien ist das Anlegen einer Sicherungskopie unerlässlich.
   </para>
  </warning>

  <para>
   Zur Vermeidung der zeitraubenden und fehlerträchtigen manuellen Arbeit bei der Datensynchronisierung gibt es Programme, die diese Aufgabe mit verschiedenen Ansätzen automatisieren. Die folgenden Zusammenfassungen sollen dem Benutzer eine Vorstellung davon liefern, wie diese Programme funktionieren und genutzt werden können. Vor dem tatsächlichen Einsatz sollten Sie die Programmdokumentation sorgfältig lesen.
  </para>

  <section xml:id="sec-net-sync-soft-cvs">
   <title>CVS</title><indexterm> <primary>Dateien</primary> <secondary>Synchronisieren</secondary> <tertiary>CVS</tertiary> </indexterm> <indexterm> <primary>CVS</primary> </indexterm>
   <para>
    CVS, das meistens zur Versionsverwaltung von Quelltexten von Programmen benutzt wird, bietet die Möglichkeit, Kopien der Dateien auf mehreren Computern zu führen. Damit eignet es sich auch für die Datensynchronisierung. CVS führt ein zentrales Repository auf dem Server, das nicht nur die Dateien, sondern auch die Änderungen an ihnen speichert. Lokal erfolgte Änderungen werden an das Repository übermittelt und können von anderen Computern durch ein Update abgerufen werden. Beide Prozeduren müssen vom Benutzer initiiert werden.
   </para>
   <para>
    Dabei ist CVS bei gleichzeitigen Änderungen einer Datei auf mehreren Computern sehr fehlertolerant. Die Änderungen werden zusammengeführt, und falls in gleichen Zeilen Änderungen vorgenommen wurden, wird ein Konflikt gemeldet. Die Datenbank bleibt im Konfliktfall in einem konsistenten Zustand. Der Konflikt ist nur am Client-Host sichtbar und muss dort gelöst werden.
   </para>
  </section>

  <section xml:id="sec-net-sync-soft-rsync">
   <title> rsync </title><indexterm> <primary>rsync</primary></indexterm><indexterm><primary>Dateien</primary><secondary>rsync </secondary><tertiary>Synchronisieren</tertiary></indexterm>
   <para>
    Wenn Sie keine Versionskontrolle benötigen, aber große Dateistrukturen über langsame Netzwerkverbindungen synchronisieren möchten, bietet das Tool rsync ausgefeilte Mechanismen an, um ausschließlich Änderungen an Dateien zu übertragen. Dies betrifft nicht nur Textdateien sondern auch binäre Dateien. Um die Unterschiede zwischen Dateien zu erkennen, teilt rsync die Dateien in Blöcke auf und berechnet Prüfsummen zu diesen Blöcken.
   </para>
   <para>
    Der Aufwand beim Erkennen der Änderungen hat seinen Preis. Für den Einsatz von rsync sollten die Computer, die synchronisiert werden sollen, großzügig dimensioniert sein. RAM ist besonders wichtig.
   </para>
  </section>




 </section>
 <section xml:id="sec-net-sync-select">
  <title>Kriterien für die Auswahl eines Programms</title>

  <para>
   Bei der Entscheidung für ein Programm müssen einige wichtige Kriterien berücksichtigt werden.
  </para>

  <section xml:id="sec-net-sync-select-client-server">
   <title>Client-Server oder Peer-to-Peer</title>
   <para>
    Zur Verteilung von Daten sind zwei verschiedene Modelle verbreitet. Im ersten Modell gleichen alle Clients ihre Dateien mit einem zentralen Server ab. Der Server muss zumindest zeitweise von allen Clients erreichbar sein. Dieses Modell wird von CVS verwendet.
   </para>
   <para>
    Die andere Möglichkeit ist, dass alle Hosts gleichberechtigt (als Peers) vernetzt sind und ihre Daten gegenseitig abgleichen. rsync arbeitet eigentlich im Client-Modus, kann jedoch auch als Server ausgeführt werden.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-port">
   <title>Portabilität</title>
   <para>
    CVS und rsync sind auch für viele andere Betriebssysteme, wie verschiedene Unix- und Windows-Systeme, erhältlich.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-auto">
   <title>Interaktiv oder automatisch</title>
   <para>
    In CVS startet der Benutzer die Datensynchronisierung manuell. Dies erlaubt die genaue Kontrolle über die abzugleichenden Dateien und einen einfachen Umgang mit Konflikten. Andererseits können sich durch zu lange Synchronisierungsintervalle die Chancen für Konflikte erhöhen.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-problems">
   <title>Konflikte: Symptome und Lösungen</title>
   <para>
    Konflikte treten in CVS nur selten auf, selbst wenn mehrere Leute an einem umfangreichen Programmprojekt arbeiten. Das liegt daran, dass die Dokumente zeilenweise zusammengeführt werden. Wenn ein Konflikt auftritt, ist davon immer nur ein Client betroffen. In der Regel lassen sich Konflikte in CVS einfach lösen.
   </para>
   <para>
    In rsync gibt es keine Konfliktbehandlung. Der Benutzer muss selbst darauf achten, dass er nicht versehentlich Dateien überschreibt, und alle etwaigen Konflikte manuell lösen. Zur Sicherheit kann zusätzlich ein Versionssteuerungssystem wie RCS eingesetzt werden.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-files">
   <title>Auswählen und Hinzufügen von Dateien</title>
   <para>
    In CVS müssen neue Verzeichnisse und Dateien explizit mit dem Befehl <command>cvs</command> <option>add</option> hinzugefügt werden. Daraus resultiert eine genauere Kontrolle über die zu synchronisierenden Dateien. Andererseits werden neue Dateien häufig übersehen, vor allem, wenn aufgrund einer großen Anzahl von Dateien die Fragezeichen in der Ausgabe von <command>cvs</command> <option>update</option> ignoriert werden.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-history">
   <title>Verlauf</title>
   <para>
    CVS stellt zusätzlich die Funktion der Rekonstruktion alter Dateiversionen zur Verfügung. Bei jeder Änderung kann ein kurzer Bearbeitungsvermerk hinzugefügt werden. Damit lässt sich später die Entwicklung der Dateien aufgrund des Inhalts und der Vermerke gut nachvollziehen. Für Diplomarbeiten und Programmtexte ist dies eine wertvolle Hilfe.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-size">
   <title>Datenmenge und Speicherbedarf</title>
   <para>
    Auf jedem der beteiligten Computer ist für alle verteilten Daten genügend Speicherplatz auf der Festplatte erforderlich. CVS benötigt zusätzlichen Speicherplatz für die Repository-Datenbank auf dem Server. Da auf dem Server auch die Datei-History gespeichert wird, ist dort deutlich mehr Speicherplatz nötig. Bei Dateien im Textformat müssen nur geänderte Zeilen neu gespeichert werden. Bei binären Dateien wächst hingegen der Platzbedarf bei jeder Änderung um die Größe der Datei.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-gui">
   <title>GUI</title>
   <para>
    Erfahrene Benutzer führen CVS in der Regel über die Kommandozeile aus. Es sind jedoch grafische Bedienoberflächen für Linux (z. B. cervisia) und andere Betriebssysteme (z. B. wincvs) verfügbar. Viele Entwicklungswerkzeuge (z. B. kdevelop) und Texteditoren (z. B. emacs) unterstützen CVS. Die Behebung von Konflikten wird mit diesen Frontends oft sehr vereinfacht.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-use">
   <title>Benutzerfreundlichkeit</title>
   <para>
    rsync ist einfach zu verwenden und auch für Neueinsteiger geeignet. CVS ist etwas weniger bedienerfreundlich. Benutzer sollten zu deren Verwendung das Zusammenspiel zwischen Repository und lokalen Daten verstehen. Änderungen der Daten sollten zunächst immer lokal mit dem Repository zusammengeführt werden. Hierzu wird der Befehl <command>cvs</command> <option>update</option> verwendet. Anschließend müssen die Daten über den Befehl cvs<command> </command> <option>commit</option> wieder in das Repository zurückgeschickt werden. Wenn dieser Vorgang verstanden wurde, können auch Einsteiger CVS mühelos verwenden.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-sec">
   <title>Sicherheit vor Angriffen</title>
   <para>
    Idealerweise sollten die Daten bei der Übertragung vor Abhören oder Änderungen geschützt sein. CVS und rsync lassen sich einfach über SSH (Secure Shell) benutzen und sind dann gut vor solchen Angriffen geschützt. Sie sollten CVS nicht über rsh (remote shell) ausführen. Zugriffe auf CVS mit dem Mechanismus <emphasis>pserver</emphasis> sind in ungeschützten Netzwerken ebenfalls nicht empfehlenswert.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-loss">
   <title>Schutz vor Datenverlust</title>
   <para>
    CVS wird schon sehr lange von vielen Entwicklern zur Verwaltung ihrer Programmprojekte benutzt und ist äußerst stabil. Durch das Speichern der Entwicklungsgeschichte bietet CVS sogar Schutz vor bestimmten Benutzerfehlern, wie irrtümliches Löschen einer Datei.
   </para>
   <table xml:id="tab-sync-overview">
    <title>Funktionen der Werkzeuge zur Dateisynchronisierung: -- = sehr schlecht, - = schlecht oder nicht verfügbar, o = mittel, + = gut, ++ = hervorragend, x = verfügbar</title>

    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para/>
       </entry>
       <entry>
        <para>
         CVS
        </para>
       </entry>
       <entry>
        <para>
          rsync 
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Client/Server
        </para>
       </entry>
       <entry>
        <para>
         C-S
        </para>
       </entry>
       <entry>
        <para>
         C-S
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Portabilität
        </para>
       </entry>
       <entry>
        <para>
         Lin,Un*x,Win
        </para>
       </entry>
       <entry>
        <para>
         Lin,Un*x,Win
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Interaktivität
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Speed
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Verursacht einen Konflikt
        </para>
       </entry>
       <entry>
        <para>
         ++
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Dateiauswahl
        </para>
       </entry>
       <entry>
        <para>
         Auswahl/file, dir.
        </para>
       </entry>
       <entry>
        <para>
         Verz.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Verlauf
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
       <entry>
        <para>
         -
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Speicherbedarf
        </para>
       </entry>
       <entry>
        <para>
         --
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         GUI
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         -
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Schwierigkeit
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Angriffe
        </para>
       </entry>
       <entry>
        <para>
         + (ssh)
        </para>
       </entry>
       <entry>
        <para>
         +(ssh)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Datenverlust
        </para>
       </entry>
       <entry>
        <para>
         ++
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </section>
 </section>
 <section xml:id="sec-net-sync-cvs">
  <title>Einführung in CVS</title><indexterm xml:id="idx-CVS" class="startofrange"> <primary>CVS</primary> </indexterm> <indexterm xml:id="idx-files-synchronizing-CVS" class="startofrange"> <primary>Dateien</primary> <secondary>Synchronisieren</secondary> <tertiary>CVS</tertiary> </indexterm>

  <para>
   CVS bietet sich zur Synchronisierung an, wenn einzelne Dateien häufig bearbeitet werden und in einem Dateiformat vorliegen, wie ASCII-Text oder Programmquelltext. Die Verwendung von CVS für die Synchronisierung von Daten in anderen Formaten (z. B. JPEG-Dateien) ist zwar möglich, führt aber schnell zu großen Datenmengen, da jede Variante einer Datei dauerhaft auf dem CVS-Server gespeichert wird. Zudem bleiben in solchen Fällen die meisten Möglichkeiten von CVS ungenutzt. Die Verwendung von CVS zur Dateisynchronisierung ist nur möglich, wenn alle Arbeitsstationen auf denselben Server zugreifen können.
  </para>

  <section>
   <title>Konfigurieren eines CVS-Servers</title>
   <para>
    Der <emphasis>Server</emphasis> ist der Ort, an dem sich alle gültigen Dateien befinden, einschließlich der neuesten Version jeder Datei. Jede stationäre Arbeitsstation kann als Server benutzt werden. Wünschenswert ist, dass die Daten des CVS-Repository in regelmäßige Backups einbezogen werden.
   </para>
   <para>
    Beim Konigurieren eines CVS-Servers ist es sinnvoll, Benutzern über SSH Zugang zum Server zu gestatten. Ist auf diesem Server der Benutzer als <systemitem class="username">tux</systemitem> bekannt und sowohl auf dem Server als auch auf dem Client die CVS-Software installiert, müssen auf der Client-Seite die folgenden Umgebungsvariablen gesetzt sein:
   </para>
<screen><?dbsuse-latex font-size="footnotesize" ?>


CVS_RSH=ssh CVSROOT=tux@server:/serverdir</screen>
   <para>
    Mit dem Befehl <command>cvs</command><option>init</option> können Sie den CVS-Server von der Client-Seite aus initialisieren. Das ist nur einmal erforderlich.
   </para>
   <para>
    Abschließend muss ein Name für die Synchronisierung festgelegt werden. Wählen oder erstellen Sie auf dem Client ein Verzeichnis für die Dateien, die von CVS verwaltet werden sollen (es darf auch leer sein). Der Name des Verzeichnisses ist auch der Name der Synchronisierung. In diesem Beispiel wird das Verzeichnis <literal>synchome</literal> genannt. Wechseln Sie in dieses Verzeichnis. Um den Synchronisationsnamen auf <literal>synchome</literal> zu setzen, geben Sie Folgendes ein:
   </para>
<screen>cvs import synchome tux wilber</screen>
   <para>
    Viele Befehle von CVS erfordern einen Kommentar. Zu diesem Zweck startet CVS einen Editor (den in der Umgebungsvariable <literal>$EDITOR</literal> definierten, ansonsten vi). Den Aufruf des Editors können Sie umgehen, indem Sie den Kommentar bereits in der Kommandozeile eingeben, wie in folgendem Beispiel:
   </para>
<screen>cvs import -m 'this is a test' synchome tux wilber</screen>
  </section>

  <section>
   <title>Verwenden von CSV</title>
   <para>
    Das Synchronisierungsrepository kann jetzt mit <command>cvs</command> <option>co synchome</option> von allen Hosts aus gecheckt werden. Dadurch wird auf dem Client das neue Unterverzeichnis <filename>synchome</filename> angelegt. Um Ihre Änderungen an den Server zu übermitteln, wechseln Sie in das Verzeichnis <filename>synchome</filename> (oder eines seiner Unterverzeichnisse) und geben Sie <command>cvs</command> <option>commit</option> ein.
   </para>
   <para>
    Standardmäßig werden alle Dateien (einschließlich Unterverzeichnisse) an den Server übermittelt. Um nur einzelne Dateien oder Verzeichnisse zu übermitteln, geben Sie diese folgendermaßen an: <command>cvs</command> <option>commit datei1 verzeichnis1</option>. Neue Dateien und Verzeichnisse müssen dem Repository mit einem Befehl wie <command>cvs</command> <option>add datei1 verzeichnis1</option> hinzugefügt werden, bevor sie an den Server übermittelt werden. Übermitteln Sie anschließend die neu hinzugefügten Dateien und Verzeichnisse mit <command>cvs</command> <option>commit datei1 verzeichnis1</option>.
   </para>
   <para>
    Wenn Sie zu einer anderen Arbeitsstation wechseln, checken Sie das Synchronisierungsrepository aus, wenn nicht bereits in einer früheren Sitzung auf demselben Arbeitsplatzrechner geschehen.
   </para>
   <para>
    Starten Sie die Synchronisierung mit dem Server über <command>cvs</command> <option>update</option>. Aktualisieren Sie einzelne Dateien oder Verzeichnisse, wie in <command>cvs</command> <option>update datei1 verzeichnis1</option>. Den Unterschied zwischen den aktuellen Dateien und den auf dem Server gespeicherten Versionen können Sie mit dem Befehl <command>cvs</command> <option>diff</option> oder <command>cvs</command> <option>diff datei1 verzeichnis1</option> anzeigen. Mit <command>cvs</command> <option>-nq update</option> können Sie anzeigen, welche Dateien von einer Aktualisierung betroffen sind.
   </para>
   <para>
    Hier sind einige der Statussymbole, die während einer Aktualisierung angezeigt werden:
   </para>
   <variablelist>
    <varlistentry>
     <term>U</term>
     <listitem>
      <para>
       Die lokale Version wurde aktualisiert. Dies betrifft alle Dateien, die vom Server bereitgestellt werden und auf dem lokalen System fehlen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>M</term>
     <listitem>
      <para>
       Die lokale Version wurde geändert. Falls Änderungen am Server erfolgt sind, war es möglich, die Unterschiede mit der lokalen Kopie zusammenzuführen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>P</term>
     <listitem>
      <para>
       Die lokale Version wurde durch einen Patch der Server-Version aktualisiert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>C</term>
     <listitem>
      <para>
       Die lokale Datei hat einen Konflikt mit der aktuellen Version im Repository.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>?</term>
     <listitem>
      <para>
       Die Datei existiert nicht in CVS.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Der Status <literal>M</literal> kennzeichnet eine lokal geänderte Datei. Entweder übermitteln Sie die lokale Kopie an den Server oder Sie entfernen die lokale Datei und führen die Aktualisierung erneut durch. In diesem Fall wird die fehlende Datei vom Server abgerufen. Wenn von verschiedenen Benutzern die gleiche Datei in derselben Zeile editiert und dann übermittelt wurde, entsteht ein Konflikt, der mit <literal>C</literal> gekennzeichnet wird.
   </para>
   <para>
    Beachten Sie in diesem Fall die Konfliktmarkierungen (<quote><literal>&gt;&gt;</literal></quote> und <quote><literal>&lt;&lt;</literal></quote>) in der Datei und entscheiden Sie sich für eine der beiden Versionen. Da diese Aufgabe unangenehm sein kann, können Sie Ihre Änderungen verwerfen, die lokale Datei löschen und mit der Eingabe <command>cvs</command><option>up</option> die aktuelle Version vom Server abrufen.
   </para><indexterm class="endofrange" startref="idx-CVS"/><indexterm class="endofrange" startref="idx-files-synchronizing-CVS"/>
  </section>
 </section>
 <section xml:id="sec-net-sync-rsync">
  <title>Einführung in rsync</title><indexterm> <primary>rsync</primary> </indexterm>

  <para>
   rsync bietet sich immer dann an, wenn große Datenmengen, die sich nicht wesentlich ändern, regelmäßig übertragen werden müssen. Dies ist z. B. bei der Erstellung von Sicherungskopien häufig der Fall. Ein weiteres Einsatzgebiet sind so genannte Staging-Server. Dabei handelt es sich um Server, auf denen komplette Verzeichnisstrukturen von Webservern gespeichert werden, die regelmäßig auf den eigentlichen Webserver in einer „DMZ“ gespiegelt werden.
  </para>

  <section>
   <title>Konfiguration und Betrieb</title>
   <para>
    rsync lässt sich in zwei verschiedenen Modi benutzen. Zum einen kann rsync zum Archivieren oder Kopieren von Daten verwendet werden. Dazu ist auf dem Zielsystem nur eine Remote-Shell, wie z. B. SSH, erforderlich. Jedoch kann rsync auch als Daemon verwendet werden und Verzeichnisse im Netz zur Verfügung stellen.
   </para>
   <para>
    Die grundlegende Verwendung von rsync erfordert keine besondere Konfiguration. Mit rsync ist es direkt möglich, komplette Verzeichnisse auf ein anderes System zu spiegeln. Beispielsweise kann mit folgendem Befehl ein Backup des Home-Verzeichnisses von "tux" auf einem Backupserver "sun" angelegt werden:
   </para>
<screen>rsync -baz -e ssh /home/tux/ tux@sun:backup</screen>
   <para>
    Mit dem folgenden Befehl wird das Verzeichnis zurückgespielt:
   </para>
<screen>rsync -az -e ssh tux@sun:backup /home/tux/</screen>
   <para>
    Bis hierher unterscheidet sich die Benutzung kaum von einem normalen Kopierprogramm, wie scp.
   </para>
   <para>
    Damit rsync seine Funktionen voll ausnutzen kann, sollte das Programm im <quote>rsync</quote>-Modus betrieben werden. Dazu wird auf einem der Systeme der Daemon rsyncd gestartet. Konfigurieren Sie rsync in der Datei <filename>/etc/rsyncd.conf</filename>. Wenn beispielsweise das Verzeichnis <filename>/srv/ftp</filename> über rsync zugänglich sein soll, verwenden Sie die folgende Konfiguration:
   </para>
<screen>gid = nobody
uid = nobody
read only = true
use chroot = no
transfer logging = true
log format = %h %o %f %l %b
log file = /var/log/rsyncd.log

[FTP]
        path = /srv/ftp
        comment = An Example</screen>
   <para>
    Starten Sie anschließend rsyncd mit <command>rcrsyncd</command> <option>start</option>. rsyncd kann auch automatisch beim Bootvorgang gestartet werden. Hierzu muss entweder dieser Dienst in YaST im Runlevel-Editor aktiviert oder manuell der Befehl <command>insserv </command><option>rsyncd</option> eingegeben werden. Alternativ kann rsyncd auch von xinetd gestartet werden. Dies empfiehlt sich aber nur bei Servern, auf denen rsyncd nicht allzu oft verwendet wird.
   </para>
   <para>
    Im obigen Beispiel wird auch eine Protokolldatei über alle Verbindungen angelegt. Diese Datei wird unter <filename>/var/log/rsyncd.log</filename> abgelegt.
   </para>
   <para>
    Dann kann die Übertragung von einem Clientsystem aus getestet werden. Das geschieht mit folgendem Befehl:
   </para>
<screen>rsync -avz sun::FTP</screen>
   <para>
    Dieser Befehl listet alle Dateien auf, die auf dem Server im Verzeichnis <filename>/srv/ftp</filename> liegen. Diese Anfrage wird auch in der Protokolldatei unter <filename>/var/log/rsyncd.log</filename> aufgezeichnet. Um die Übertragung tatsächlich zu starten, geben Sie ein Zielverzeichnis an. Verwenden Sie <literal>.</literal> für das aktuelle Verzeichnis. Beispiel:
   </para>
<screen>rsync -avz sun::FTP .</screen>
   <para>
    Standardmäßig werden bei der Synchronisierung mit rsync keine Dateien gelöscht. Wenn dies erzwungen werden soll, muss zusätzlich die Option <option>--delete</option> angegeben werden. Um sicherzustellen, dass keine neueren Dateien überschrieben werden, kann stattdessen die Option <option>--update</option> angegeben werden. Dadurch entstehende Konflikte müssen manuell aufgelöst werden.
   </para>
  </section>
 </section>
 <section xml:id="sec-net-sync-summary">
  <title>Weiterführende Informationen</title>

  <variablelist>
   <varlistentry>
    <term>CVS</term>
    <listitem>
     <para>
      Wichtige Informationen zu CVS befinden sich auch auf der Homepage <link xlink:href="http://www.cvshome.org"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term> rsync </term>
    <listitem>
     <para>
      Wichtige Informationen zu rsync finden Sie in den man-Seiten <command>man</command><option>rsync</option> und <command>man</command><option>rsyncd.conf</option>. Eine technische Dokumentation zur Vorgehensweise von rsync finden Sie unter <filename>/usr/share/doc/packages/rsync/tech_report.ps</filename>. Aktuelles zu rsync finden Sie auf der Projekt-Website unter <link xlink:href="http://rsync.samba.org/"/>.
     </para>
    </listitem>
   </varlistentry>
   
  </variablelist><indexterm class="endofrange" startref="idx-files-syncronizing"/>
 </section>
</chapter>
