<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE chapter
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>


<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="net_sync.xml" xml:id="cha-net-sync"><title>Sincronização de arquivos</title><info><abstract>
  <para>
   Atualmente, muitas pessoas usam vários computadores: um em casa, um ou mais computadores no local de trabalho e possivelmente um laptop, tablet ou smartphone em trânsito. Vários arquivos são necessários em todos esses computadores. Talvez você queira trabalhar com todos os computadores e modificar os arquivos, de modo que a versão mais recente dos dados fique disponível em todos os computadores.
  </para>
 </abstract></info>
 <indexterm xml:id="idx-files-syncronizing" class="startofrange"> <primary>arquivos</primary> <secondary>sincronizando</secondary> </indexterm>
 
 <section xml:id="sec-net-sync-soft">
  <title>Software de sincronização de dados disponível</title>

  <para>
   A sincronização de dados não é um problema para computadores permanentemente conectados por uma rede rápida. Nesse caso, use um sistema de arquivos de rede, como o NFS, e armazene os arquivos em um servidor para que todos os hosts acessem os mesmos dados via rede. Essa abordagem será impossível se a conexão de rede for instável ou não permanente. Quando você viaja com um laptop, precisa ter cópias de todos os arquivos necessários no disco rígido local. Entretanto, é necessário sincronizar os arquivos modificados. Quando você modificar um arquivo em um computador, verifique se uma cópia dele foi atualizada em todos os outros computadores. No caso de cópias ocasionais, elas podem ser feitas manualmente com o scp ou o rsync. Entretanto, se vários arquivos forem envolvidos, o procedimento poderá ser complicado e demandar muito cuidado para evitar erros, como a sobregravação de um arquivo novo por um antigo.
  </para>

  <warning>
   <title>risco de perda de dados</title>
   <para>
    Antes de começar a gerenciar seus dados com um sistema de sincronização, você deve se informar sobre o programa usado e testar sua funcionalidade. É indispensável ter um backup de arquivos importantes.
   </para>
  </warning>

  <para>
   A tarefa prolongada e sujeita a erros de sincronizar dados manualmente pode ser evitada se você usar um dos programas que utilizam vários métodos para automatizá-la. Os resumos a seguir têm o simples objetivo de dar uma visão geral sobre como esses programas funcionam e como podem ser usados. Se você planeja usá-los, leia a documentação do programa.
  </para>

  <section xml:id="sec-net-sync-soft-cvs">
   <title>CVS</title><indexterm> <primary>arquivos</primary> <secondary>sincronizando</secondary> <tertiary>CVS</tertiary> </indexterm> <indexterm> <primary>CVS</primary> </indexterm>
   <para>
    O CVS, que é mais usado para gerenciar versões de origem de programas, oferece a possibilidade de manter cópias dos arquivos em vários computadores. Dessa forma, ele também é adequado para sincronização de dados. O CVS mantém um repositório central no servidor, no qual os arquivos e as mudanças feitas neles são gravados. As mudanças realizadas localmente são enviadas para o repositório e podem ser recuperadas de outros computadores por meio de uma atualização. Todos os procedimentos devem ser iniciados pelo usuário.
   </para>
   <para>
    O CVS é muito suscetível a erros quando ocorrem mudanças em vários computadores. As mudanças são fundidas e, se ocorrerem nas mesmas linhas, um conflito será reportado. Quando ocorre um conflito, o banco de dados permanece em estado consistente. O conflito só fica visível para resolução no host cliente.
   </para>
  </section>

  <section xml:id="sec-net-sync-soft-rsync">
   <title>rsync</title><indexterm> <primary>rsync</primary> </indexterm> <indexterm> <primary>arquivos</primary> <secondary>sincronizando</secondary> <tertiary>rsync</tertiary> </indexterm>
   <para>
    Quando o controle de versão não é necessário, mas grandes estruturas de diretório precisam ser sincronizadas em conexões de rede lentas, a ferramenta rsync oferece mecanismos avançados para a transmissão apenas de mudanças entre arquivos. Isso não diz se aplica apenas a arquivos de texto, mas também a arquivos binários. Para detectar as diferenças entre os arquivos, o rsync os subdivide em blocos e realiza checksums neles.
   </para>
   <para>
    O esforço dedicado à detecção das mudanças tem um preço. Os sistemas a serem sincronizados devem ser dimensionados generosamente para uso do rsync. A RAM é especialmente importante.
   </para>
  </section>




 </section>
 <section xml:id="sec-net-sync-select">
  <title>Determinando fatores para selecionar um programa</title>

  <para>
   Há alguns fatores importantes a serem considerados ao decidir que programa será usado.
  </para>

  <section xml:id="sec-net-sync-select-client-server">
   <title>Cliente-servidor versus ponto a ponto</title>
   <para>
    Dois modelos diferentes são comumente usados para distribuir dados. No primeiro modelo, todos os clientes sincronizam seus arquivos com um servidor central. O servidor deve ser acessível a todos os clientes pelo menos ocasionalmente. Esse modelo é usado pelo CVS.
   </para>
   <para>
    A outra possibilidade é deixar todos os hosts ligados em rede sincronizarem seus dados entre os pontos uns dos outros. O rsync funciona de fato no modo cliente, mas qualquer cliente também pode atuar como servidor.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-port">
   <title>Portabilidade</title>
   <para>
    O CVS e o rsync também estão disponíveis para muitos outros sistemas operacionais, incluindo vários sistemas Unix e Windows.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-auto">
   <title>Interativo versus automático</title>
   <para>
    No CVS, a sincronização de dados começa manualmente pelo usuário. Isso permite um controle fino dos dados a serem sincronizados e um fácil gerenciamento de conflitos. No entanto, se os intervalos de sincronização forem muito longos, será mais provável que ocorram conflitos.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-problems">
   <title>Conflitos: incidência e solução</title>
   <para>
    Conflitos só ocorrem raramente no CVS, mesmo quando há muitas pessoas trabalhando em um grande projeto de programa. Isso ocorre porque os documentos são fundidos na base de linhas individuais. Quando ocorre um conflito, somente um cliente é afetado. Normalmente, os conflitos no CVS podem ser facilmente resolvidos.
   </para>
   <para>
    Não há gerenciamento de conflitos no rsync. O usuário é responsável por não sobregravar acidentalmente arquivos e resolver manualmente todos os possíveis conflitos. Para fins de segurança, é possível empregar adicionalmente um sistema de controle de versão como o RCS.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-files">
   <title>Selecionando e adicionando arquivos</title>
   <para>
    No CVS, diretórios e arquivos novos devem ser adicionados explicitamente com o comando <command>cvs</command> <option>add</option>. Esse procedimento resulta em um maior controle do usuário sobre os arquivos a serem sincronizados. Por outro lado, novos arquivos são sempre ignorados, especialmente quando os pontos de interrogação na saída de <command>cvs</command> <option>update</option> são ignorados devido ao grande número de arquivos.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-history">
   <title>Histórico</title>
   <para>
    Um recurso adicional do CVS é a possibilidade de reconstrução de versões antigas de arquivos. Um breve comentário de edição pode ser inserido em cada mudança, e o desenvolvimento dos arquivos pode ser facilmente rastreado posteriormente com base no conteúdo dos comentários. Essa é uma ajuda valiosa para textos de teses e de programas.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-size">
   <title>Volume de dados e requisitos do disco rígido</title>
   <para>
    Os discos rígidos de todos os hosts envolvidos devem ter espaço em disco suficiente para todos os dados distribuídos. O CVS requer espaço adicional para o banco de dados de repositório no servidor. O histórico do arquivo também é armazenado no servidor, requerendo ainda mais espaço. Quando arquivos em formato de texto são mudados, somente as linhas modificadas são gravadas. Arquivos binários requerem espaço em disco adicional relativo ao tamanho do arquivo sempre que ele for mudado.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-gui">
   <title>GUI</title>
   <para>
    Usuários experientes normalmente executam o CVS a partir da linha de comando. Entretanto, há interfaces gráficas do usuário disponíveis para Linux (como a cervisia) e para outros sistemas operacionais (como a wincvs). Muitas ferramentas de desenvolvimento (como a kdevelop) e editores de texto (como o Emacs) fornecem suporte ao CVS. É sempre mais fácil realizar a resolução de conflitos com esses front ends.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-use">
   <title>Facilidade de uso</title>
   <para>
    O rsync é bastante fácil de usar, sendo também adequado para principiantes. O CVS é um pouco mais difícil de operar. Os usuários devem entender a interação entre o repositório e os dados locais. As mudanças dos dados devem ser primeiro fundidas localmente no repositório. Esse procedimento é feito com o comando <command>cvs</command> <option>update</option>. Em seguida, os dados devem ser enviados de volta ao repositório com o comando <command>cvs</command> <option>commit</option>. Depois de compreender esse procedimento, os usuários principiantes também serão capazes de usar o CVS com facilidade.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-sec">
   <title>Segurança contra ataques</title>
   <para>
    Durante a transmissão, o ideal é proteger os dados contra interceptação e manipulação. O CVS e o rsync podem ser facilmente usados via ssh (secure shell), fornecendo segurança contra ataques deste tipo. A execução do CVS via rsh (remote shell) deve ser evitada. O acesso ao CVS com o mecanismo <emphasis>pserver</emphasis> em redes desprotegidas também não é recomendável.
   </para>
  </section>

  <section xml:id="sec-net-sync-select-loss">
   <title>Proteção contra perda de dados</title>
   <para>
    O CVS tem sido usado por desenvolvedores por um longo tempo para gerenciar projetos de programas e é extremamente estável. Como o histórico do desenvolvimento é gravado, o CVS fornece proteção até mesmo contra certos erros do usuário, como uma exclusão não intencional de um arquivo.
   </para>
   <table xml:id="tab-sync-overview">
    <title>Recursos das Ferramentas de Sincronização de Arquivos: -- = muito ruim, - = ruim ou indisponível, o = médio, + = bom, ++ = excelente, x = disponível</title>

    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para/>
       </entry>
       <entry>
        <para>
         CVS
        </para>
       </entry>
       <entry>
        <para>
         rsync
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Cliente/Servidor
        </para>
       </entry>
       <entry>
        <para>
         C-S
        </para>
       </entry>
       <entry>
        <para>
         C-S
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Portabilidade
        </para>
       </entry>
       <entry>
        <para>
         Lin,Un*x,Win
        </para>
       </entry>
       <entry>
        <para>
         Lin,Un*x,Win
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Interatividade
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Velocidade
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Conflitos
        </para>
       </entry>
       <entry>
        <para>
         ++
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Sel. de arquivos
        </para>
       </entry>
       <entry>
        <para>
         Sel./arq., dir.
        </para>
       </entry>
       <entry>
        <para>
         Dir.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Histórico
        </para>
       </entry>
       <entry>
        <para>
         x
        </para>
       </entry>
       <entry>
        <para>
         -
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Espaço em disco rígido
        </para>
       </entry>
       <entry>
        <para>
         --
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Interface gráfica do usuário (GUI)
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         -
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Dificuldade
        </para>
       </entry>
       <entry>
        <para>
         o
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Ataques
        </para>
       </entry>
       <entry>
        <para>
         + (ssh)
        </para>
       </entry>
       <entry>
        <para>
         +(ssh)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Perda de dados
        </para>
       </entry>
       <entry>
        <para>
         ++
        </para>
       </entry>
       <entry>
        <para>
         +
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </section>
 </section>
 <section xml:id="sec-net-sync-cvs">
  <title>Introdução ao CVS</title><indexterm xml:id="idx-CVS" class="startofrange"> <primary>CVS</primary> </indexterm> <indexterm xml:id="idx-files-synchronizing-CVS" class="startofrange"> <primary>arquivos</primary> <secondary>sincronizando</secondary> <tertiary>CVS</tertiary> </indexterm>

  <para>
   O CVS é adequado para fins de sincronização, caso arquivos específicos sejam editados com frequência e sejam armazenados em um formato de arquivo, como texto ASCII, ou como texto de origem de programa. O uso do CVS para sincronizar dados em outros formatos (como arquivos JPEG) é possível, mas gera grandes volumes de dados, pois todas as variantes de um arquivo ficam armazenadas permanentemente no servidor CVS. Nesses casos, não é possível usar a maioria dos recursos do CVS. O uso do CVS para sincronizar arquivos só será possível se todas as estações de trabalho puderem acessar o mesmo servidor.
  </para>

  <section>
   <title>Configurando um servidor CVS</title>
   <para>
    O <emphasis>servidor</emphasis> é o host em que todos os arquivos válidos se localizam, incluindo as versões mais recentes de todos os arquivos. Qualquer estação de trabalho estacionária pode ser usada como um servidor. Se possível, os dados do repositório do CVS devem ser incluídos em backups regulares.
   </para>
   <para>
    Durante a configuração de um servidor CVS, é uma boa ideia conceder aos usuários o acesso ao servidor via SSH. Se o usuário for conhecido pelo servidor como <systemitem class="username">tux</systemitem> e o software do CVS estiver instalado tanto no servidor quanto no cliente, as variáveis de ambiente a seguir deverão ser definidas no lado do cliente:
   </para>
<screen><?dbsuse-latex font-size="footnotesize" ?>


CVS_RSH=ssh CVSROOT=tux@server:/serverdir</screen>
   <para>
    O comando <command>cvs</command> <option>init</option> pode ser usado para inicializar o servidor CVS no lado cliente. Esse procedimento deve ser executado apenas uma vez.
   </para>
   <para>
    Finalmente, é necessário designar um nome à sincronização. Selecione ou crie um diretório no cliente para conter arquivos a serem gerenciados com o CVS (o diretório também pode ficar vazio). O nome do diretório também será o nome da sincronização. Neste exemplo, o diretório é chamado de <literal>synchome</literal>. Vá para esse diretório e digite o comando a seguir para definir o nome de sincronização como <literal>synchome</literal>:
   </para>
<screen>cvs import synchome tux wilber</screen>
   <para>
    Vários comandos do CVS requerem um comentário. Para essa finalidade, o CVS inicia um editor (o editor definido na variável do ambiente <literal>$EDITOR</literal> ou vi, se nenhum editor tiver sido definido). A chamada do editor pode ser evitada se você inserir o comentário antes na linha de comando, como no exemplo a seguir:
   </para>
<screen>cvs import -m 'this is a test' synchome tux wilber</screen>
  </section>

  <section>
   <title>Usando o CVS</title>
   <para>
    O repositório de sincronização agora pode ter a saída registrada de todos os hosts com <command>cvs</command> <option>co synchome</option>. Esse procedimento cria um novo subdiretório <filename>synchome</filename> no cliente. Para confirmar suas mudanças ao servidor, vá para o diretório <filename>synchome</filename> (ou um de seus subdiretórios) e digite <command>cvs</command> <option>commit</option>.
   </para>
   <para>
    Por padrão, todos os arquivos (incluindo subdiretórios) são confirmados no servidor. Para confirmar apenas determinados arquivos ou diretórios individuais, especifique-os como em <command>cvs</command> <option>commit arquivo1 diretório1</option>. É necessário adicionar novos arquivos e diretórios ao repositório com um comando como <command>cvs</command> <option>add arquivo1 diretório1</option> antes de confirmá-los no servidor. Depois disso, confirme os arquivos e diretórios recém-adicionados com <command>cvs</command> <option>commit arquivo1 diretório1</option>.
   </para>
   <para>
    Se você for para outra estação de trabalho, registre a saída do repositório de sincronização, caso isso não tenha sido feito em uma sessão anterior na mesma estação de trabalho.
   </para>
   <para>
    Inicie a sincronização com o servidor com <command>cvs</command> <option>update</option>. Atualize arquivos ou diretórios individuais como em <command>cvs</command> <option>update arquivo1 diretório1</option>. Para ver a diferença entre os arquivos atuais e versões armazenadas no servidor, use o comando <command>cvs</command> <option>diff</option> ou <command>cvs</command> <option>diff arquivo1 diretório1</option>. Use <command>cvs</command> <option>-nq update</option> para ver quais arquivos podem ser afetados por uma atualização.
   </para>
   <para>
    Estes são alguns símbolos de status exibidos durante uma atualização:
   </para>
   <variablelist>
    <varlistentry>
     <term>U</term>
     <listitem>
      <para>
       A versão local foi atualizada. Isso afeta todos os arquivos fornecidos pelo servidor e ausentes no sistema local.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>M</term>
     <listitem>
      <para>
       A versão local foi modificada. Se havia mudanças no servidor, foi possível fundir as diferenças na cópia local.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>P</term>
     <listitem>
      <para>
       A versão local foi corrigida com a versão do servidor.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>C</term>
     <listitem>
      <para>
       O arquivo local está em conflito com a versão atual do repositório.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>?</term>
     <listitem>
      <para>
       Este arquivo não existe no CVS.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    O status <literal>M</literal> indica um arquivo modificado localmente. Envie a cópia local para o servidor ou remova o arquivo local e execute a atualização novamente. Nesse caso, o arquivo ausente será recuperado do servidor. Se você enviar um arquivo modificado localmente e ele tiver sido mudado na mesma linha de comando e enviado, poderá haver um conflito, indicado por <literal>C</literal>.
   </para>
   <para>
    Nesse caso, observe as marcas de conflito (<quote><literal>&gt;&gt;</literal></quote> e <quote><literal>&lt;&lt;</literal></quote>) no arquivo e decida-se entre as duas versões. Como essa tarefa pode ser desagradável, você pode abandonar as mudanças, apagar o arquivo local e digitar <command>cvs</command> <option>up</option> para recuperar a versão atual do servidor.
   </para><indexterm class="endofrange" startref="idx-CVS"/><indexterm class="endofrange" startref="idx-files-synchronizing-CVS"/>
  </section>
 </section>
 <section xml:id="sec-net-sync-rsync">
  <title>Introdução ao rsync</title><indexterm> <primary>rsync</primary> </indexterm>

  <para>
   O rsync será útil quando for necessário transmitir grandes quantidades de dados regularmente, sem que haja muitas mudanças. Esse é, por exemplo, sempre o caso da criação de backups. Uma outra aplicação diz respeito a servidores para teste. Esses servidores armazenam árvores completas de diretório de servidores Web regularmente espelhadas em um servidor Web em um DMZ.
  </para>

  <section>
   <title>Configuração e operação</title>
   <para>
    O rsync pode ser operado em dois modos diferentes. Ele pode ser usado para arquivar ou copiar dados. Para isso, somente um shell remoto, como o ssh, é necessário no sistema de destino. Entretanto, o rsync também pode ser usado como um daemon para fornecer diretórios à rede.
   </para>
   <para>
    O modo de operação básica do rsync não requer qualquer configuração especial. O rsync permite diretamente o espelhamento de diretórios inteiros em outro sistema. Como exemplo, o comando a seguir cria um backup do diretório pessoal do tux em um servidor de backup chamado de sun:
   </para>
<screen>rsync -baz -e ssh /home/tux/ tux@sun:backup</screen>
   <para>
    O comando a seguir é usado para reproduzir o diretório de volta:
   </para>
<screen>rsync -az -e ssh tux@sun:backup /home/tux/</screen>
   <para>
    Até esse ponto, o gerenciamento não é muito diferente do de uma ferramenta de cópia comum, como o scp.
   </para>
   <para>
    O rsync deve ser operado no modo <quote>rsync</quote> para que todos os recursos fiquem totalmente disponíveis. Isso é feito ao se iniciar o daemon rsyncd em mais de um sistema. Configure-o no arquivo <filename>/etc/rsyncd.conf</filename>. Por exemplo, para tornar o diretório <filename>/srv/ftp</filename> disponível com o rsync, use a seguinte configuração:
   </para>
<screen>gid = nobody
uid = nobody
read only = true
use chroot = no
transfer logging = true
log format = %h %o %f %l %b
log file = /var/log/rsyncd.log

[FTP]
        path = /srv/ftp
        comment = An Example</screen>
   <para>
    Em seguida, inicie o rsyncd com <command>rcrsyncd</command> <option>start</option>. O rsyncd também pode ser iniciado automaticamente durante o processo de boot. Configure esse recurso ativando esse serviço no editor de nível de execução fornecido pelo YaST ou digitando manualmente o comando <command>insserv</command> <option>rsyncd</option>. O rsyncd também pode ser iniciado com xinetd. Entretanto, isso só é recomendável para servidores que raramente usam o rsyncd.
   </para>
   <para>
    O exemplo também cria um arquivo de registro listando todas as conexões. Esse arquivo é armazenado em <filename>/var/log/rsyncd.log</filename>.
   </para>
   <para>
    Então será possível testar a transferência de um sistema cliente. Faça isso com o seguinte comando:
   </para>
<screen>rsync -avz sun::FTP</screen>
   <para>
    Esse comando lista todos os arquivos presentes no diretório <filename>/srv/ftp</filename> do servidor. Essa solicitação também é registrada no arquivo de registro <filename>/var/log/rsyncd.log</filename>. Para iniciar uma transferência real, forneça um diretório de destino. Use <literal>.</literal> para o diretório atual. Por exemplo:
   </para>
<screen>rsync -avz sun::FTP .</screen>
   <para>
    Por padrão, nenhum arquivo será apagado durante a sincronização com o rsync. Se esse procedimento for forçado, a opção adicional <option>--delete</option> deverá ser expressa. Para garantir que nenhum arquivo novo seja apagado, use a opção <option>--update</option> como alternativa. Qualquer conflito ocorrido deve ser resolvido manualmente.
   </para>
  </section>
 </section>
 <section xml:id="sec-net-sync-summary">
  <title>Para obter mais informações</title>

  <variablelist>
   <varlistentry>
    <term>CVS</term>
    <listitem>
     <para>
      Você encontra informações importantes sobre o CVS na home page <link xlink:href="http://www.cvshome.org"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>rsync</term>
    <listitem>
     <para>
      Informações importantes sobre o rsync são fornecidas nas páginas de manual <command>man</command> <option>rsync</option> e <command>man</command> <option>rsyncd.conf</option>. Uma referência técnica sobre os princípios de operação do rsync pode ser encontrada em <filename>/usr/share/doc/packages/rsync/tech_report.ps</filename>. As notícias mais recentes sobre o rsync encontram-se no site do projeto na Web, em <link xlink:href="http://rsync.samba.org/"/>.
     </para>
    </listitem>
   </varlistentry>
   
  </variablelist><indexterm class="endofrange" startref="idx-files-syncronizing"/>
 </section>
</chapter>
