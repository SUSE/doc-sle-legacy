<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="yast2_ncurses.xml" id="cha.yast.text">
 <title>テキストモードのYaST</title><indexterm id="idx.YaST_text_mode" class="startofrange"> <primary>YaST</primary><secondary>テキストモード</secondary> </indexterm>
 <para>
  このセクションは、システムでXサーバを実行せずに、テキストベースのインストールツールを使用しているシステム管理者や専門家の方を対象にしています。ここでは、YaSTをテキストモードで起動して操作するための基本的な情報を説明しています。
 </para><indexterm> <primary>YaST</primary> <secondary>ncurses</secondary> </indexterm>
 <para>
  テキストモードのYaSTは、ncursesライブラリを使用して、使いやすい擬似グラフィカルユーザインタフェースを提供します。ncursesライブラリは、デフォルトでインストールされています。YaSTを実行するためのターミナルエミュレータの最小サポートサイズは、80x25文字です。
 </para>
 <figure id="fig.yast2.ncurses">
  <title>テキストモードのYaSTのメインウィンドウ</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="yast2_ncurses_main.png" width="70%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="yast2_ncurses_main.png" width="75%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  YaSTをテキストモードで起動すると、YaSTコントロールセンターが表示されます(<xref linkend="fig.yast2.ncurses" xrefstyle="select:label nopage"/>を参照)。このメインウィンドウは、以下の3つの主要領域で構成されています。左側のフレームのカテゴリには、さまざまなモジュールがあります。このフレームはYaSTが起動したときにアクティブになり、白い太線でマークされます。アクティブなカテゴリが選択されています。右側のフレームには、アクティブなカテゴリで使用できるモジュールの概要が表示されます。下方のフレームには、<guimenu>ヘルプ</guimenu>および<guimenu>終了</guimenu>用ボタンがあります。
 </para>
 <para>
  YaSTコントロールセンターを起動すると、カテゴリ<guimenu>ソフトウェア</guimenu>が自動的に選択されます。カテゴリを変更するには、<keycap>↓</keycap>と<keycap>↑</keycap>を使用します。カテゴリからモジュールを選択するには、<keycap>→</keycap>で右側のフレームをアクティブにして、<keycap>↓</keycap>と<keycap>↑</keycap>を使用してモジュールを選択します。矢印キーを押したままにして、使用可能なモジュールのリストをスクロールします。選択したモジュールがハイライトされます。&lt;<keycap function="enter"/>&gt;を押してアクティブなモジュールを起動します。
 </para>
 <para>
  モジュールのさまざまなボタンまたは選択フィールドで、文字がハイライト表示されています(デフォルトは黄色)。そのまま<keycap>Tab</keycap>キーでナビゲートするする代わりに、直接ボタンを選択するには、<keycombo action="press"><keycap function="alt"/><keycap>highlighted_letter</keycap></keycombo>を使用します。<keycombo action="press"><keycap function="alt"/><keycap>Q</keycap></keycombo>を押すか、または<guimenu>終了</guimenu>を選択して&lt;<keycap function="enter"/>&gt;を押して、YaSTコントロールセンターを終了します。
 </para>
 <tip>

  <title>YaSTダイアログウィンドウの更新</title>
  <para>
   ウィンドウのサイズを変更した場合など、YaSTのダイアログウィンドウが破損または変形した場合は、<keycombo action="press"><keycap function="control"/><keycap>L</keycap></keycombo>を押すとコンテンツを更新し復元できます。
  </para>
 </tip>

 <sect1 id="sec.yast.navi.ncurses_modul">
  <title>モジュールでのナビゲーション</title>

  <para>
   以降のYaSTモジュール内のコントロール要素の説明では、ファンクションキーと&lt;<keycap function="alt"/>&gt;キーの組み合わせがすべて有効で、別のグローバル機能に割り当てられていないことを前提としています。可能性のある例外事項については、<xref linkend="sec.yast.ncurses_tasten"/>を参照してください。
  </para>

  <variablelist>
   <varlistentry>
    <term>ボタンおよび選択リスト間のナビゲーター</term>
    <listitem>
     <para>
      選択リストを含むボタンおよびフレーム間でナビゲートするには、<keycap>Tab</keycap>キーを使用します。逆の順序でナビゲートするには、<keycombo action="press"><keycap function="alt"/><keycap>Tab</keycap></keycombo>または<keycombo action="press"><keycap function="shift"/><keycap>Tab</keycap></keycombo>の組み合わせを使用します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>選択リストでのナビゲーション</term>
    <listitem>
     <para>
      選択リストを含むアクティブフレーム内の個々の要素間でナビゲートするには、矢印キー(<keycap>↑</keycap>と<keycap>↓</keycap>)を使用します。フレーム内の個別エントリがその幅を超える場合は、<keycombo action="press"><keycap function="shift"/><keycap>→</keycap></keycombo>または<keycombo action="press"><keycap function="shift"/><keycap>←</keycap></keycombo>を使用して、右または左にスクロールします。代わりに<keycombo action="press"><keycap function="control"/><keycap>E</keycap></keycombo>または<keycombo action="press"><keycap function="control"/><keycap>A</keycap></keycombo>を使用することもできます。この組み合わせは、コントロールセンターの場合のように、<keycap>→</keycap>または<keycap>←</keycap>を使用すると、アクティブフレームまたは現在の選択リストが変更されてしまう場合に使用できます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ボタン、ラジオボタン、およびチェックボックス</term>
    <listitem>
     <para>
      ［］が付いているボタン(チェックボックス)または()が付いているボタン(ラジオボタン)を選択するには、<keycap>Space</keycap>キーまたは&lt;<keycap function="enter"/>&gt;キーを押します。または、<keycombo action="press"><keycap function="alt"/><keycap>highlighted_letter</keycap></keycombo>でラジオボタンおよびチェックボックスを直接選択することもできます。この場合、&lt;<keycap function="enter"/>&gt;キーによる確認は不要です。<keycap>Tab</keycap>キーでアイテムにナビゲートする場合は、&lt;<keycap function="enter"/>&gt;キーを押して、選択したアクションを実行するか、対応するメニューアイテムをアクティブにします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ファンクションキー</term>
    <listitem>
     <para>
      Fキーの<keycap>F1</keycap>から<keycap>F12</keycap>を使用すると、さまざまなボタンの機能をすばやく利用できます。使用可能なFキーのショートカットは、YaST画面の一番下の行に表示されます。どのファンクションキーが実際にどのボタンにマップされているかは、アクティブになっているYaSTモジュールによります。提供されるボタン(［詳細］、［情報］、［追加］、［削除］など)は、モジュールごとに異なるからです。<keycap>F10</keycap>は、<guimenu>受諾</guimenu>、<guimenu>OK</guimenu>、<guimenu>次へ</guimenu>、および<guimenu>完了</guimenu>の代わりに使用します。<keycap>F1</keycap>を押して、YaSTヘルプにアクセスします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ncursesモードのナビゲーションツリーの使用</term>
    <listitem>
     <para>
      一部のYaSTモジュールでは、ウィンドウの左部分にあるナビゲーションツリーを使用して、設定ダイアログを選択します。矢印キー(<keycap>↑</keycap>と<keycap>↓</keycap>)を使用して、ツリー内を移動します。<keycap>Space</keycap>を使用して、ツリー項目を開閉します。ncursesモードでは、ナビゲーションツリーでの選択後、選択したダイアログを表示するには&lt;<keycap function="enter"/>&gt;を押す必要があります。これは意図的な動作であり、これによって、ナビゲーションツリーのブラウズ時に時間のかかる再表示を節約できます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure id="fig.yast2.ncurses_inst">
   <title>ソフトウェアインストールモジュール</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_ncurses_inst.png" width="70%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_ncurses_inst.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 id="sec.yast.ncurses_tasten">
  <title>キーの組み合わせの制約</title>

  <para>
   ウィンドウマネージャがグローバルな&lt;<keycap function="alt"/>&gt;キーの組み合わせを使用していると、YaSTでの&lt;<keycap function="alt"/>&gt;キーの組み合わせが機能しない場合があります。&lt;<keycap function="shift"/>&gt;や&lt;<keycap function="alt"/>&gt;などのキーは、端末の設定で使用されている場合もあります。
  </para>

  <variablelist>
   <varlistentry>
    <term>&lt;<keycap function="alt"/>&gt;キーを<keycap>Esc</keycap>キーの代用とする
    </term>
    <listitem>
     <para>
      &lt;<keycap function="alt"/>&gt;ショートカットは&lt;<keycap function="alt"/>&gt;の代わりに&lt;<keycap function="escape"/>&gt;キーでも実行できます。たとえば、<keycombo action="seq"><keycap function="escape"/><keycap>H</keycap></keycombo>は、<keycombo action="press"><keycap function="alt"/><keycap>H</keycap></keycombo>の代わりとなります。(まず&lt;<keycap function="escape"/>&gt;を押して、<emphasis>次に</emphasis><keycap>H</keycap>を押します)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term> <keycombo action="press"><keycap function="control"/><keycap>F</keycap></keycombo>と<keycombo action="press"><keycap function="control"/><keycap>B</keycap></keycombo>による前後のナビゲーション
    </term>
    <listitem>
     <para>
      &lt;<keycap function="alt"/>&gt;と&lt;<keycap function="shift"/>&gt;の組み合わせがウィンドウマネージャまたは端末に専有されている場合は、<keycombo action="press"><keycap function="control"/><keycap>F</keycap></keycombo>(進む)と<keycombo action="press"><keycap function="control"/><keycap>B</keycap></keycombo>(戻る)を代わりに使用できます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ファンクションキーの制約</term>
    <listitem>
     <para>
      Fキーは、各種機能にも使用されます。一部のファンクションキーは、端末で使用済みで、YaSTで使用できない場合があります。ただし、&lt;<keycap function="alt"/>&gt;キーのキーの組み合わせとファンクションキーは、ピュアテキストコンソールでは常に完全に使用できます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.yast.ncurses_commands">
  <title>YaSTコマンドラインオプション</title><indexterm> <primary>YaST</primary> <secondary>コマンドライン</secondary> </indexterm>

  <para>
   テキストモードのインタフェースのほか、YaSTには、シンプルなコマンドラインインタフェースがあります。YaSTコマンドラインオプションのリストを表示するには、次のように入力します。
  </para>

  <screen>yast -h</screen>

  <sect2 id="sec.yast.ncurses_modulaufruf">
   <title>個別モジュールの起動</title><indexterm> <primary>YaST</primary><secondary>テキストモード</secondary><tertiary>モジュール</tertiary></indexterm>
   <para>
    時間節約のため、個別のYaSTモジュールを直接起動できます。モジュールを起動するには、次のように入力します。
   </para>
   <screen>yast &lt;module_name&gt;</screen>
   <para>
    「<command>yast -l</command>」または「<command>yast --list</command>」と入力して、システムで使用可能になっているすべてのモジュールのリストを表示します。たとえば、「<command>yast lan</command>」と入力して、ネットワークモジュールを起動します。
   </para>
  </sect2>

  <sect2>
   <title>コマンドラインからのパッケージのインストール</title>
   <para>
    パッケージ名が既知であり、パッケージが有効なインストールリポジトリに用意されている場合は、コマンドラインオプション<option>-i</option>を使用してパッケージをインストールできます。
   </para>
   <screen>yast -i &lt;package_name&gt;</screen>
   <para>
    または
   </para>
   <screen>yast --install &lt;package_name&gt;</screen>
   <para>
    <replaceable>package_name</replaceable>は、1つの短いパッケージ名にするか(たとえば、依存性チェック付きでインストールされる<systemitem class="resource">gvim</systemitem>)、またはrpmパッケージへの完全なパスにすることができます(依存性チェックなしでインストールされる)。
   </para>
   <para>
    YaSTから提供される機能を超える機能を持つコマンドラインベースのソフトウェア管理ユーティリティを必要とする場合は、zypperの使用をご検討ください。この新しいユーティリティは、YaSTパッケージマネージャの基礎でもある同じソフトウェア管理ライブラリを使用します。Zypperの基本的使用法については、<xref linkend="sec.zypper"/>で説明されています。
   </para>
  </sect2>

  <sect2>
   <title>YaSTモジュールのコマンドラインパラメータ</title>
   <para>
    スクリプトでYaST機能を使用するため、YaSTでは、個々のモジュールにコマンドラインサポートを提供しています。ただし、すべてのモジュールにコマンドラインサポートがあるわけではありません。モジュールで利用できるオプションを表示するには、次のように入力します。
   </para>
   <screen>yast &lt;module_name&gt; help</screen>
   <para>
    モジュールにコマンドラインサポートがない場合、モジュールはテキストモードで起動され、次のメッセージが表示されます。
   </para>
   <screen>This YaST module does not support the command line interface.</screen><indexterm class="endofrange" startref="idx.YaST_text_mode"/>
  </sect2>
 </sect1>
</chapter>
