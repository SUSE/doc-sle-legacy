<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"
?>
<!DOCTYPE sect1
[
   <!ENTITY % entities SYSTEM "entity-decl.ent">
   %entities;
]>


<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" xml:base="rpm.xml" xml:id="sec-rpm">
 <title>RPM — 包管理器</title><indexterm xml:id="idx-RPM" class="startofrange"> <primary>RPM</primary></indexterm><indexterm><primary>包</primary><secondary>RPM</secondary></indexterm><indexterm><primary>包</primary> <secondary>包管理器</secondary></indexterm><indexterm><primary>命令</primary><secondary>rpm</secondary></indexterm>

 <para>
  RPM（RPM 程序包管理器）用于管理软件包。其主要程命令为 <command>rpm</command> 和 <command>rpmbuild</command>。用户、系统管理员和包构建人员可以查询强大的 RPM 数据库以获得有关已安装软件的详细信息。
 </para><indexterm> <primary>rpmbuild</primary> </indexterm> <indexterm> <primary>命令</primary> <secondary>rpmbuild</secondary> </indexterm>

 <para>
  本质上，<command>rpm</command> 有五种模式：安装、卸装（或更新）软件包、重构建 RPM 数据库、查询 RPM 库或独立 RPM 存档、包的完整性检查以及对包签名。<command>rpmbuild</command> 可用于从原始源构建可安装的包。
 </para>

 <para>
  用特殊的二进制格式对可安装 RPM 存档进行打包。这些存档由要安装的程序文件和某些元信息组成，这些元信息供 <command>rpm</command> 在安装过程中配置软件包使用或者储存在 RPM 数据库中进行存档。RPM 存档通常具有扩展名 <filename>.rpm</filename>。
 </para><indexterm> <primary>包</primary><secondary>LSB</secondary></indexterm><indexterm><primary>LSB</primary><secondary>安装包</secondary></indexterm>

 <tip>
  <title>软件开发包</title>
  <para>
   对于许多包，已将软件开发所需的部件（库、标题、包含文件等）放入单独的包中。只有当您要自己编译软件时才需要这些开发包（例如最新的 GNOME 包）。可通过扩展名 <literal>-devel</literal> 标识这些开发包，例如包 <systemitem class="resource">alsa-devel</systemitem>、<systemitem class="resource">gimp-devel</systemitem> 和 <systemitem class="resource">libkde4-devel</systemitem>。
  </para>
 </tip>

 <section xml:id="sec-rpm-package-auth">
  <title>校验包真实性</title><indexterm> <primary>RPM</primary><secondary>校验</secondary></indexterm><indexterm><primary>包</primary><secondary>校验</secondary></indexterm>
  <para>
   RPM 包具有 GPG 签名。要校验 RPM 包的的签名，请使用命令 <command>rpm --checksig </command> <replaceable>包</replaceable>-1.2.3.rpm 确定该包是源自 Novell/SUSE 还是另一个可信设备。特别建议对来自因特网的更新包使用此命令。
  </para>
 </section>

 <section xml:id="sec-rpm-packages-manage">
  <title>管理包：安装、更新和卸装</title><indexterm> <primary>安装</primary><secondary>包</secondary></indexterm><indexterm><primary>包</primary><secondary>安装</secondary></indexterm><indexterm><primary>包</primary><secondary>卸载</secondary></indexterm><indexterm><primary>RPM</primary> <secondary>rpmorig</secondary></indexterm><indexterm><primary>RPM</primary><secondary>rpmsave</secondary></indexterm><indexterm><primary>RPM</primary><secondary>rpmnew</secondary></indexterm>
  <para>
   通常，RPM 存档的安装十分简单：<command>rpm -i</command> <replaceable>package</replaceable>.rpm。使用此命令可以安装包，但前提是满足其依赖性并且不与其他包冲突。如果出现错误消息，<command>rpm</command> 将请求那些需要安装的包以满足依赖性要求。在后台，RPM 数据库确保不出现冲突 － 一个特定文件只能属于一个包。通过选择不同的选项，您可以强制 <command>rpm</command> 忽略这些默认设置，但这只供专家用户使用。否则，将影响系统的完整性并可能使系统无法更新。
  </para><indexterm> <primary>RPM</primary><secondary>依赖性</secondary> </indexterm>
  <para>
   选项 <option>-U</option> 或 <option>--upgrade</option> 以及 <option>-F</option> 或 <option>--freshen</option> 可用于更新包（例如，<command>rpm -F</command> <replaceable>package</replaceable>.rpm）。此命令将删除旧版本的文件并立即安装新文件。两个版本之间的差别是 <option>-U</option> 安装系统中以前不存在的包，但 <option>-F</option> 只更新以前安装的包。更新时，<command>rpm</command> 使用以下策略小心更新配置文件：
  </para><indexterm> <primary>RPM</primary><secondary>更新</secondary> </indexterm>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     如果配置文件未被系统管理员更改，则 <command>rpm</command> 将安装适当文件的新版本。系统管理员无需执行任何操作。
    </para>
   </listitem>
   <listitem>
    <para>
     如果配置文件在更新前已由系统管理员更改，则 <command>rpm</command> 将以扩展名 <filename>.rpmorig</filename> 或 <filename>.rpmsave</filename>（备份文件）保存更改的文件并安装新包中的版本（但前提是原先安装的文件和较新的版本不同）。如果是这种情况，则将备份文件（<filename>.rpmorig</filename> 或 <filename>.rpmsave</filename>）与新安装的文件进行比较，并在新文件中再次进行更改。随后，确保删除所有 <filename>.rpmorig</filename> 和 <filename>.rpmsave</filename> 文件以避免以后的更新出现问题。
    </para>
   </listitem>
   <listitem>
    <para>
     如果配置文件已存在<emphasis>并且</emphasis> <filename>.spec</filename> 文件中指定了 <option>noreplace</option> 标签，则出现 <filename>.rpmnew</filename> 文件。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   更新后，在使用 <filename>.rpmsave</filename> 和 <filename>.rpmnew</filename> 文件进行比较后应将它们删除，从而防止它们阻碍以后的更新。如果 RPM 数据库以前未能识别文件，则将为其指派扩展名 <filename>.rpmorig</filename>。
  </para>
  <para>
   否则，将使用 <filename>.rpmsave</filename>。换句话说，<filename>.rpmorig</filename> 是从异系统格式更新为 RPM 的结果。<filename>而 </filename>.rpmsave 是从较早的 RPM 更新为较新的 RPM 的结果。<filename>.rpmnew</filename> 不提供任何有关系统管理员是否对配置文件进行了任何更改的信息。<filename>/var/adm/rpmconfigcheck</filename> 中提供这些文件的列表。不覆盖某些配置文件（如 <filename>/etc/httpd/httpd.conf</filename>）以允许继续进行操作。
  </para>
  <para>
   <option>-U</option> 开关<emphasis>不</emphasis>仅仅是使用 <option>-e</option> 选项进行卸载并使用 <option>-i</option> 选项进行安装的等效项。只要可能，就可以使用 <option>-U</option>。
  </para>
  <para>
   要删除包，请输入 <command>rpm -e</command> <replaceable>package</replaceable>.<command>rpm</command>，仅删除包含未解析依赖性的包。例如，只要有其他程序需要 Tcl/Tk，理论上就不能删除它。即使是在这种情况下，RPM 也会向数据库寻求帮助。如果出于任何原因无法进行此删除操作（即使<emphasis>不</emphasis>存在其他依赖性），则最好使用选项 <option>--rebuilddb</option> 重构建 RPM 数据库。
  </para><indexterm> <primary>RPM</primary><secondary>卸装</secondary></indexterm><indexterm><primary>RPM</primary><secondary>数据库</secondary><tertiary>重构建</tertiary></indexterm>
 </section>

 <section xml:id="sec-rpm-patches">
  <title>RPM 和增补程序</title><indexterm> <primary>RPM</primary><secondary>增补程序</secondary> </indexterm>
  <para>
   为了确保系统的操作安全性，必须时常在系统中安装更新包。以前，包中的 bug 只能通过替换整个包来解决。小文件中带 bug 的大型包容易导致这种情况的发生。不过，SUSE RPM 提供了一项功能，支持在包中安装增补程序。
  </para>
  <para>
   以下使用 <command>pine</command> 的示例中对最重要的考虑事项进行了说明：
  </para>
  <variablelist>
   <varlistentry>
    <term>增补程序 RPM 是否适合我的系统？</term>
    <listitem>
     <para>
      要对此进行检查，请先查询包的已安装版本。对于 <command>pine</command>，可以通过以下命令完成：
     </para>
<screen>rpm -q pine
pine-4.44-188</screen>
     <para>
      然后检查增补程序 RPM 是否适合此版本的 <command>pine</command>：
     </para>
<screen>rpm -qp --basedon pine-4.44-224.i586.patch.rpm
pine = 4.44-188
pine = 4.44-195
pine = 4.44-207</screen>
     <para>
      此增补程序适用于 pine 的三个不同的版本。还列出示例中已安装的版本，从而可以安装增补程序。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>增补程序将替换哪些文件？</term>
    <listitem>
     <para>
      在增补程序 RPM 中可以方便地找到受增补程序影响的文件。<command>rpm</command> 参数 <option>-P</option> 允许选择特殊的增补程序功能。使用以下命令显示文件列表：
     </para>
<screen>rpm -qpPl pine-4.44-224.i586.patch.rpm
/etc/pine.conf
/etc/pine.conf.fixed
/usr/bin/pine</screen>
     <para>
      或者，如果已安装增补程序，则使用以下命令：
     </para>
<screen>rpm -qPl pine
/etc/pine.conf
/etc/pine.conf.fixed
/usr/bin/pine</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>如何在系统中安装增补程序 RPM？</term>
    <listitem>
     <para>
      增补程序 RPM 的使用与普通 RPM 相同。唯一的区别就是必须已安装合适的 RPM。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     系统中已安装了哪些增补程序，用于哪些包版本？
    </term>
    <listitem>
     <para>
      使用命令 <command>rpm</command> <option>-qPa</option> 可以显示系统中已安装的所有增补程序的列表。如果新系统中只安装了一个增补程序（如本示例中），则列表如下：
     </para>
<screen>rpm -qPa
pine-4.44-224</screen>
     <para>
      如果以后要了解最初安装了哪个包版本，则可以在 RPM 数据库中获得此信息。对于 <command>pine</command>，可以通过以下命令显示此信息：
     </para>
<screen>rpm -q --basedon pine
pine = 4.44-188</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   <command>rpm</command> 和 <command>rpmbuild</command> 的手册页中提供了详细信息（包括有关 RPM 的增补程序功能的信息）。
  </para>
  <note>
   <title><phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 的官方更新</title>
   <para>
    为了最大限度减小更新的下载大小，<phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 的官方更新不是以增补程序 RPM 的形式提供，而是以增量 RPM 包提供。有关细节，请参见<xref linkend="sec-rpm-delta"/>。
   </para>
  </note>
 </section>

 <section xml:id="sec-rpm-delta">
  <title>增量 RPM 包</title><indexterm> <primary>RPM</primary> <secondary>deltarpm</secondary> </indexterm> <indexterm> <primary>deltarpm</primary> </indexterm>
  <para>
   增量 RPM 包包含旧版本和新版本的 RPM 包之间的差别。在旧 RPM 上应用增量 RPM 将得到全新的 RPM。不需要旧 RPM 的副本，因为增量 RPM 也可以与已安装的 RPM 一起工作。增量 RPM 包的大小甚至比增补程序 RPM 小，这有利于通过因特网传送更新包。缺点是，涉及增量 RPM 的更新操作与使用纯粹 RPM 或增补程序 RPM 进行更新的情况相比，占用的 CPU 周期要长得多。
  </para>
  <para>
   <command>prepdeltarpm</command>、<command>writedeltarpm</command> 和 <command>applydeltarpm</command> 二进制文件是增量 RPM 套件（包 <systemitem>deltarpm</systemitem>）的一部分并帮助您创建和应用增量 RPM 包。使用以下命令，创建名为 <filename>new.delta.rpm</filename> 的增量 RPM。以下命令假设 <filename>old.rpm</filename> 和 <filename>new.rpm</filename> 是存在的：
  </para>
<screen>prepdeltarpm -s seq -i info old.rpm &gt; old.cpio
prepdeltarpm -f new.rpm &gt; new.cpio
xdelta delta -0 old.cpio new.cpio delta
writedeltarpm new.rpm delta info new.delta.rpm</screen>
  <para>
   最后，删除临时工作文件 <filename>old.cpio</filename>、<filename>new.cpio</filename> 和 <filename>delta</filename>。
  </para>
  <para>
   如果旧包已经安装，则使用 <command>applydeltarpm</command> 可以从文件系统重新构建新的 RPM：
  </para>
<screen>applydeltarpm new.delta.rpm new.rpm</screen>
  <para>
   如果不访问文件系统而从旧 RPM 得到它，请使用 <option>-r</option> 选项：
  </para>
<screen>applydeltarpm -r old.rpm new.delta.rpm new.rpm</screen>
  <para>
   关于技术详细信息，请参见 <filename>/usr/share/doc/packages/deltarpm/README</filename>。
  </para>
 </section>

 <section xml:id="sec-rpm-query">
  <title>RPM 查询</title><indexterm> <primary>RPM</primary><secondary>查询</secondary> </indexterm>
  <para>
   使用 <option>-q</option> 选项，<command>rpm</command> 将启动查询，从而能够查看 RPM 存档（通过添加选项 <option>-p</option>）并查询已安装包的 RPM 数据库。可以使用多个开关指定所需信息的类型。请参见<xref linkend="tab-rpm-query"/>。
  </para>
  <table xml:id="tab-rpm-query">
   <title>最重要的 RPM 查询选项</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-i</option>
       </para>
      </entry>
      <entry>
       <para>
        包信息
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-l</option>
       </para>
      </entry>
      <entry>
       <para>
        文件列表
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-f FILE</option>
       </para>
      </entry>
      <entry>
       <para>
        查询包含文件 <replaceable>FILE</replaceable> 的包（必须使用 <replaceable>FILE</replaceable> 指定完整路径）
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        带有状态信息的文件列表（间接指定 <option>-l</option>）
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-d</option>
       </para>
      </entry>
      <entry>
       <para>
        仅列出文档文件（间接指定 <literal>-l</literal>）
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        仅列出配置文件（间接指定 <option>-l</option>）
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--dump</option>
       </para>
      </entry>
      <entry>
       <para>
        带有完整详细信息的文件列表（将用于 <option>-l</option>、<option>-c</option> 或 <option>-d</option>）
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--provides</option>
       </para>
      </entry>
      <entry>
       <para>
        列出包中可被另一个包通过 <option>--requires</option> 请求的功能
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--requires</option>, <option>-R</option>
       </para>
      </entry>
      <entry>
       <para>
        包需要的功能
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--scripts</option>
       </para>
      </entry>
      <entry>
       <para>
        安装脚本（预安装、后安装、卸载）
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   例如，命令 <command>rpm -q -i wget</command> 显示<xref linkend="aus-update-rpm-i"/> 中所示的信息。
  </para>
  <example xml:id="aus-update-rpm-i">
   <title>rpm -q -i wget</title>
<screen>Name        : wget                         Relocations: (not relocatable)
Version     : 1.11.4                            Vendor: openSUSE
Release     : 1.70                          Build Date: Sat 01 Aug 2009 09:49:48 CEST
Install Date: Thu 06 Aug 2009 14:53:24 CEST      Build Host: build18
Group       : Productivity/Networking/Web/Utilities   Source RPM: wget-1.11.4-1.70.src.rpm
Size        : 1525431                          License: GPL v3 or later
Signature   : RSA/8, Sat 01 Aug 2009 09:50:04 CEST, Key ID b88b2fd43dbdc284
Packager    : http://bugs.opensuse.org
URL         : http://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
[...]</screen>
  </example>
  <para>
   只有当您指定带有完整路径的完整文件名时，选项 <option>-f</option> 才起作用。根据需要提供任意多个文件名。例如，以下命令
  </para>
<screen>rpm -q -f /bin/rpm /usr/bin/wget</screen>
  <para>
   产生：
  </para>
<screen>rpm-4.8.0-4.3.x86_64
wget-1.11.4-11.18.x86_64</screen>
  <para>
   如果只知道部分文件名，则可以使用外壳脚本，如<xref linkend="dat-rpm-search"/> 所示。当运行所显示的脚本时，将部分文件名以参数的形式传递给该脚本。
  </para>
  <example xml:id="dat-rpm-search">
   <title>搜索包的脚本</title>
<screen>#! /bin/sh
for i in $(rpm -q -a -l | grep $1); do
    echo "\"$i\" is in package:"
    rpm -q -f $i
    echo ""
done</screen>
  </example>
  <para>
   命令 <command>rpm -q --changelog rpm</command> 按照日期显示特定包（此例中为 <literal>rpm</literal> 程序包）更改信息的详细列表。

  </para>
  <para>
   借助已安装的 RPM 数据库，可以进行校验检查。使用 <option>-V</option>、<option>-y</option> 或 <option>--verify</option> 启动此操作。使用此选项，<command>rpm</command> 显示安装后已被更改的包中的所有文件。<command>rpm</command> 使用 8 个字符符号给出有关以下更改的一些提示：
  </para><indexterm> <primary>RPM</primary><secondary>校验</secondary> </indexterm>
  <table xml:id="tab-rpm-verify">
   <title>RPM 校验选项</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>5</option>
       </para>
      </entry>
      <entry>
       <para>
        MD5 校验和
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>S</option>
       </para>
      </entry>
      <entry>
       <para>
        文件大小
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>L</option>
       </para>
      </entry>
      <entry>
       <para>
        符号链接
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>T</option>
       </para>
      </entry>
      <entry>
       <para>
        修改时间
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>D</option>
       </para>
      </entry>
      <entry>
       <para>
        主要和次要设备编号
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>U</option>
       </para>
      </entry>
      <entry>
       <para>
        拥有者
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>G</option>
       </para>
      </entry>
      <entry>
       <para>
        组
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>M</option>
       </para>
      </entry>
      <entry>
       <para>
        方式（权限和文件类型）
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   对于配置文件，将输出字母 <option>c</option>。例如，对于 <filename>/etc/wgetrc</filename>（<systemitem class="resource">wget</systemitem> 包）的更改：
  </para>
<screen>rpm -V wget
S.5....T c /etc/wgetrc</screen>
  <para>
   RPM 数据库的文件被放置在 <filename>/var/lib/rpm</filename> 中。如果分区 <filename>/usr</filename> 的大小为 1 GB，则此数据库可能会占用将近 30 MB，特别是在完全更新之后。如果数据库比预期大得多，则最好使用选项 <option>--rebuilddb</option> 重构建数据库。在执行此操作之前，制作旧数据库的备份。<command>cron</command> 脚本 <command>cron.daily</command> 每天制作数据库的副本（用 gzip 打包）并将这些副本储存在 <filename>/var/adm/backup/rpmdb</filename> 中。副本的数目是由 <filename>/etc/sysconfig/backup</filename> 中的变量 <systemitem>MAX_RPMDB_BACKUPS</systemitem>（默认值为 <option>5</option>）控制的。对于 1 GB 的 <filename>/usr</filename>，单个备份的大小大约为 1 MB。
  </para><indexterm> <primary>RPM</primary><secondary>数据库</secondary><tertiary>重构建</tertiary> </indexterm>
 </section>

 <section xml:id="sec-rpm-sources">
  <title>安装和编译源包</title><indexterm> <primary>包</primary><secondary>编译</secondary></indexterm><indexterm><primary>源</primary><secondary>编译</secondary></indexterm><indexterm><primary>软件</primary><secondary>编译</secondary></indexterm><indexterm><primary>spm</primary></indexterm>
  <para>
   所有源包都带有 <filename>.src.rpm</filename> 扩展名（源 RPM）。
  </para>
  <note>
   <title>已安装的源包</title>
   <para>
    源包可以从安装媒体复制到硬盘并使用 YaST 解压缩。但是，在包管理器中它们不会被标记为已安装 (<literal>[i]</literal>)。这是因为源包不是在 RPM 数据库中输入的。只有<emphasis>已安装的</emphasis>操作系统软件列在 RPM 数据库中。安装<quote>源包时，只将源代码添加到系统中。</quote>
   </para>
  </note>
  <para>
   以下目录必须可用于 <filename>/usr/src/packages</filename> 中的 <command>rpm</command> 和 <command>rpmbuild</command>（除非在诸如 <filename>/etc/rpmrc</filename> 这样的文件中指定自定义设置）：
  </para>
  <variablelist>
   <varlistentry>
    <term><filename>SOURCES</filename>
    </term>
    <listitem>
     <para>
      代表原始源（<filename>.tar.bz2</filename> 或 <filename>.tar.gz</filename> 文件等）和特定于发布版本的调整（多为 <filename>.diff</filename> 或 <filename>.patch</filename> 文件）
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SPECS</filename>
    </term>
    <listitem>
     <para>
      代表 <filename>.spec</filename> 文件，类似于元 Makefile，该文件控制<emphasis>构建</emphasis>进程
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>BUILD</filename>
    </term>
    <listitem>
     <para>
      在此目录中解压缩、增补和编译所有源
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>RPMS</filename>
    </term>
    <listitem>
     <para>
      储存完整的二进制包的位置
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SRPMS</filename><indexterm><primary>RPM</primary><secondary>SRPMS</secondary> </indexterm></term>
    <listitem>
     <para>
      这里是源 RPM
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   使用 YaST 安装源包时，将在 <filename>/usr/src/packages</filename> 中安装所有需要的组件：源和调整在 <filename>SOURCES</filename> 中，相关的 <filename>.spec</filename> 文件在 <filename>SPECS</filename> 中。
  </para>
  <warning>
   <para>
    不要对系统组件（<systemitem class="resource">glibc</systemitem>、<systemitem class="resource">rpm</systemitem>、<systemitem class="resource">sysvinit</systemitem> 等）进行试验，因为这将会影响系统的稳定性。
   </para>
  </warning>
  <para>
   下面的示例使用 <filename>wget.src.rpm</filename> 包。安装源包后，应具有类似以下列表中的文件：
  </para>
<screen>/usr/src/packages/SOURCES/wget-1.11.4.tar.bz2
/usr/src/packages/SOURCES/wgetrc.patch
/usr/src/packages/SPECS/wget.spec</screen>
  <para>
   <command>rpmbuild -b</command> <replaceable>X</replaceable> /usr/src/packages/SPECS/wget.spec 启动编译。<replaceable>X</replaceable> 是通配符，代表构建进程的不同阶段（有关详细信息，请参见 <option>--help</option> 的输出或 RPM 文档）。以下内容只是简要描述：
  </para>
  <variablelist>
   <varlistentry>
    <term><option>-bp</option>
    </term>
    <listitem>
     <para>
      在 <filename>/usr/src/packages/BUILD</filename> 中准备源：解压和打增补程序。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bc</option>
    </term>
    <listitem>
     <para>
      执行与 <option>-bp</option> 相同的操作，但还进行编译。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bi</option>
    </term>
    <listitem>
     <para>
      执行与 <option>-bp</option> 相同的操作，但还安装生成的软件。注意：如果包不支持 BuildRoot 功能，则可能会重写配置文件。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bb</option>
    </term>
    <listitem>
     <para>
      执行与 <option>-bi</option> 相同的操作，但还创建二进制包。如果编译成功，二进制包应该在 <filename>/usr/src/packages/RPMS</filename> 中。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-ba</option>
    </term>
    <listitem>
     <para>
      执行与 <option>-bb</option> 相同的操作，但还创建源 RPM。如果编译成功，二进制包应该在 <filename>/usr/src/packages/SRPMS</filename> 中。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>--short-circuit</option>
    </term>
    <listitem>
     <para>
      跳过某些步骤。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   现在可以使用 <command>rpm</command> <option>-i</option> 或最好使用 <command>rpm</command> <option> -U</option> 来安装创建的二进制 RPM。使用 <command>rpm</command> 进行安装使它显示在 RPM 数据库中。
  </para>
 </section>

 <section xml:id="sec-rpm-build">
  <title>使用 build 编译 RPM 包</title><indexterm> <primary>包</primary><secondary>使用 build 编译</secondary> </indexterm>
  <para>
   许多包存在的风险是构建进程中会将许多不需要的文件添加到正在运行的系统中。为防止发生这种情况，请使用 <systemitem>build</systemitem>，它将创建构建包的已定义环境。要建立这一 chroot 环境，<command>build</command> 脚本必须和完整的包树结构一起提供。可以通过 NFS 或从 DVD 使用硬盘上的此树。使用 <command>build --rpms</command> <replaceable>directory</replaceable> 设置位置。与 <command>rpm</command> 不同，<command>build</command> 命令在源目录中查找 <filename>.spec</filename> 文件。要用系统中 <filename>/media/dvd</filename> 下装入的 DVD 构建 <filename>wget</filename>（如上例所示），请以 <systemitem class="username">root</systemitem> 用户身份使用以下命令：
  </para>
<screen>cd /usr/src/packages/SOURCES/
mv ../SPECS/wget.spec .
build --rpms /media/dvd/suse/ wget.spec</screen>
  <para>
   随后，将在 <filename>/var/tmp/build-root</filename> 建立一个最小的环境。在此环境中构建包。完成后，生成的包位于 <filename>/var/tmp/build-root/usr/src/packages/RPMS</filename> 中。
  </para>
  <para>
   <command>build</command> 脚本提供多个附加选项。例如，使脚本优先选择您自己的 RPM、忽略构建环境的初始化或者将 <command>rpm</command> 命令限制在上述阶段之一。使用 <command>build</command> <option>--help</option> 并通过阅读 <command>build</command> 手册页来访问更多信息。
  </para>
 </section>

 <section xml:id="sec-rpm-tools">
  <title>用于 RPM 存档和 RPM 数据库的工具</title><indexterm> <primary>RPM</primary><secondary>工具</secondary> </indexterm>
  <para>
   Midnight Commander (<command>mc</command>) 可以显示 RPM 存档的内容并复制部分内容。它将存档表示为虚拟文件系统，提供 Midnight Commander 所有常用的菜单选项。使用 <keycap>F3</keycap> 键显示 <filename>HEADER</filename>。使用光标键和 <keycap>Enter</keycap> 键查看存档结构。使用 <keycap>F5</keycap> 键复制部分存档。
  </para>
  <para>


   拥有全部功能的包管理器将作为 YaST 模块提供。有关细节，请参见<xref linkend="cha-y2-sw"/>。
  </para><indexterm class="endofrange" startref="idx-RPM"/>

 </section>
</section>
